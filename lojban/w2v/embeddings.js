/*! For license information please see embeddings.js.LICENSE.txt */
(()=>{var e={1943:(e,t,n)=>{var s=n(6430),r=n(851),a=n(2520),i=n(87),o=n(1462),u=n(4452),l=n(808);l.alea=s,l.xor128=r,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},6430:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.alea=u}(0,e=n.nmd(e),n.amdD)},4452:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.tychei=u}(0,e=n.nmd(e),n.amdD)},851:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor128=u}(0,e=n.nmd(e),n.amdD)},1462:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],u=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,u=Math.max(u,t.length)),r=0,a=-32;a<u;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},87:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},2520:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},808:(e,t,n)=>{var s;!function(r,a){var i,o=this,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var s=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(r)]}}():e,3),s),p=new f(s),y=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(y,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<u;)i[r]=r++;for(r=0;r<u;r++)i[r]=i[a=d&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=d&r+1],n=n*u+i[d&(i[r]=i[a=d&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function b(e,t){for(var n,s=e+"",r=0;r<s.length;)t[d&r]=d&(n^=19*t[d&r])+s.charCodeAt(r++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),r),e.exports){e.exports=p;try{i=n(3911)}catch(e){}}else void 0===(s=function(){return p}.call(t,n,t,e))||(e.exports=s)}([],Math)},9941:(e,t,n)=>{"use strict";n.d(t,{JL:()=>s,Zu:()=>r});class s{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,s,r){return a("move")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3421:(e,t,n)=>{"use strict";n.d(t,{BV:()=>w,wv:()=>y});var s=n(9941),r=n(3535),a=n(7944),i=n(5202),o=n(8307),u=n(56),l=n(4003),c=n(9740);class h{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let s;const a=()=>{s=n()};let i;const o=l.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of s)e.dataSync();i=Promise.resolve({kernelMs:l.now()-o})}if((0,r.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{d(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function d(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?c.oj(`${s}ms`,9):s.error,o=c.oj(e,25),u=t.rank,l=t.size,h=c.oj(t.shape.toString(),14);let d="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;d+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${h}\t%c${l}\t%c${d}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(1313),m=n(9201);function g(e){return null!=e.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class x{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new h(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof s.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return u.Z(`Initialization of backend ${e} failed`),u.Z(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return x.nextTensorId++}nextVariableId(){return x.nextVariableId++}clone(e){const t=w.runKernel(i.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return w.runKernel(i.RF,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,o.pI)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const l=(0,o.pI)(t,this.backendName);c.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:s}=e;return this.makeTensorFromDataId(t,n,s)}));if(s){const e=this.getTensorsForGradient(t,r,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:h,attrs:d}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,h,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),s&&this.addTapeNode(l,h,t,p,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const s=(0,o.uk)(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&c.HD(e[0])&&(r=e.map((e=>l.encodeString(e))));const a=s.write(r,t,n),i=new f.es(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,c.Ub)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){n=n||"float32";const r=new f.es(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},u=(0,o.uk)(e);null!=u&&(s=u.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=c.wT(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(r instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return w.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!c.cO(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),v);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};t.forEach(((e,t)=>{s[t]=e}));return this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),c.hu(n.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];c.hu(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(a.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const e=(0,a.D)();if(null==e._tfengine){const t=new r.qA(e);e._tfengine=new x(t)}return(0,r.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}x.nextTensorId=0,x.nextVariableId=0;const w=y();function v(e,t){const n={a:e,b:t};return w.runKernel(i.mm,n)}},3535:(e,t,n)=>{"use strict";n.d(t,{qA:()=>a,OB:()=>o,iG:()=>l});var s=n(9740);const r="tfjsflags";class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,s.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(r in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return u}let u=null;function l(e){u=e}},7944:(e,t,n)=>{"use strict";n.d(t,{D:()=>a,R:()=>i});var s=n(4406);let r;function a(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if(void 0!==s)e=s;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function i(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}},5202:(e,t,n)=>{"use strict";n.d(t,{SY:()=>s,VG:()=>r,Sp:()=>a,mm:()=>i,Xz:()=>o,oT:()=>u,IK:()=>l,sJ:()=>c,aJ:()=>h,M2:()=>d,qw:()=>p,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>b,RO:()=>x,_k:()=>y,IM:()=>w,XL:()=>v,zw:()=>k,zv:()=>I,Ly:()=>S,eE:()=>N,RF:()=>$,gJ:()=>C,xn:()=>T,Zz:()=>E,yj:()=>A,Eh:()=>R,mh:()=>F,wU:()=>_,wm:()=>D,x1:()=>O,o2:()=>B,ik:()=>M,mc:()=>L,TR:()=>z,iH:()=>P,Vc:()=>V,QR:()=>W,T0:()=>U,ci:()=>G,sL:()=>H,y7:()=>j,$w:()=>q,p4:()=>K,ek:()=>X,Vn:()=>Y,oH:()=>Z,$g:()=>J,SX:()=>Q,HE:()=>ee,Om:()=>te,hd:()=>ne,NE:()=>se,YF:()=>re,Y0:()=>ae,vw:()=>ie,de:()=>oe,Uy:()=>ue,OR:()=>le,je:()=>ce,sH:()=>he,qi:()=>de,q1:()=>pe,iZ:()=>fe,Ac:()=>me,iJ:()=>ge,Qg:()=>be,J_:()=>xe,av:()=>ye,iW:()=>we,r7:()=>ve,J$:()=>ke,vt:()=>Ie,CA:()=>Se,e7:()=>Ne,Zb:()=>$e,kU:()=>Ce,PY:()=>Te,Vf:()=>Ee,MZ:()=>Ae,qC:()=>Re,eZ:()=>Fe,Hh:()=>_e,Yo:()=>De,BM:()=>Oe,mT:()=>Be,OV:()=>Me,OA:()=>Le,OU:()=>ze,vF:()=>Pe,q2:()=>Ve,c1:()=>We,q8:()=>Ue,jQ:()=>Ge,Vb:()=>He,NZ:()=>je,wY:()=>qe,ku:()=>Ke,yQ:()=>Xe,uv:()=>Ye,cy:()=>Ze,W0:()=>Je,qW:()=>Qe,we:()=>et,Qi:()=>tt,ly:()=>nt,pe:()=>st,o0:()=>rt,Dl:()=>at,e6:()=>it,xJ:()=>ot,$H:()=>ut,qk:()=>lt,HZ:()=>ct,dp:()=>ht,Hm:()=>dt,_Y:()=>pt,zb:()=>ft,Sb:()=>mt,mK:()=>gt,e0:()=>bt,bV:()=>xt,xQ:()=>yt,Ph:()=>wt,oF:()=>vt,p2:()=>kt,RQ:()=>It,w3:()=>St,i5:()=>Nt,a5:()=>$t,MR:()=>Ct,FK:()=>Tt,GB:()=>Et,TQ:()=>At,L8:()=>Rt,Gc:()=>Ft,O3:()=>_t,nh:()=>Dt,YW:()=>Ot,Zj:()=>Bt,D2:()=>Mt,_t:()=>Lt,bK:()=>zt,m2:()=>Pt,_J:()=>Vt,s1:()=>Wt,Xk:()=>Ut,Tr:()=>Gt,sE:()=>Ht,MI:()=>jt,n9:()=>qt,cW:()=>Kt,wx:()=>Xt,G3:()=>Yt,kp:()=>Zt,To:()=>Jt,Qv:()=>Qt,Ru:()=>en,h8:()=>tn,eB:()=>nn,b9:()=>sn,us:()=>rn,_V:()=>an,lu:()=>on});const s="Abs",r="Acos",a="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",h="ArgMin",d="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",b="AvgPool",x="AvgPoolGrad",y="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",I="Bincount",S="BroadcastTo",N="BroadcastArgs",$="Cast",C="Ceil",T="ClipByValue",E="Complex",A="ComplexAbs",R="Concat",F="Conv2D",_="Conv2DBackpropFilter",D="Conv2DBackpropInput",O="Conv3D",B="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",L="Cos",z="Cosh",P="Cumsum",V="CropAndResize",W="DenseBincount",U="DepthToSpace",G="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",j="DepthwiseConv2dNativeBackpropInput",q="Diag",K="Dilation2D",X="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",Z="RealDiv",J="Einsum",Q="Elu",ee="EluGrad",te="Erf",ne="Equal",se="Exp",re="ExpandDims",ae="Expm1",ie="FFT",oe="Fill",ue="FlipLeftRight",le="Floor",ce="FloorDiv",he="FusedBatchNorm",de="GatherV2",pe="GatherNd",fe="Greater",me="GreaterEqual",ge="Identity",be="IFFT",xe="Imag",ye="IsFinite",we="IsInf",ve="IsNan",ke="LeakyRelu",Ie="Less",Se="LessEqual",Ne="LinSpace",$e="Log",Ce="Log1p",Te="LogicalAnd",Ee="LogicalNot",Ae="LogicalOr",Re="LogSoftmax",Fe="LRN",_e="LRNGrad",De="Max",Oe="Maximum",Be="MaxPool",Me="MaxPoolGrad",Le="MaxPool3D",ze="MaxPool3DGrad",Pe="MaxPoolWithArgmax",Ve="Mean",We="Min",Ue="Minimum",Ge="MirrorPad",He="Mod",je="Multinomial",qe="Multiply",Ke="Neg",Xe="NotEqual",Ye="NonMaxSuppressionV3",Ze="NonMaxSuppressionV4",Je="NonMaxSuppressionV5",Qe="OnesLike",et="OneHot",tt="Pack",nt="PadV2",st="Pow",rt="Prelu",at="Prod",it="Range",ot="Real",ut="Reciprocal",lt="Relu",ct="Reshape",ht="ResizeNearestNeighbor",dt="ResizeNearestNeighborGrad",pt="ResizeBilinear",ft="ResizeBilinearGrad",mt="Relu6",gt="Reverse",bt="Round",xt="Rsqrt",yt="ScatterNd",wt="Select",vt="Selu",kt="Slice",It="Sin",St="Sinh",Nt="Sign",$t="Sigmoid",Ct="Softplus",Tt="Sqrt",Et="Sum",At="SpaceToBatchND",Rt="SplitV",Ft="Softmax",_t="SparseFillEmptyRows",Dt="SparseReshape",Ot="SparseSegmentMean",Bt="SparseSegmentSum",Mt="SparseToDense",Lt="SquaredDifference",zt="Square",Pt="StridedSlice",Vt="StringNGrams",Wt="StringSplit",Ut="StringToHashBucketFast",Gt="Sub",Ht="Tan",jt="Tanh",qt="Tile",Kt="TopK",Xt="Transform",Yt="Transpose",Zt="Unique",Jt="Unpack",Qt="UnsortedSegmentSum",en="ZerosLike",tn="Step",nn="FromPixels",sn="RotateWithOffset",rn="_FusedMatMul",an="FusedConv2D",on="FusedDepthwiseConv2D"},8307:(e,t,n)=>{"use strict";n.d(t,{pI:()=>u,uk:()=>l,tr:()=>c,wC:()=>h,Li:()=>d});var s=n(3535),r=n(7944),a=n(56);const i=(0,r.R)("kernelRegistry",(()=>new Map)),o=(0,r.R)("gradRegistry",(()=>new Map));function u(e,t){const n=p(e,t);return i.get(n)}function l(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function h(e){const{kernelName:t,backendName:n}=e,s=p(t,n);i.has(s)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),i.set(s,e)}function d(e){const{kernelName:t}=e;o.has(t)&&(0,s.OB)().getBool("DEBUG")&&a.Z(`Overriding the gradient for '${t}'`),o.set(t,e)}function p(e,t){return`${t}_${e}`}},56:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r,c:()=>a});var s=n(3535);function r(...e){(0,s.OB)().getBool("IS_TEST")||(0,s.OB)().getBool("PROD")||console.warn(...e)}function a(...e){(0,s.OB)().getBool("IS_TEST")||(0,s.OB)().getBool("PROD")||console.log(...e)}},128:(e,t,n)=>{"use strict";n.d(t,{op:()=>a});var s=n(3421),r=n(9740);function a(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const i=(...e)=>{s.BV.startScope(n);try{const t=a(...e);return(0,r.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),s.BV.endScope(t),t}catch(e){throw s.BV.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},7546:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var s=n(3421),r=n(5202);function a(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:a};return s.BV.runKernel(r.e6,{},i)}},9090:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({topk_:function(e,t=1,n=!0){const i=(0,a._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},l={k:t,sorted:n},[c,h]=s.BV.runKernel(r.cW,u,l);return{values:c,indices:h}}})},1313:(e,t,n)=>{"use strict";n.d(t,{es:()=>x,YD:()=>h,_w:()=>w,t3:()=>y,FZ:()=>b,Vp:()=>g,Vi:()=>m});var s=n(7944),r=n(9740);function a(e,t,n,s){const a=(0,r.e3)(t),o=function(e,t,n,s){const a=(0,r.NA)(t),o=s[s.length-1],u=new Array(o).fill(0),c=t.length,h="complex64"===n?l(e):e;if(c>1)for(let e=0;e<a/o;e++){const t=e*o;for(let e=0;e<o;e++)u[e]=Math.max(u[e],i(h[t+e],0,n).length)}return u}(e,t,n,a),c=t.length,h=u(e,t,n,a,o),d=["Tensor"];return s&&(d.push(`  dtype: ${n}`),d.push(`  rank: ${c}`),d.push(`  shape: [${t}]`),d.push("  values:")),d.push(h.map((e=>"    "+e)).join("\n")),d.join("\n")}function i(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,r.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,r.oj)(s,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,s,r,a=!0){const c="complex64"===n?2:1,h=t[0],d=t.length;if(0===d){if("complex64"===n){return[i(l(e)[0],0,n)]}return"bool"===n?[o(e[0])]:[e[0].toString()]}if(1===d){if(h>20){const t=3*c;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((h-3)*c,h*c));return"complex64"===n&&(s=l(s),a=l(a)),["["+s.map(((e,t)=>i(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>i(e,r[h-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>i(e,r[t],n))).join(", ")+"]"]}const p=t.slice(1),f=s.slice(1),m=s[0]*c,g=[];if(h>20){for(let t=0;t<3;t++){const s=t*m,a=s+m;g.push(...u(e.slice(s,a),p,n,f,r,!1))}g.push("...");for(let t=h-3;t<h;t++){const s=t*m,a=s+m;g.push(...u(e.slice(s,a),p,n,f,r,t===h-1))}}else for(let t=0;t<h;t++){const s=t*m,a=s+m;g.push(...u(e.slice(s,a),p,n,f,r,t===h-1))}const b=2===d?",":"";g[0]="["+g[0]+b;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+b;let x=",\n";for(let e=2;e<d;e++)x+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(a?"":x),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(4003);class h{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.NA(e),null!=n){const e=n.length;r.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.rQ(t,this.size),this.strides=(0,r.e3)(e)}set(e,...t){0===t.length&&(t=[0]),r.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,p=null,f=null;function m(e){d=e}function g(e){p=e}function b(e){f=e}class x{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.NA(e),this.strides=(0,r.e3)(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=d().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),d().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=d().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await d().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){return a(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),d().makeVariable(this,e,t,n)}}function y(){return(0,s.R)("Tensor",(()=>x))}Object.defineProperty(x,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),y();class w extends x{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!r.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);d().disposeTensor(this),this.dataId=e.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(w,Symbol.hasInstance,{value:e=>e instanceof x&&null!=e.assign&&e.assign instanceof Function})},9201:(e,t,n)=>{"use strict";n.r(t),n.d(t,{makeTypesMatch:()=>i,assertTypesMatch:()=>o,isTensorInList:()=>u,getTensorsInContainer:()=>l});var s=n(1313),r=n(7139),a=n(9740);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof s.es)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const s=a[e];n.has(s)||(n.add(s),c(s,t,n))}}},8516:(e,t,n)=>{"use strict";n.d(t,{C:()=>u,_1:()=>h,sI:()=>d});var s=n(3421),r=n(3535),a=n(1313),i=n(9740),o=n(4003);function u(e,t){let n=e;if((0,i.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||(0,i.fU)(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&(0,r.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,s,[]),s}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.fU)(e))return void(0,i.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,i.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,i.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],s,n.concat(t))}function c(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n,r="numeric"){if(e instanceof a.es)return c(r,e.dtype,t,n),e;let l=(0,i.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(r)>=0&&(l=r),c(r,l,t,n),null==e||!(0,i.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const h=u(e,l);(0,i.fU)(e)||Array.isArray(e)||(e=[e]);const d="string"!==l?(0,o.toTypedArray)(e,l):(0,i.xH)(e,[],!0);return s.BV.makeTensor(d,h,l)}function d(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>h(e,`${t}[${r}]`,n,s)))}},7139:(e,t,n)=>{"use strict";var s,r,a,i,o;n.d(t,{x8:()=>l,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:r,bool:a,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},4003:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>r.cO,assert:()=>r.hu,assertNonNegativeIntegerDimensions:()=>r.Mu,assertNonNull:()=>r.Cq,assertShapesMatch:()=>r.k5,bytesFromStringArray:()=>r.Ub,bytesPerElement:()=>r.bT,checkConversionForErrors:()=>r.D5,clamp:()=>r.uZ,computeStrides:()=>r.e3,createScalarValue:()=>y,createShuffledIndices:()=>r.U$,decodeString:()=>S,distSquared:()=>r.E7,encodeString:()=>I,fetch:()=>k,fingerPrint64:()=>x,flatten:()=>r.xH,getArrayFromDType:()=>r.rQ,getTypedArrayFromDType:()=>r.WP,hasEncodingLoss:()=>r.QB,hexToLong:()=>o,indexToLoc:()=>r.NE,inferDtype:()=>r.D2,inferFromImplicitShape:()=>r.JZ,isBoolean:()=>r.jn,isFunction:()=>r.mf,isInt:()=>r.GN,isNumber:()=>r.hj,isPromise:()=>r.tI,isScalarShape:()=>r.N9,isString:()=>r.HD,isTypedArray:()=>r.fU,isValidDtype:()=>r.LP,locToIndex:()=>r.qy,makeOnesTypedArray:()=>r.p8,makeZerosNestedTypedArray:()=>r.l6,makeZerosTypedArray:()=>r.wT,nearestDivisor:()=>r.jP,nearestLargerEven:()=>r.nY,now:()=>v,parseAxisParam:()=>r.EC,randUniform:()=>r.bj,repeatedTry:()=>r.WD,rightPad:()=>r.oj,shuffle:()=>r.TV,shuffleCombo:()=>r.d7,sizeFromShape:()=>r.NA,sizeToSquarishShape:()=>r.YP,squeezeShape:()=>r.bp,sum:()=>r.Sm,swap:()=>r.LF,tanh:()=>r.AE,toNestedArray:()=>r.GX,toTypedArray:()=>w});var s=n(3535),r=n(9740),a=n(7808);const i=n.n(a)()||a;function o(e){return i.fromString(e,!0,16)}const u=o("c3a5c85c97cb3127"),l=o("b492b66fbe98f273"),c=o("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function d(e,t,n){const s=e.slice(t,t+n);return i.fromBytes(Array.from(s),!0,!0)}function p(e,t){return d(e,t,8)}function f(e,t){return d(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=o("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function b(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=m(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(m(r,44)),[r.add(s),a.add(i)]}(p(e,t),p(e,t+8),p(e,t+16),p(e,t+24),n,s)}function x(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),s=p(e,0).add(c),r=p(e,t-8);return g(m(r,37).mul(n).add(s),m(s,25).add(r).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return h(c.mul(n).xor(u.mul(s))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),s=p(e,0).mul(l),r=p(e,8),a=p(e,t-8).mul(n),i=p(e,t-16).mul(c);return g(m(s.add(r),43).add(m(a,30)).add(i),s.add(m(r.add(c),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),s=p(e,0).mul(c),r=p(e,8),a=p(e,t-8).mul(n),i=p(e,t-16).mul(c),o=m(s.add(r),43).add(m(a,30)).add(i),u=g(o,s.add(m(r.add(c),18)).add(a),n),l=p(e,16).mul(n),h=p(e,24),d=o.add(p(e,t-32)).mul(n),f=u.add(p(e,t-24)).mul(n);return g(m(l.add(h),43).add(m(d,30)).add(f),l.add(m(h.add(s),18)).add(d),n)}(e,t);let s=n,r=n.mul(l).add(113),a=h(r.mul(c).add(113)).mul(c),o=[i.UZERO,i.UZERO],d=[i.UZERO,i.UZERO];s=s.mul(c).add(p(e,0));let x=0;const y=64*(t-1>>6),w=y+(t-1&63)-63;do{s=m(s.add(r).add(o[0]).add(p(e,x+8)),37).mul(l),r=m(r.add(o[1]).add(p(e,x+48)),42).mul(l),s=s.xor(d[1]),r=r.add(o[0]).add(p(e,x+40)),a=m(a.add(d[0]),33).mul(l),o=b(e,x,o[1].mul(l),s.add(d[0])),d=b(e,x+32,a.add(d[1]),r.add(p(e,x+16))),[a,s]=[s,a],x+=64}while(x!==y);const v=l.add(a.and(255).shl(1));return x=w,d[0]=d[0].add(t-1&63),o[0]=o[0].add(d[0]),d[0]=d[0].add(o[0]),s=m(s.add(r).add(o[0]).add(p(e,x+8)),37).mul(v),r=m(r.add(o[1]).add(p(e,x+48)),42).mul(v),s=s.xor(d[1].mul(9)),r=r.add(o[0].mul(9).add(p(e,x+40))),a=m(a.add(d[0]),33).mul(v),o=b(e,x,o[1].mul(v),s.add(d[0])),d=b(e,x+32,a.add(d[1]),r.add(p(e,x+16))),[a,s]=[s,a],g(g(o[0],d[0],v).add(h(r).mul(u)).add(a),g(o[1],d[1],v).add(s),v)}function y(e,t){return"string"===t?I(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=r.xH(e)),(0,s.OB)().getBool("DEBUG")&&r.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function v(){return(0,s.OB)().platform.now()}function k(e,t){return(0,s.OB)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.decode(e,t)}},9740:(e,t,n)=>{"use strict";function s(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function r(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,o(e,n,s),o(t,n,s)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let s=0;s<e.length;s++){const r=Number(e[s])-Number(t[s]);n+=r*r}return n}function h(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function d(e,t,n=""){h(b(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){h(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||F(e)&&!n)for(let s=0;s<e.length;++s)f(e[s],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1==0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function w(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return s(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(e())return void s();a++;const o=t(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function S(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function N(e,t){const n=t.length;return h((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),h(e.every((e=>x(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function $(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:N(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function F(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function _(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"==typeof e||e instanceof String}function B(e){return"boolean"==typeof e}function M(e){return"number"==typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":O(e)?"string":B(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function W(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=W(e+t*o,i,n,s)}return r}function U(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function G(e,t){const n=H(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function q(e){e.forEach((t=>{h(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>s,d7:()=>r,uZ:()=>a,nY:()=>i,LF:()=>o,Sm:()=>u,bj:()=>l,E7:()=>c,hu:()=>h,k5:()=>d,Cq:()=>p,xH:()=>f,NA:()=>m,N9:()=>g,cO:()=>b,GN:()=>x,AE:()=>y,YP:()=>w,U$:()=>v,oj:()=>k,WD:()=>I,JZ:()=>S,EC:()=>N,bp:()=>$,WP:()=>C,rQ:()=>T,D5:()=>E,LP:()=>A,QB:()=>R,fU:()=>F,bT:()=>_,Ub:()=>D,HD:()=>O,jn:()=>B,hj:()=>M,D2:()=>L,mf:()=>z,jP:()=>P,e3:()=>V,GX:()=>U,p8:()=>G,wT:()=>H,l6:()=>j,Mu:()=>q,qy:()=>K,NE:()=>X,tI:()=>Y})},8698:(e,t,n)=>{var s=n(964),r=n(2643),a=n(7520),i=n(8933),o=n(2298),u=n(2670),l=n(3418);l.alea=s,l.xor128=r,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},964:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.alea=u}(0,e=n.nmd(e),n.amdD)},2670:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.tychei=u}(0,e=n.nmd(e),n.amdD)},2643:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor128=u}(0,e=n.nmd(e),n.amdD)},2298:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],u=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,u=Math.max(u,t.length)),r=0,a=-32;a<u;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},8933:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},7520:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},3418:(e,t,n)=>{var s;!function(r,a){var i,o=this,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var s=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(r)]}}():e,3),s),p=new f(s),y=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(y,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<u;)i[r]=r++;for(r=0;r<u;r++)i[r]=i[a=d&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=d&r+1],n=n*u+i[d&(i[r]=i[a=d&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function b(e,t){for(var n,s=e+"",r=0;r<s.length;)t[d&r]=d&(n^=19*t[d&r])+s.charCodeAt(r++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),r),e.exports){e.exports=p;try{i=n(9165)}catch(e){}}else void 0===(s=function(){return p}.call(t,n,t,e))||(e.exports=s)}([],Math)},5766:(e,t)=>{"use strict";t.byteLength=function(e){var t=u(e),n=t[0],s=t[1];return 3*(n+s)/4-s},t.toByteArray=function(e){var t,n,a=u(e),i=a[0],o=a[1],l=new r(function(e,t,n){return 3*(t+n)/4-n}(0,i,o)),c=0,h=o>0?i-4:i;for(n=0;n<h;n+=4)t=s[e.charCodeAt(n)]<<18|s[e.charCodeAt(n+1)]<<12|s[e.charCodeAt(n+2)]<<6|s[e.charCodeAt(n+3)],l[c++]=t>>16&255,l[c++]=t>>8&255,l[c++]=255&t;2===o&&(t=s[e.charCodeAt(n)]<<2|s[e.charCodeAt(n+1)]>>4,l[c++]=255&t);1===o&&(t=s[e.charCodeAt(n)]<<10|s[e.charCodeAt(n+1)]<<4|s[e.charCodeAt(n+2)]>>2,l[c++]=t>>8&255,l[c++]=255&t);return l},t.fromByteArray=function(e){for(var t,s=e.length,r=s%3,a=[],i=16383,o=0,u=s-r;o<u;o+=i)a.push(l(e,o,o+i>u?u:o+i));1===r?(t=e[s-1],a.push(n[t>>2]+n[t<<4&63]+"==")):2===r&&(t=(e[s-2]<<8)+e[s-1],a.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"="));return a.join("")};for(var n=[],s=[],r="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,o=a.length;i<o;++i)n[i]=a[i],s[a.charCodeAt(i)]=i;function u(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e,t,s){for(var r,a,i=[],o=t;o<s;o+=3)r=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),i.push(n[(a=r)>>18&63]+n[a>>12&63]+n[a>>6&63]+n[63&a]);return i.join("")}s["-".charCodeAt(0)]=62,s["_".charCodeAt(0)]=63},8834:(e,t,n)=>{"use strict";var s=n(5766),r=n(2333);t.Buffer=o,t.SlowBuffer=function(e){+e!=e&&(e=0);return o.alloc(+e)},t.INSPECT_MAX_BYTES=50;var a=2147483647;function i(e){if(e>a)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return t.__proto__=o.prototype,t}function o(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return c(e)}return u(e,t,n)}function u(e,t,n){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!o.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var n=0|p(e,t),s=i(n),r=s.write(e,t);r!==n&&(s=s.slice(0,r));return s}(e,t);if(ArrayBuffer.isView(e))return h(e);if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(V(e,ArrayBuffer)||e&&V(e.buffer,ArrayBuffer))return function(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');var s;s=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n);return s.__proto__=o.prototype,s}(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var s=e.valueOf&&e.valueOf();if(null!=s&&s!==e)return o.from(s,t,n);var r=function(e){if(o.isBuffer(e)){var t=0|d(e.length),n=i(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!=typeof e.length||W(e.length)?i(0):h(e);if("Buffer"===e.type&&Array.isArray(e.data))return h(e.data)}(e);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return o.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function c(e){return l(e),i(e<0?0:0|d(e))}function h(e){for(var t=e.length<0?0:0|d(e.length),n=i(t),s=0;s<t;s+=1)n[s]=255&e[s];return n}function d(e){if(e>=a)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a.toString(16)+" bytes");return 0|e}function p(e,t){if(o.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||V(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var n=e.length,s=arguments.length>2&&!0===arguments[2];if(!s&&0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return L(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return z(e).length;default:if(r)return s?-1:L(e).length;t=(""+t).toLowerCase(),r=!0}}function f(e,t,n){var s=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return E(this,t,n);case"utf8":case"utf-8":return N(this,t,n);case"ascii":return C(this,t,n);case"latin1":case"binary":return T(this,t,n);case"base64":return S(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,t,n);default:if(s)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),s=!0}}function m(e,t,n){var s=e[t];e[t]=e[n],e[n]=s}function g(e,t,n,s,r){if(0===e.length)return-1;if("string"==typeof n?(s=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),W(n=+n)&&(n=r?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(r)return-1;n=e.length-1}else if(n<0){if(!r)return-1;n=0}if("string"==typeof t&&(t=o.from(t,s)),o.isBuffer(t))return 0===t.length?-1:b(e,t,n,s,r);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):b(e,[t],n,s,r);throw new TypeError("val must be string, number or Buffer")}function b(e,t,n,s,r){var a,i=1,o=e.length,u=t.length;if(void 0!==s&&("ucs2"===(s=String(s).toLowerCase())||"ucs-2"===s||"utf16le"===s||"utf-16le"===s)){if(e.length<2||t.length<2)return-1;i=2,o/=2,u/=2,n/=2}function l(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(r){var c=-1;for(a=n;a<o;a++)if(l(e,a)===l(t,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===u)return c*i}else-1!==c&&(a-=a-c),c=-1}else for(n+u>o&&(n=o-u),a=n;a>=0;a--){for(var h=!0,d=0;d<u;d++)if(l(e,a+d)!==l(t,d)){h=!1;break}if(h)return a}return-1}function x(e,t,n,s){n=Number(n)||0;var r=e.length-n;s?(s=Number(s))>r&&(s=r):s=r;var a=t.length;s>a/2&&(s=a/2);for(var i=0;i<s;++i){var o=parseInt(t.substr(2*i,2),16);if(W(o))return i;e[n+i]=o}return i}function y(e,t,n,s){return P(L(t,e.length-n),e,n,s)}function w(e,t,n,s){return P(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,s)}function v(e,t,n,s){return w(e,t,n,s)}function k(e,t,n,s){return P(z(t),e,n,s)}function I(e,t,n,s){return P(function(e,t){for(var n,s,r,a=[],i=0;i<e.length&&!((t-=2)<0);++i)s=(n=e.charCodeAt(i))>>8,r=n%256,a.push(r),a.push(s);return a}(t,e.length-n),e,n,s)}function S(e,t,n){return 0===t&&n===e.length?s.fromByteArray(e):s.fromByteArray(e.slice(t,n))}function N(e,t,n){n=Math.min(e.length,n);for(var s=[],r=t;r<n;){var a,i,o,u,l=e[r],c=null,h=l>239?4:l>223?3:l>191?2:1;if(r+h<=n)switch(h){case 1:l<128&&(c=l);break;case 2:128==(192&(a=e[r+1]))&&(u=(31&l)<<6|63&a)>127&&(c=u);break;case 3:a=e[r+1],i=e[r+2],128==(192&a)&&128==(192&i)&&(u=(15&l)<<12|(63&a)<<6|63&i)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:a=e[r+1],i=e[r+2],o=e[r+3],128==(192&a)&&128==(192&i)&&128==(192&o)&&(u=(15&l)<<18|(63&a)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(c=u)}null===c?(c=65533,h=1):c>65535&&(c-=65536,s.push(c>>>10&1023|55296),c=56320|1023&c),s.push(c),r+=h}return function(e){var t=e.length;if(t<=$)return String.fromCharCode.apply(String,e);var n="",s=0;for(;s<t;)n+=String.fromCharCode.apply(String,e.slice(s,s+=$));return n}(s)}t.kMaxLength=a,o.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()}catch(e){return!1}}(),o.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(o.prototype,"parent",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.buffer}}),Object.defineProperty(o.prototype,"offset",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&o[Symbol.species]===o&&Object.defineProperty(o,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),o.poolSize=8192,o.from=function(e,t,n){return u(e,t,n)},o.prototype.__proto__=Uint8Array.prototype,o.__proto__=Uint8Array,o.alloc=function(e,t,n){return function(e,t,n){return l(e),e<=0?i(e):void 0!==t?"string"==typeof n?i(e).fill(t,n):i(e).fill(t):i(e)}(e,t,n)},o.allocUnsafe=function(e){return c(e)},o.allocUnsafeSlow=function(e){return c(e)},o.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==o.prototype},o.compare=function(e,t){if(V(e,Uint8Array)&&(e=o.from(e,e.offset,e.byteLength)),V(t,Uint8Array)&&(t=o.from(t,t.offset,t.byteLength)),!o.isBuffer(e)||!o.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var n=e.length,s=t.length,r=0,a=Math.min(n,s);r<a;++r)if(e[r]!==t[r]){n=e[r],s=t[r];break}return n<s?-1:s<n?1:0},o.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},o.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return o.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var s=o.allocUnsafe(t),r=0;for(n=0;n<e.length;++n){var a=e[n];if(V(a,Uint8Array)&&(a=o.from(a)),!o.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(s,r),r+=a.length}return s},o.byteLength=p,o.prototype._isBuffer=!0,o.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)m(this,t,t+1);return this},o.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},o.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},o.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?N(this,0,e):f.apply(this,arguments)},o.prototype.toLocaleString=o.prototype.toString,o.prototype.equals=function(e){if(!o.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===o.compare(this,e)},o.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},o.prototype.compare=function(e,t,n,s,r){if(V(e,Uint8Array)&&(e=o.from(e,e.offset,e.byteLength)),!o.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===s&&(s=0),void 0===r&&(r=this.length),t<0||n>e.length||s<0||r>this.length)throw new RangeError("out of range index");if(s>=r&&t>=n)return 0;if(s>=r)return-1;if(t>=n)return 1;if(this===e)return 0;for(var a=(r>>>=0)-(s>>>=0),i=(n>>>=0)-(t>>>=0),u=Math.min(a,i),l=this.slice(s,r),c=e.slice(t,n),h=0;h<u;++h)if(l[h]!==c[h]){a=l[h],i=c[h];break}return a<i?-1:i<a?1:0},o.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},o.prototype.indexOf=function(e,t,n){return g(this,e,t,n,!0)},o.prototype.lastIndexOf=function(e,t,n){return g(this,e,t,n,!1)},o.prototype.write=function(e,t,n,s){if(void 0===t)s="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)s=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===s&&(s="utf8")):(s=n,n=void 0)}var r=this.length-t;if((void 0===n||n>r)&&(n=r),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");s||(s="utf8");for(var a=!1;;)switch(s){case"hex":return x(this,e,t,n);case"utf8":case"utf-8":return y(this,e,t,n);case"ascii":return w(this,e,t,n);case"latin1":case"binary":return v(this,e,t,n);case"base64":return k(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+s);s=(""+s).toLowerCase(),a=!0}},o.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var $=4096;function C(e,t,n){var s="";n=Math.min(e.length,n);for(var r=t;r<n;++r)s+=String.fromCharCode(127&e[r]);return s}function T(e,t,n){var s="";n=Math.min(e.length,n);for(var r=t;r<n;++r)s+=String.fromCharCode(e[r]);return s}function E(e,t,n){var s=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>s)&&(n=s);for(var r="",a=t;a<n;++a)r+=M(e[a]);return r}function A(e,t,n){for(var s=e.slice(t,n),r="",a=0;a<s.length;a+=2)r+=String.fromCharCode(s[a]+256*s[a+1]);return r}function R(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function F(e,t,n,s,r,a){if(!o.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<a)throw new RangeError('"value" argument is out of bounds');if(n+s>e.length)throw new RangeError("Index out of range")}function _(e,t,n,s,r,a){if(n+s>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function D(e,t,n,s,a){return t=+t,n>>>=0,a||_(e,0,n,4),r.write(e,t,n,s,23,4),n+4}function O(e,t,n,s,a){return t=+t,n>>>=0,a||_(e,0,n,8),r.write(e,t,n,s,52,8),n+8}o.prototype.slice=function(e,t){var n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);var s=this.subarray(e,t);return s.__proto__=o.prototype,s},o.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||R(e,t,this.length);for(var s=this[e],r=1,a=0;++a<t&&(r*=256);)s+=this[e+a]*r;return s},o.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||R(e,t,this.length);for(var s=this[e+--t],r=1;t>0&&(r*=256);)s+=this[e+--t]*r;return s},o.prototype.readUInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),this[e]},o.prototype.readUInt16LE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]|this[e+1]<<8},o.prototype.readUInt16BE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]<<8|this[e+1]},o.prototype.readUInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},o.prototype.readUInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},o.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||R(e,t,this.length);for(var s=this[e],r=1,a=0;++a<t&&(r*=256);)s+=this[e+a]*r;return s>=(r*=128)&&(s-=Math.pow(2,8*t)),s},o.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||R(e,t,this.length);for(var s=t,r=1,a=this[e+--s];s>0&&(r*=256);)a+=this[e+--s]*r;return a>=(r*=128)&&(a-=Math.pow(2,8*t)),a},o.prototype.readInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},o.prototype.readInt16LE=function(e,t){e>>>=0,t||R(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},o.prototype.readInt16BE=function(e,t){e>>>=0,t||R(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},o.prototype.readInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},o.prototype.readInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},o.prototype.readFloatLE=function(e,t){return e>>>=0,t||R(e,4,this.length),r.read(this,e,!0,23,4)},o.prototype.readFloatBE=function(e,t){return e>>>=0,t||R(e,4,this.length),r.read(this,e,!1,23,4)},o.prototype.readDoubleLE=function(e,t){return e>>>=0,t||R(e,8,this.length),r.read(this,e,!0,52,8)},o.prototype.readDoubleBE=function(e,t){return e>>>=0,t||R(e,8,this.length),r.read(this,e,!1,52,8)},o.prototype.writeUIntLE=function(e,t,n,s){(e=+e,t>>>=0,n>>>=0,s)||F(this,e,t,n,Math.pow(2,8*n)-1,0);var r=1,a=0;for(this[t]=255&e;++a<n&&(r*=256);)this[t+a]=e/r&255;return t+n},o.prototype.writeUIntBE=function(e,t,n,s){(e=+e,t>>>=0,n>>>=0,s)||F(this,e,t,n,Math.pow(2,8*n)-1,0);var r=n-1,a=1;for(this[t+r]=255&e;--r>=0&&(a*=256);)this[t+r]=e/a&255;return t+n},o.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,1,255,0),this[t]=255&e,t+1},o.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},o.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},o.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},o.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},o.prototype.writeIntLE=function(e,t,n,s){if(e=+e,t>>>=0,!s){var r=Math.pow(2,8*n-1);F(this,e,t,n,r-1,-r)}var a=0,i=1,o=0;for(this[t]=255&e;++a<n&&(i*=256);)e<0&&0===o&&0!==this[t+a-1]&&(o=1),this[t+a]=(e/i>>0)-o&255;return t+n},o.prototype.writeIntBE=function(e,t,n,s){if(e=+e,t>>>=0,!s){var r=Math.pow(2,8*n-1);F(this,e,t,n,r-1,-r)}var a=n-1,i=1,o=0;for(this[t+a]=255&e;--a>=0&&(i*=256);)e<0&&0===o&&0!==this[t+a+1]&&(o=1),this[t+a]=(e/i>>0)-o&255;return t+n},o.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},o.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},o.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},o.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},o.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},o.prototype.writeFloatLE=function(e,t,n){return D(this,e,t,!0,n)},o.prototype.writeFloatBE=function(e,t,n){return D(this,e,t,!1,n)},o.prototype.writeDoubleLE=function(e,t,n){return O(this,e,t,!0,n)},o.prototype.writeDoubleBE=function(e,t,n){return O(this,e,t,!1,n)},o.prototype.copy=function(e,t,n,s){if(!o.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),s||0===s||(s=this.length),t>=e.length&&(t=e.length),t||(t=0),s>0&&s<n&&(s=n),s===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(s<0)throw new RangeError("sourceEnd out of bounds");s>this.length&&(s=this.length),e.length-t<s-n&&(s=e.length-t+n);var r=s-n;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,n,s);else if(this===e&&n<t&&t<s)for(var a=r-1;a>=0;--a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,s),t);return r},o.prototype.fill=function(e,t,n,s){if("string"==typeof e){if("string"==typeof t?(s=t,t=0,n=this.length):"string"==typeof n&&(s=n,n=this.length),void 0!==s&&"string"!=typeof s)throw new TypeError("encoding must be a string");if("string"==typeof s&&!o.isEncoding(s))throw new TypeError("Unknown encoding: "+s);if(1===e.length){var r=e.charCodeAt(0);("utf8"===s&&r<128||"latin1"===s)&&(e=r)}}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var a;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(a=t;a<n;++a)this[a]=e;else{var i=o.isBuffer(e)?e:o.from(e,s),u=i.length;if(0===u)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<n-t;++a)this[a+t]=i[a%u]}return this};var B=/[^+/0-9A-Za-z-_]/g;function M(e){return e<16?"0"+e.toString(16):e.toString(16)}function L(e,t){var n;t=t||1/0;for(var s=e.length,r=null,a=[],i=0;i<s;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!r){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(i+1===s){(t-=3)>-1&&a.push(239,191,189);continue}r=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),r=n;continue}n=65536+(r-55296<<10|n-56320)}else r&&(t-=3)>-1&&a.push(239,191,189);if(r=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function z(e){return s.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(B,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function P(e,t,n,s){for(var r=0;r<s&&!(r+n>=t.length||r>=e.length);++r)t[r+n]=e[r];return r}function V(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function W(e){return e!=e}},2333:(e,t)=>{t.read=function(e,t,n,s,r){var a,i,o=8*r-s-1,u=(1<<o)-1,l=u>>1,c=-7,h=n?r-1:0,d=n?-1:1,p=e[t+h];for(h+=d,a=p&(1<<-c)-1,p>>=-c,c+=o;c>0;a=256*a+e[t+h],h+=d,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=s;c>0;i=256*i+e[t+h],h+=d,c-=8);if(0===a)a=1-l;else{if(a===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,s),a-=l}return(p?-1:1)*i*Math.pow(2,a-s)},t.write=function(e,t,n,s,r,a){var i,o,u,l=8*a-r-1,c=(1<<l)-1,h=c>>1,d=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,p=s?0:a-1,f=s?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=c):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),(t+=i+h>=1?d/u:d*Math.pow(2,1-h))*u>=2&&(i++,u/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(t*u-1)*Math.pow(2,r),i+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,r),i=0));r>=8;e[n+p]=255&o,p+=f,o/=256,r-=8);for(i=i<<r|o,l+=r;l>0;e[n+p]=255&i,p+=f,i/=256,l-=8);e[n+p-f]|=128*m}},7808:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},a={};function i(e,t){var n,s,i;return t?(i=0<=(e>>>=0)&&e<256)&&(s=a[e])?s:(n=u(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=u(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:g;if(t){if(e<0)return b;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,s){return new n(e,t,s)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(l(n,8)),a=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var d=o(l(n,u));a=a.mul(d).add(o(h))}else a=(a=a.mul(r)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var b=i(0,!0);n.UZERO=b;var x=i(1);n.ONE=x;var y=i(1,!0);n.UONE=y;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(l(e,6),this.unsigned),a=this,i="";;){var u=a.div(r),c=(a.sub(u.mul(r)).toInt()>>>0).toString(e);if((a=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=r+l)>>>16,c+=(d+=n+o)>>>16,c+=t+i,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(s(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,x=0,y=0;return x+=(y+=i*p)>>>16,b+=(x+=a*p)>>>16,x&=65535,b+=(x+=i*d)>>>16,f+=(b+=r*p)>>>16,b&=65535,f+=(b+=a*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+r*d+a*c+i*l,u((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return y;a=b}else{if(this.eq(I))return e.eq(x)||e.eq(w)?I:e.eq(I)?x:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:w:(r=this.sub(e.mul(n)),a=n.add(r.div(e)));if(e.eq(I))return this.unsigned?b:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=x),a=a.add(d),r=r.sub(p)}return a},S.div=S.divide,S.modulo=function(e){return s(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return s(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return s(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return s(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6954:(e,t,n)=>{var s,r=function(){var e=String.fromCharCode,t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",s={};function r(e,t){if(!s[e]){s[e]={};for(var n=0;n<e.length;n++)s[e][e.charAt(n)]=n}return s[e][t]}var a={compressToBase64:function(e){if(null==e)return"";var n=a._compress(e,6,(function(e){return t.charAt(e)}));switch(n.length%4){default:return n;case 1:return n+"===";case 2:return n+"==";case 3:return n+"="}},decompressFromBase64:function(e){return null==e?"":""==e?null:a._decompress(e.length,32,(function(n){return r(t,e.charAt(n))}))},compressToUTF16:function(t){return null==t?"":a._compress(t,15,(function(t){return e(t+32)}))+" "},decompressFromUTF16:function(e){return null==e?"":""==e?null:a._decompress(e.length,16384,(function(t){return e.charCodeAt(t)-32}))},compressToUint8Array:function(e){for(var t=a.compress(e),n=new Uint8Array(2*t.length),s=0,r=t.length;s<r;s++){var i=t.charCodeAt(s);n[2*s]=i>>>8,n[2*s+1]=i%256}return n},decompressFromUint8Array:function(t){if(null==t)return a.decompress(t);for(var n=new Array(t.length/2),s=0,r=n.length;s<r;s++)n[s]=256*t[2*s]+t[2*s+1];var i=[];return n.forEach((function(t){i.push(e(t))})),a.decompress(i.join(""))},compressToEncodedURIComponent:function(e){return null==e?"":a._compress(e,6,(function(e){return n.charAt(e)}))},decompressFromEncodedURIComponent:function(e){return null==e?"":""==e?null:(e=e.replace(/ /g,"+"),a._decompress(e.length,32,(function(t){return r(n,e.charAt(t))})))},compress:function(t){return a._compress(t,16,(function(t){return e(t)}))},_compress:function(e,t,n){if(null==e)return"";var s,r,a,i={},o={},u="",l="",c="",h=2,d=3,p=2,f=[],m=0,g=0;for(a=0;a<e.length;a+=1)if(u=e.charAt(a),Object.prototype.hasOwnProperty.call(i,u)||(i[u]=d++,o[u]=!0),l=c+u,Object.prototype.hasOwnProperty.call(i,l))c=l;else{if(Object.prototype.hasOwnProperty.call(o,c)){if(c.charCodeAt(0)<256){for(s=0;s<p;s++)m<<=1,g==t-1?(g=0,f.push(n(m)),m=0):g++;for(r=c.charCodeAt(0),s=0;s<8;s++)m=m<<1|1&r,g==t-1?(g=0,f.push(n(m)),m=0):g++,r>>=1}else{for(r=1,s=0;s<p;s++)m=m<<1|r,g==t-1?(g=0,f.push(n(m)),m=0):g++,r=0;for(r=c.charCodeAt(0),s=0;s<16;s++)m=m<<1|1&r,g==t-1?(g=0,f.push(n(m)),m=0):g++,r>>=1}0==--h&&(h=Math.pow(2,p),p++),delete o[c]}else for(r=i[c],s=0;s<p;s++)m=m<<1|1&r,g==t-1?(g=0,f.push(n(m)),m=0):g++,r>>=1;0==--h&&(h=Math.pow(2,p),p++),i[l]=d++,c=String(u)}if(""!==c){if(Object.prototype.hasOwnProperty.call(o,c)){if(c.charCodeAt(0)<256){for(s=0;s<p;s++)m<<=1,g==t-1?(g=0,f.push(n(m)),m=0):g++;for(r=c.charCodeAt(0),s=0;s<8;s++)m=m<<1|1&r,g==t-1?(g=0,f.push(n(m)),m=0):g++,r>>=1}else{for(r=1,s=0;s<p;s++)m=m<<1|r,g==t-1?(g=0,f.push(n(m)),m=0):g++,r=0;for(r=c.charCodeAt(0),s=0;s<16;s++)m=m<<1|1&r,g==t-1?(g=0,f.push(n(m)),m=0):g++,r>>=1}0==--h&&(h=Math.pow(2,p),p++),delete o[c]}else for(r=i[c],s=0;s<p;s++)m=m<<1|1&r,g==t-1?(g=0,f.push(n(m)),m=0):g++,r>>=1;0==--h&&(h=Math.pow(2,p),p++)}for(r=2,s=0;s<p;s++)m=m<<1|1&r,g==t-1?(g=0,f.push(n(m)),m=0):g++,r>>=1;for(;;){if(m<<=1,g==t-1){f.push(n(m));break}g++}return f.join("")},decompress:function(e){return null==e?"":""==e?null:a._decompress(e.length,32768,(function(t){return e.charCodeAt(t)}))},_decompress:function(t,n,s){var r,a,i,o,u,l,c,h=[],d=4,p=4,f=3,m="",g=[],b={val:s(0),position:n,index:1};for(r=0;r<3;r+=1)h[r]=r;for(i=0,u=Math.pow(2,2),l=1;l!=u;)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=n,b.val=s(b.index++)),i|=(o>0?1:0)*l,l<<=1;switch(i){case 0:for(i=0,u=Math.pow(2,8),l=1;l!=u;)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=n,b.val=s(b.index++)),i|=(o>0?1:0)*l,l<<=1;c=e(i);break;case 1:for(i=0,u=Math.pow(2,16),l=1;l!=u;)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=n,b.val=s(b.index++)),i|=(o>0?1:0)*l,l<<=1;c=e(i);break;case 2:return""}for(h[3]=c,a=c,g.push(c);;){if(b.index>t)return"";for(i=0,u=Math.pow(2,f),l=1;l!=u;)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=n,b.val=s(b.index++)),i|=(o>0?1:0)*l,l<<=1;switch(c=i){case 0:for(i=0,u=Math.pow(2,8),l=1;l!=u;)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=n,b.val=s(b.index++)),i|=(o>0?1:0)*l,l<<=1;h[p++]=e(i),c=p-1,d--;break;case 1:for(i=0,u=Math.pow(2,16),l=1;l!=u;)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=n,b.val=s(b.index++)),i|=(o>0?1:0)*l,l<<=1;h[p++]=e(i),c=p-1,d--;break;case 2:return g.join("")}if(0==d&&(d=Math.pow(2,f),f++),h[c])m=h[c];else{if(c!==p)return null;m=a+a.charAt(0)}g.push(m),h[p++]=a+m.charAt(0),a=m,0==--d&&(d=Math.pow(2,f),f++)}}};return a}();void 0===(s=function(){return r}.call(t,n,t,e))||(e.exports=s)},4406:e=>{var t,n,s=e.exports={};function r(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function i(e){if(t===setTimeout)return setTimeout(e,0);if((t===r||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:r}catch(e){t=r}try{n="function"==typeof clearTimeout?clearTimeout:a}catch(e){n=a}}();var o,u=[],l=!1,c=-1;function h(){l&&o&&(l=!1,o.length?u=o.concat(u):c=-1,u.length&&d())}function d(){if(!l){var e=i(h);l=!0;for(var t=u.length;t;){for(o=u,u=[];++c<t;)o&&o[c].run();c=-1,t=u.length}o=null,l=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function f(){}s.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new p(e,t)),1!==u.length||l||i(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=f,s.addListener=f,s.once=f,s.off=f,s.removeListener=f,s.removeAllListeners=f,s.emit=f,s.prependListener=f,s.prependOnceListener=f,s.listeners=function(e){return[]},s.binding=function(e){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},521:(e,t,n)=>{var s=n(8421),r=n(2824),a=n(244),i=n(330),o=n(5028),u=n(3929),l=n(3154);l.alea=s,l.xor128=r,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},8421:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.alea=u}(0,e=n.nmd(e),n.amdD)},3929:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.tychei=u}(0,e=n.nmd(e),n.amdD)},2824:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor128=u}(0,e=n.nmd(e),n.amdD)},5028:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],u=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,u=Math.max(u,t.length)),r=0,a=-32;a<u;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},330:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},244:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},3154:(e,t,n)=>{var s;!function(r,a){var i,o=(0,eval)("this"),u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var s=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(r)]}}():e,3),s),p=new f(s),y=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(y,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<u;)i[r]=r++;for(r=0;r<u;r++)i[r]=i[a=d&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=d&r+1],n=n*u+i[d&(i[r]=i[a=d&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function b(e,t){for(var n,s=e+"",r=0;r<s.length;)t[d&r]=d&(n^=19*t[d&r])+s.charCodeAt(r++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),r),e.exports){e.exports=p;try{i=n(660)}catch(e){}}else void 0===(s=function(){return p}.call(t,n,t,e))||(e.exports=s)}([],Math)},3911:()=>{},327:()=>{},6843:()=>{},9165:()=>{},7796:()=>{},451:()=>{},9182:()=>{},660:()=>{}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var a=t[s]={id:s,loaded:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>we,computeFlatOffset:()=>_e,computeOutShape:()=>ke,getNormalizedAxes:()=>$e,isSliceContinous:()=>Fe,maskToAxes:()=>ve,parseSliceParams:()=>De,sliceInfo:()=>Oe,startForAxis:()=>Ae,startIndicesWithElidedDims:()=>Ce,stopForAxis:()=>Re,stopIndicesWithElidedDims:()=>Te,stridesForAxis:()=>Ee,stridesWithElidedDims:()=>Ie});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Ca,computeOutShape:()=>$a,segOpComputeOptimalWindowSize:()=>Na});var s={};n.r(s),n.d(s,{ERF_A1:()=>Gr,ERF_A2:()=>Hr,ERF_A3:()=>jr,ERF_A4:()=>qr,ERF_A5:()=>Kr,ERF_P:()=>Ur,PARALLELIZE_THRESHOLD:()=>Er,SELU_SCALE:()=>Wr,SELU_SCALEALPHA:()=>Vr,applyActivation:()=>bs,assertAndGetBroadcastShape:()=>ye,assertAxesAreInnerMostDims:()=>gn,assertParamsConsistent:()=>Cr,assignToTypedArray:()=>ta,axesAreInnerMostDims:()=>dn,calculateShapes:()=>Pr,checkEinsumDimSizes:()=>ua,checkPadOnDimRoundingMode:()=>mt,combineLocations:()=>pn,complexWithEvenIndex:()=>Jr,complexWithOddIndex:()=>Qr,computeConv2DInfo:()=>at,computeConv3DInfo:()=>it,computeDefaultPad:()=>ot,computeDilation2DInfo:()=>nt,computeOptimalWindowSize:()=>Ar,computeOutAndReduceShapes:()=>fn,computeOutShape:()=>Tr,computePool2DInfo:()=>st,computePool3DInfo:()=>rt,convertConv2DDataFormat:()=>ft,decodeEinsumEquation:()=>ia,eitherStridesOrDilationsAreOne:()=>pt,expandShapeToKeepDim:()=>mn,exponent:()=>sa,exponents:()=>na,fromStringArrayToUint8:()=>Ea,fromUint8ToStringArray:()=>Ta,getAxesPermutation:()=>bn,getBroadcastDims:()=>be,getComplexWithIndex:()=>ea,getEinsumComputePath:()=>la,getEinsumPermutation:()=>oa,getFusedBiasGradient:()=>gs,getFusedDyActivation:()=>ms,getImageCenter:()=>Rr,getInnerMostAxes:()=>yn,getPermuted:()=>_r,getReductionAxes:()=>xe,getReshaped:()=>Fr,getReshapedPermuted:()=>Dr,getSliceBeginCoords:()=>Or,getSliceSize:()=>Br,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>pa,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>fa,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>ma,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>xa,getSparseReshapeInputOutputMismatchErrorMessage:()=>wa,getSparseReshapeInputOutputMultipleErrorMessage:()=>ya,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>ga,getSparseReshapeNegativeOutputDimErrorMessage:()=>ba,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Sa,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>va,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>ka,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Ia,getUndoAxesPermutation:()=>xn,isIdentityPermutation:()=>ca,log:()=>Xr.c,mergeRealAndImagArrays:()=>Yr,prepareAndValidate:()=>Mr,prepareSplitSize:()=>da,segment_util:()=>t,shouldFuse:()=>xs,slice_util:()=>e,splitRealAndImagArrays:()=>Zr,tupleValuesAreOne:()=>dt,upcastType:()=>Ye.x8,validateInput:()=>zr,validateUpdateShape:()=>Lr,warn:()=>Xr.Z});var r={};n.r(r),n.d(r,{addImpl:()=>am,bincountImpl:()=>Zm,bincountReduceImpl:()=>Jm,ceilImpl:()=>tg,concatImpl:()=>og,equalImpl:()=>Ug,expImpl:()=>eb,expm1Impl:()=>ab,floorImpl:()=>kb,gatherNdImpl:()=>Ab,gatherV2Impl:()=>Fb,greaterEqualImpl:()=>Mb,greaterImpl:()=>Db,lessEqualImpl:()=>Yb,lessImpl:()=>qb,linSpaceImpl:()=>Qb,logImpl:()=>tx,maxImpl:()=>gx,maximumImpl:()=>yx,minimumImpl:()=>Ex,multiplyImpl:()=>Og,negImpl:()=>Px,notEqualImpl:()=>Kx,prodImpl:()=>oy,rangeImpl:()=>ly,rsqrtImpl:()=>vy,sigmoidImpl:()=>jf,simpleAbsImpl:()=>fm,sliceImpl:()=>qm,sparseFillEmptyRowsImpl:()=>Vy,sparseReshapeImpl:()=>Uy,sparseSegmentReductionImpl:()=>Hy,sqrtImpl:()=>Yy,squaredDifferenceImpl:()=>ew,stridedSliceImpl:()=>aw,stringNGramsImpl:()=>uw,stringSplitImpl:()=>hw,stringToHashBucketFastImpl:()=>pw,subImpl:()=>hb,tileImpl:()=>yw,topKImpl:()=>Iw,transposeImpl:()=>vm,uniqueImpl:()=>Aw});n(6954);var a=n(3421);let i;function o(e){if(void 0!==i)return i;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function u(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var l=n(3535),c=n(4406);const h=(0,l.OB)();h.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),h.registerFlag("IS_BROWSER",(()=>u())),h.registerFlag("IS_NODE",(()=>void 0!==c&&void 0!==c.versions&&void 0!==c.versions.node)),h.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),h.registerFlag("PROD",(()=>!1)),h.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>h.getBool("DEBUG"))),h.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),h.registerFlag("IS_TEST",(()=>!1)),h.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),h.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var d=n(5202),p=n(8516),f=n(9740),m=n(128);const g=(0,m.op)({complex_:function(e,t){const n=(0,p._1)(e,"real","complex"),s=(0,p._1)(t,"imag","complex");f.k5(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return a.BV.runKernel(d.Zz,r)}});var b=n(4003);function x(e,t,n,s){if(null==s&&(s=(0,f.D2)(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,f.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,f.Mu)(t);const e=(0,f.NA)(t),s=(0,f.NA)(n);(0,f.hu)(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],r=e!==n.length-1||s!==(0,f.NA)(t.slice(e));(0,f.hu)(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,f.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?(0,b.toTypedArray)(e,s):(0,f.xH)(e,[],!0),a.BV.makeTensor(e,t,s)}function y(e,t,n){return x(e,t,(0,p.C)(e,n),n)}var w=n(8834).Buffer;async function v(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:k(await Promise.all(s)),specs:n}}function k(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const I=void 0!==w&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function S(e){return I?w.byteLength(e):new Blob([e]).size}function N(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function $(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function C(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function T(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:S(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:S(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class E{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==E.instance&&(E.instance=new E),E.instance}static registerSaveRouter(e){E.getInstance().saveRouters.push(e)}static registerLoadRouter(e){E.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return E.getHandlers(e,"save")}static getLoadHandlers(e,t){return E.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?E.getInstance().loadRouters:E.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const A="tensorflowjs",R="models_store",F="model_info_store";function _(){if(!(0,l.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function D(e){const t=e.result;t.createObjectStore(R,{keyPath:"modelPath"}),t.createObjectStore(F,{keyPath:"modelPath"})}class O{constructor(e){if(this.indexedDB=_(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(A,1);s.onupgradeneeded=()=>D(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(R,"readonly"),s=t.objectStore(R).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=T(t),a=r.transaction(F,"readwrite");let i=a.objectStore(F);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let u;o.onsuccess=()=>{u=r.transaction(R,"readwrite");const o=u.objectStore(R).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(F);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}O.URL_SCHEME="indexeddb://";const B=e=>{return(0,l.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(O.URL_SCHEME)?(t=e.slice(O.URL_SCHEME.length),new O(t)):null;var t};E.registerSaveRouter(B),E.registerLoadRouter(B);class M{constructor(){this.indexedDB=_()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(A,1);n.onupgradeneeded=()=>D(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(F,"readonly"),a=r.objectStore(F).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(O.URL_SCHEME)?t.slice(O.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(A,1);s.onupgradeneeded=()=>D(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(F,"readwrite"),i=a.objectStore(F),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{u=r.transaction(R,"readwrite");const s=u.objectStore(R).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const L="/",z="tensorflowjs_models",P="info",V="model_topology",W="weight_specs",U="weight_data",G="model_metadata";function H(e){return{info:[z,e,P].join(L),topology:[z,e,V].join(L),weightSpecs:[z,e,W].join(L),weightData:[z,e,U].join(L),modelMetadata:[z,e,G].join(L)}}function j(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function q(e){const t=e.split(L);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(L)}class K{constructor(e){if(!(0,l.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=H(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=T(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(I)return w.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw j(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(I){const t=w.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}K.URL_SCHEME="localstorage://";const X=e=>{return(0,l.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(K.URL_SCHEME)?(t=e.slice(K.URL_SCHEME.length),new K(t)):null;var t};E.registerSaveRouter(X),E.registerLoadRouter(X);class Y{constructor(){(0,f.hu)((0,l.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,f.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=z+L,n=L+P;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){e[q(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=H(e=(t=e).startsWith(K.URL_SCHEME)?t.slice(K.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return j(n),s}}const Z="://";class J{constructor(){this.managers={}}static getInstance(){return null==J.instance&&(J.instance=new J),J.instance}static registerManager(e,t){(0,f.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Z)&&(e=e.slice(0,e.indexOf(Z))),(0,f.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=J.getInstance();(0,f.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Q{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,l.OB)().get("IS_BROWSER")){(0,l.OB)().setPlatform("browser",new Q);try{J.registerManager(K.URL_SCHEME,new Y)}catch(e){}try{J.registerManager(O.URL_SCHEME,new M)}catch(e){}}var ee=n(4406);const te=()=>n(327);let ne;class se{constructor(){this.util=n(6843),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,l.OB)().global.fetch?(0,l.OB)().global.fetch(e,t):(null==ne&&(ne=te()),ne(e,t))}now(){const e=ee.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}(0,l.OB)().get("IS_NODE")&&!(0,l.OB)().get("IS_BROWSER")&&(0,l.OB)().setPlatform("node",new se);var re=n(1313);function ae(e,t="float32",n){return t=t||"float32",f.Mu(e),new re.YD(e,t,n)}const ie=(0,m.op)({cast_:function(e,t){const n=(0,p._1)(e,"x","cast");if(!f.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return a.BV.runKernel(d.RF,s,r)}});const oe=(0,m.op)({clone_:function(e){const t={x:(0,p._1)(e,"x","clone","string_or_numeric")};return a.BV.runKernel(d.iJ,t)}});(0,a.wv)();const ue={buffer:ae,cast:ie,clone:oe,print:function(e,t=!1){console.log(e.toString(t))}};(0,re.Vp)(ue);function le(e){return new Promise((e=>setTimeout(e))).then(e)}class ce{constructor(e){if(!(0,l.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ce.URL_SCHEME)&&(e=e.slice(ce.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=$(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await le((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await le((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:T(e)}}}}ce.URL_SCHEME="downloads://";function he(e,t,n,s){!function(e){(0,f.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,f.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,f.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,f.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function de(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,l.OB)().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await he(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await he(r,t.onProgress,.5,1)}E.registerSaveRouter((e=>(0,l.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ce.URL_SCHEME)?function(e="model"){return new ce(e)}(e.slice(ce.URL_SCHEME.length)):null));class pe{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,f.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,l.OB)().platform.fetch,(0,f.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,f.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=$(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:T(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return C(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}(t),r=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);this.weightUrlConverter&&i.push(...await Promise.all(o));return[a,N(await de(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function fe(e){return null!=e.match(pe.URL_SCHEME_REGEX)}pe.URL_SCHEME_REGEX=/^https?:\/\//;const me=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>fe(e))):fe(e),n)return ge(e,t)}return null};function ge(e,t){return new pe(e,t)}E.registerSaveRouter(me),E.registerLoadRouter(me);function be(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function xe(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function ye(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(s)}}return n}function we(e,t,n){const s=e.shape.length;f.hu(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),f.hu(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)f.hu(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function ve(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ke(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Ie(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Se(e,t,n){return n<=e?n:n-(t-1)}function Ne(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function $e(e,t,n,s,r,a,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Ce(i,u,l,s,e),h=Te(o,u,l,r,e),d=Ie(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=Ae(i,s,a,e,t,u),h[t]=Re(o,r,a,e,t,u),d[t]=Ee(a,t,u);return{begin:c,end:h,strides:d}}function Ce(e,t,n,s,r){const a=[...r],i=Ne(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=Se(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function Te(e,t,n,s,r){const a=[...r],i=Ne(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=Se(t,n,r);let o=s[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let e=0;e<a.length;e++){const t=r[e];a[e]<0&&(a[e]+=t),a[e]=f.uZ(0,a[e],r[e])}return a}function Ee(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function Ae(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=s[r];return i<0&&(i+=u),i=f.uZ(0,i,u-1),i}function Re(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=s[r];return i<0&&(i+=u),i=o>0?f.uZ(0,i,u):f.uZ(-1,i,u-1),i}function Fe(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function _e(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function De(e,t,n){let s;const r=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{f.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(f.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function Oe(e,t,n,s,r,a,i,o,u){let l;if(null==s?(l=new Array(t.length),l.fill(1)):l=s,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),s=e[t];if(-1===s){g.push(n?1:-1);continue}const r=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?s:s-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?s+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=s)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Be(d.begin[t],0,d.strides[t],s,r,a),d.end[t]=Be(d.end[t],1,d.strides[t],s,r,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===s;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):i&&s>=0&&(o=d.strides[t]<0?-s:s,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(g[t]):-2===t&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Be(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{const t=e<0?s+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}class Me{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Le{constructor(){this.classNameMap={}}static getMap(){return null==Le.instance&&(Le.instance=new Le),Le.instance}static register(e){Le.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ze(e){(0,f.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,f.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,f.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Le.register(e)}var Pe=n(9201);function Ve(){return a.BV}function We(){return a.BV.memory()}function Ue(e,t){return a.BV.tidy(e,t)}function Ge(e){(0,Pe.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function He(e){return a.BV.keep(e)}function je(e,t,n=1){return a.BV.registerBackend(e,t,n)}function qe(e){return a.BV.customGrad(e)}function Ke(e,t){if(((0,f.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,f.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return x(e,[],[],t)}(0,re.FZ)((function(e){(0,l.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}));class Xe extends Me{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Ge(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){f.hu(f.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),f.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof re._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in a.BV.registeredVariables)t.push(a.BV.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),f.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:i,grads:o}=a.BV.gradients(e,t,null,!0);f.hu(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),f.hu(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const u={};return t.forEach(((e,t)=>{null!=o[t]&&(u[e.name]=o[t])})),null!=s&&s.forEach((e=>u[e.name]=null)),{value:i,grads:u}}(e,t)}dispose(){null!=this.iterations_&&Ge(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ke(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Xe,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Ye=n(7139);const Ze=(0,m.op)({abs_:function(e){const t=(0,p._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return a.BV.runKernel(d.yj,e)}{const e={x:t};return a.BV.runKernel(d.SY,e)}}});const Je=(0,m.op)({add_:function(e,t){let n=(0,p._1)(e,"a","add"),s=(0,p._1)(t,"b","add");[n,s]=(0,Pe.makeTypesMatch)(n,s);const r={a:n,b:s};return a.BV.runKernel(d.mm,r)}});const Qe=(0,m.op)({all_:function(e,t=null,n=!1){const s={x:(0,p._1)(e,"x","all","bool")},r={axis:t,keepDims:n};return a.BV.runKernel(d.oT,s,r)}});const et=(0,m.op)({any_:function(e,t=null,n=!1){const s={x:(0,p._1)(e,"x","any","bool")},r={axis:t,keepDims:n};return a.BV.runKernel(d.IK,s,r)}});const tt=(0,m.op)({argMax_:function(e,t=0){const n={x:(0,p._1)(e,"x","argMax")},s={axis:t};return a.BV.runKernel(d.sJ,n,s)}});function nt(e,t,n,s,r="NHWC",a){return at(e,[...t,e[3]],n,a,s,null,null,ft(r))}function st(e,t,n,s,r,a,i="channelsLast"){const[o,u]=ut(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return at(e,l,n,s,r,a,!1,i)}function rt(e,t,n,s,r,a,i="NDHWC"){const[o,u,l]=lt(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return it(e,c,n,s,r,!1,h,a)}function at(e,t,n,s,r,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=ut(n),[b,x]=ut(s),y=ct(d,b),w=ct(p,x),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,s,r,a,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=ot(e,t,n));const a=e[0],i=e[1],o=ht((a-t+2*s)/n+1,r),u=ht((i-t+2*s)/n+1,r);return[o,u]}([t,n],a,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+a-t),o=Math.max(0,(h-1)*r+i-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=ht((t-a+d+p)/s+1,o),h=ht((n-i+f+m)/r+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(r,l,c,m,g,y,w,a,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[u,S,k,I]:"channelsLast"===o&&(N=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:N,filterShape:t}}function it(e,t,n,s,r,a=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[b,x,y]=lt(n),[w,v,k]=lt(s),I=ct(p,w),S=ct(f,v),N=ct(m,k),{padInfo:$,outDepth:C,outHeight:T,outWidth:E}=function(e,t,n,s,r,a,i,o,u,l,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=ot(e,t,s));const i=e[0],o=e[1],u=e[2],l=ht((i-t+2*r)/s+1,a),c=ht((o-t+2*r)/s+1,a),h=ht((u-t+2*r)/s+1,a);return[l,c,h,n]}([t,n,s,1],o,1,r,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/i);const e=(d-1)*r+o-t,c=(p-1)*a+u-n,m=(f-1)*i+l-s,g=Math.floor(e/2),b=e-g,x=Math.floor(c/2),y=c-x,w=Math.floor(m/2);h={top:x,bottom:y,left:w,right:m-w,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),p=Math.ceil((n-u+1)/a),f=Math.ceil((s-l+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,l,c,h,b,x,y,I,S,N,o),A=a?g*d:g;let R;return"channelsFirst"===i?R=[u,A,C,T,E]:"channelsLast"===i&&(R=[u,C,T,E,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:T,outWidth:E,outChannels:A,padInfo:$,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function ot(e,t,n,s=1){const r=ct(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function ut(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function lt(e){return"number"==typeof e?[e,e,e]:e}function ct(e,t){return t<=1?e:e+(e-1)*(t-1)}function ht(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function dt(e){const[t,n,s]=ut(e);return 1===t&&1===n&&1===s}function pt(e,t){return dt(e)||dt(t)}function ft(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function mt(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)f.hu(f.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{f.hu(f.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const gt=(0,m.op)({reshape_:function(e,t){const n={x:(0,p._1)(e,"x","reshape","string_or_numeric")},s={shape:t};return a.BV.runKernel(d.HZ,n,s)}});const bt=(0,m.op)({avgPool_:function(e,t,n,s,r){const i=(0,p._1)(e,"x","avgPool","float32");f.hu(pt(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=i,u=!1;3===i.rank&&(u=!0,o=gt(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f.hu(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),mt("avgPool",s,r);const l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let h=a.BV.runKernel(d.Jh,l,c);return h=ie(h,i.dtype),u?gt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const xt=(0,m.op)({avgPool3d_:function(e,t,n,s,r,i="NDHWC"){const o=(0,p._1)(e,"x","avgPool3d","float32");let u=o,l=!1;4===o.rank&&(l=!0,u=gt(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f.hu(5===u.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`)),f.hu("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),mt("avgPool3d",s,r);const c={x:u},h={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i};let m=a.BV.runKernel(d._k,c,h);return m=ie(m,u.dtype),l?gt(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const yt=(0,m.op)({batchNorm_:function(e,t,n,s,r,i){null==i&&(i=.001);const o=(0,p._1)(e,"x","batchNorm"),u=(0,p._1)(t,"mean","batchNorm"),l=(0,p._1)(n,"variance","batchNorm");let c,h;null!=r&&(c=(0,p._1)(r,"scale","batchNorm")),null!=s&&(h=(0,p._1)(s,"offset","batchNorm")),f.hu(u.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f.hu(null==h||u.rank===h.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f.hu(null==c||u.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const m=function(e){let t;return t=0===e.rank||1===e.rank?gt(e,[1,1,1,e.size]):2===e.rank?gt(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?gt(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),g={x:m,scale:c,offset:h,mean:u,variance:l},b={varianceEpsilon:i},x=a.BV.runKernel(d.sH,g,b);return gt(x,o.shape)}});const wt=(0,m.op)({batchNorm2d_:function(e,t,n,s,r,a){const i=(0,p._1)(e,"x","batchNorm"),o=(0,p._1)(t,"mean","batchNorm"),u=(0,p._1)(n,"variance","batchNorm");let l,c;return null!=r&&(l=(0,p._1)(r,"scale","batchNorm")),null!=s&&(c=(0,p._1)(s,"offset","batchNorm")),f.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),f.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),f.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&f.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&f.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),yt(i,o,u,c,l,a)}});const vt=(0,m.op)({batchNorm3d_:function(e,t,n,s,r,a){const i=(0,p._1)(e,"x","batchNorm"),o=(0,p._1)(t,"mean","batchNorm"),u=(0,p._1)(n,"variance","batchNorm");let l,c;return null!=r&&(l=(0,p._1)(r,"scale","batchNorm")),null!=s&&(c=(0,p._1)(s,"offset","batchNorm")),f.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),f.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),f.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&f.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&f.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),yt(i,o,u,c,l,a)}});const kt=(0,m.op)({batchNorm4d_:function(e,t,n,s,r,a){const i=(0,p._1)(e,"x","batchNorm"),o=(0,p._1)(t,"mean","batchNorm"),u=(0,p._1)(n,"variance","batchNorm");let l,c;return null!=r&&(l=(0,p._1)(r,"scale","batchNorm")),null!=s&&(c=(0,p._1)(s,"offset","batchNorm")),f.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),f.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),f.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&f.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&f.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),yt(i,o,u,c,l,a)}});const It=(0,m.op)({clipByValue_:function(e,t,n){const s=(0,p._1)(e,"x","clipByValue");f.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const r={x:s},i={clipValueMin:t,clipValueMax:n};return a.BV.runKernel(d.xn,r,i)}});const St=(0,m.op)({concat_:function(e,t=0){(0,f.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,p.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return oe(n[0]);const s=n,r={axis:t};return a.BV.runKernel(d.Eh,s,r)}});const Nt=(0,m.op)({concat1d_:function(e){return St(e,0)}});const $t=(0,m.op)({concat2d_:function(e,t){return St(e,t)}});const Ct=(0,m.op)({concat3d_:function(e,t){return St(e,t)}});const Tt=(0,m.op)({concat4d_:function(e,t){return St(e,t)}});const Et=(0,m.op)({conv2d_:function(e,t,n,s,r="NHWC",i=[1,1],o){const u=(0,p._1)(e,"x","conv2d","float32"),l=(0,p._1)(t,"filter","conv2d","float32");let c=u,h=!1;3===u.rank&&(h=!0,c=gt(u,[1,u.shape[0],u.shape[1],u.shape[2]])),f.hu(4===c.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`)),f.hu(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),mt("conv2d",s,o);const m="NHWC"===r?c.shape[3]:c.shape[1];f.hu(m===l.shape[2],(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${l.shape[2]}.`)),f.hu(pt(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const g={x:c,filter:l},b={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},x=a.BV.runKernel(d.mh,g,b);return h?gt(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const At=(0,m.op)({conv1d_:function(e,t,n,s,r="NWC",a=1,i){const o=(0,p._1)(e,"x","conv1d"),u=(0,p._1)(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=gt(o,[1,o.shape[0],o.shape[1]])),f.hu(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),f.hu(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),mt("conv1d",s,i),f.hu(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),f.hu(pt(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),f.hu("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=gt(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=gt(l,[l.shape[0],1,l.shape[1],l.shape[2]]),m=Et(d,h,[1,n],s,"NHWC",[1,a],i);return gt(m,c?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}});const Rt=(0,m.op)({conv2DBackpropInput_:function(e,t,n,s,r,i="NHWC",o){f.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let u=e,l=t,c=!1;3===t.rank&&(c=!0,l=gt(t,[1,t.shape[0],t.shape[1],t.shape[2]]),u=[1,e[0],e[1],e[2]]),f.hu(4===u.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${u.length}.`)),f.hu(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),f.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===i?u[3]:u[1],p="NHWC"===i?l.shape[3]:l.shape[1];f.hu(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),f.hu(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),mt("conv2dDerInput",r,o);const m={dy:l,filter:n},g={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,inputShape:u},b=a.BV.runKernel(d.wm,m,g);return c?gt(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const Ft=(0,m.op)({conv2dTranspose_:function(e,t,n,s,r,a){const i=(0,p._1)(e,"x","conv2dTranspose"),o=(0,p._1)(t,"filter","conv2dTranspose");return Rt(n,i,o,s,r,"NHWC",a)}});const _t=(0,m.op)({conv3d_:function(e,t,n,s,r="NDHWC",i=[1,1,1]){const o=(0,p._1)(e,"x","conv3d"),u=(0,p._1)(t,"filter","conv3d");let l=o,c=!1;4===o.rank&&(c=!0,l=gt(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f.hu(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),f.hu(5===u.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${u.rank}.`)),f.hu(l.shape[4]===u.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${u.shape[3]}.`)),f.hu(pt(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),f.hu("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const h={x:l,filter:u},m={strides:n,pad:s,dataFormat:r,dilations:i},g=a.BV.runKernel(d.x1,h,m);return c?gt(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});const Dt=(0,m.op)({conv3DBackpropInput_:function(e,t,n,s,r){f.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,o=t,u=!1;4===t.rank&&(u=!0,o=gt(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const l=i[4],c=o.shape[4];f.hu(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),f.hu(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),f.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),f.hu(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),f.hu(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const h={dy:o,filter:n},p={pad:r,strides:s,inputShape:i},m=a.BV.runKernel(d.ik,h,p);return u?gt(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const Ot=(0,m.op)({conv3dTranspose_:function(e,t,n,s,r){const a=(0,p._1)(e,"x","conv3dTranspose"),i=(0,p._1)(t,"filter","conv3dTranspose");return Dt(n,a,i,s,r)}});const Bt=(0,m.op)({depthwiseConv2d_:function(e,t,n,s,r="NHWC",i=[1,1],o){const u=(0,p._1)(e,"x","depthwiseConv2d","float32"),l=(0,p._1)(t,"filter","depthwiseConv2d","float32");let c=u,h=!1;3===u.rank&&(h=!0,c=gt(u,[1,u.shape[0],u.shape[1],u.shape[2]])),f.hu(4===c.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),f.hu(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),f.hu(c.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),mt("depthwiseConv2d",s,o);const m={x:c,filter:l},g={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},b=a.BV.runKernel(d.ci,m,g);return h?gt(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const Mt=(0,m.op)({floorDiv_:function(e,t){let n=(0,p._1)(e,"a","floorDiv"),s=(0,p._1)(t,"b","floorDiv");[n,s]=(0,Pe.makeTypesMatch)(n,s);const r={a:n,b:s};return a.BV.runKernel(d.je,r)}});const Lt=(0,m.op)({div_:function(e,t){let n=(0,p._1)(e,"a","div"),s=(0,p._1)(t,"b","div");if([n,s]=(0,Pe.makeTypesMatch)(n,s),"int32"===n.dtype&&"int32"===s.dtype)return Mt(n,s);const r={a:n,b:s};return a.BV.runKernel(d.oH,r,{})}});const zt=(0,m.op)({elu_:function(e){const t={x:(0,p._1)(e,"x","elu","float32")};return a.BV.runKernel(d.SX,t)}});const Pt=(0,m.op)({equal_:function(e,t){let n=(0,p._1)(e,"a","equal","string_or_numeric"),s=(0,p._1)(t,"b","equal","string_or_numeric");[n,s]=(0,Pe.makeTypesMatch)(n,s),ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d.hd,r)}});const Vt=(0,m.op)({exp_:function(e){const t={x:(0,p._1)(e,"x","exp")};return a.BV.runKernel(d.NE,t)}});const Wt=(0,m.op)({expandDims_:function(e,t=0){const n=(0,p._1)(e,"x","expandDims","string_or_numeric");f.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return a.BV.runKernel(d.YF,s,r)}});const Ut=(0,m.op)({tile_:function(e,t){const n=(0,p._1)(e,"x","tile","string_or_numeric");f.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return a.BV.runKernel(d.n9,s,r)}});const Gt=(0,m.op)({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=ae([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=gt(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Ut(Wt(i,0),[n[0],1,1]);if(2===n.length)return Ut(Wt(Wt(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ut(Wt(Wt(Wt(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ht(e,t,n){const s={shape:e,value:t,dtype:n};return a.BV.runKernel(d.de,{},s)}const jt=(0,m.op)({floor_:function(e){const t={x:(0,p._1)(e,"x","floor","float32")};return a.BV.runKernel(d.OR,t)}});const qt=(0,m.op)({gather_:function(e,t,n=0,s=0){const r={x:(0,p._1)(e,"x","gather"),indices:(0,p._1)(t,"indices","gather","int32")},i={axis:n,batchDims:s};return a.BV.runKernel(d.qi,r,i)}});const Kt=(0,m.op)({greater_:function(e,t){let n=(0,p._1)(e,"a","greater","string_or_numeric"),s=(0,p._1)(t,"b","greater","string_or_numeric");[n,s]=(0,Pe.makeTypesMatch)(n,s),ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d.iZ,r)}});const Xt=(0,m.op)({greaterEqual_:function(e,t){let n=(0,p._1)(e,"a","greaterEqual","string_or_numeric"),s=(0,p._1)(t,"b","greaterEqual","string_or_numeric");[n,s]=(0,Pe.makeTypesMatch)(n,s),ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d.Ac,r)}});const Yt=(0,m.op)({leakyRelu_:function(e,t=.2){const n={x:(0,p._1)(e,"x","leakyRelu")},s={alpha:t};return a.BV.runKernel(d.J$,n,s)}});const Zt=(0,m.op)({log_:function(e){const t={x:(0,p._1)(e,"x","log","float32")};return a.BV.runKernel(d.Zb,t)}});const Jt=(0,m.op)({log1p_:function(e){const t={x:(0,p._1)(e,"x","log1p")};return a.BV.runKernel(d.kU,t)}});const Qt=(0,m.op)({max_:function(e,t=null,n=!1){const s={x:(0,p._1)(e,"x","max")},r={reductionIndices:t,keepDims:n};return a.BV.runKernel(d.Yo,s,r)}});const en=(0,m.op)({mul_:function(e,t){let n=(0,p._1)(e,"a","mul"),s=(0,p._1)(t,"b","mul");[n,s]=(0,Pe.makeTypesMatch)(n,s);const r={a:n,b:s};return a.BV.runKernel(d.wY,r)}});const tn=(0,m.op)({sub_:function(e,t){let n=(0,p._1)(e,"a","sub"),s=(0,p._1)(t,"b","sub");[n,s]=(0,Pe.makeTypesMatch)(n,s);const r={a:n,b:s};return a.BV.runKernel(d.Tr,r)}});const nn=(0,m.op)({sum_:function(e,t=null,n=!1){let s=(0,p._1)(e,"x","sum");"bool"===s.dtype&&(s=ie(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return a.BV.runKernel(d.GB,r,i)}});const sn=(0,m.op)({logSoftmax_:function(e,t=-1){const n=(0,p._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=qe(((e,n)=>{const s=Qt(e,t,!0),r=tn(e,s),a=tn(ie(r,"float32"),Zt(nn(Vt(r),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[s]=n,r=Vt(s);return tn(e,en(nn(e,t,!0),r))}}}));return s(n)}});const rn=(0,m.op)({logicalAnd_:function(e,t){const n=(0,p._1)(e,"a","logicalAnd","bool"),s=(0,p._1)(t,"b","logicalAnd","bool");ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d.PY,r)}});const an=(0,m.op)({matMul_:function(e,t,n=!1,s=!1){let r=(0,p._1)(e,"a","matMul"),i=(0,p._1)(t,"b","matMul");[r,i]=(0,Pe.makeTypesMatch)(r,i);const o={a:r,b:i},u={transposeA:n,transposeB:s};return a.BV.runKernel(d.XL,o,u)}});const on=(0,m.op)({maxPool_:function(e,t,n,s,r){const i=(0,p._1)(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=gt(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f.hu(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),f.hu(pt(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),mt("maxPool",s,r);const l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},h=a.BV.runKernel(d.mT,l,c);return u?gt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const un=(0,m.op)({maxPool3d_:function(e,t=[1,1,1],n,s,r,i="NDHWC"){const o=(0,p._1)(e,"x","maxPool3d");let u=o,l=!1;4===o.rank&&(l=!0,u=gt(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f.hu(5===u.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`)),f.hu("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),mt("maxPool3d",s,r);const c={x:u},h={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i},m=a.BV.runKernel(d.OA,c,h);return l?gt(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const ln=(0,m.op)({maximum_:function(e,t){let n=(0,p._1)(e,"a","maximum"),s=(0,p._1)(t,"b","maximum");[n,s]=(0,Pe.makeTypesMatch)(n,s),"bool"===n.dtype&&(n=ie(n,"int32"),s=ie(s,"int32")),ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d.BM,r)}});const cn=(0,m.op)({mean_:function(e,t=null,n=!1){const s={x:(0,p._1)(e,"x","mean")},r={axis:t,keepDims:n};return a.BV.runKernel(d.q2,s,r)}});const hn=(0,m.op)({minimum_:function(e,t){let n=(0,p._1)(e,"a","minimum"),s=(0,p._1)(t,"b","minimum");[n,s]=(0,Pe.makeTypesMatch)(n,s),"bool"===n.dtype&&(n=ie(n,"int32"),s=ie(s,"int32")),ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d.q8,r)}});function dn(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function pn(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function fn(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function mn(e,t){return pn(e,t.map((e=>1)),t)}function gn(e,t,n){f.hu(dn(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function bn(e,t){if(dn(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function xn(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function yn(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const wn=(0,m.op)({square_:function(e){const t=(0,p._1)(e,"x","square");return a.BV.runKernel("Square",{x:t},{})}});const vn=(0,m.op)({moments_:function(e,t=null,n=!1){e=(0,p._1)(e,"x","moments");const s=(0,f.EC)(t,e.shape),r=cn(e,s,n);let a=r.shape;n||(a=mn(r.shape,s));const i=wn(tn(ie(e,"float32"),gt(r,a)));return{mean:r,variance:cn(i,s,n)}}});const kn=(0,m.op)({neg_:function(e){const t={x:(0,p._1)(e,"x","neg")};return a.BV.runKernel(d.ku,t)}});const In=(0,m.op)({notEqual_:function(e,t){let n=(0,p._1)(e,"a","notEqual","string_or_numeric"),s=(0,p._1)(t,"b","notEqual","string_or_numeric");[n,s]=(0,Pe.makeTypesMatch)(n,s),ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d.yQ,r)}});const Sn=(0,m.op)({oneHot_:function(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:(0,p._1)(e,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:s};return a.BV.runKernel(d.we,r,i)}});function Nn(e,t="float32"){if("complex64"===t){const t=Nn(e,"float32"),n=Nn(e,"float32");return g(t,n)}const n=(0,f.wT)((0,f.NA)(e),t);return a.BV.makeTensor(n,e,t)}function $n(e,t="float32"){if("complex64"===t){const t=$n(e,"float32"),n=Nn(e,"float32");return g(t,n)}const n=(0,f.p8)((0,f.NA)(e),t);return a.BV.makeTensor(n,e,t)}const Cn=(0,m.op)({onesLike_:function(e){const t={x:(0,p._1)(e,"x","onesLike")};return a.BV.runKernel(d.qW,t)}});const Tn=(0,m.op)({pad_:function(e,t,n=0){const s=(0,p._1)(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},i={x:s};return a.BV.runKernel(d.ly,i,r)}});const En=(0,m.op)({prelu_:function(e,t){const n={x:(0,p._1)(e,"x","prelu"),alpha:(0,p._1)(t,"alpha","prelu")};return a.BV.runKernel(d.o0,n)}});var An=n(8698);class Rn{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=An.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Fn{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=An.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const _n=(0,m.op)({randomNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Rn(t,n,s,!1,r),i=ae(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const Dn=(0,m.op)({randomUniform_:function(e,t=0,n=1,s="float32",r){const a=ae(e,s),i=new Fn(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});const On=(0,m.op)({relu_:function(e){const t={x:(0,p._1)(e,"x","relu")};return a.BV.runKernel(d.qk,t)}});const Bn=(0,m.op)({reverse_:function(e,t){const n={x:(0,p._1)(e,"x","reverse")},s={dims:t};return a.BV.runKernel(d.mK,n,s)}});const Mn=(0,m.op)({selu_:function(e){const t={x:(0,p._1)(e,"x","selu")};return a.BV.runKernel(d.oF,t)}});const Ln=(0,m.op)({separableConv2d_:function(e,t,n,s,r,a=[1,1],i="NHWC"){const o=(0,p._1)(e,"x","separableConv2d"),u=(0,p._1)(t,"depthwiseFilter","separableConv2d"),l=(0,p._1)(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=gt(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");f.hu(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),f.hu(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),f.hu(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),f.hu(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),f.hu(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],m=u.shape[3];f.hu(l.shape[2]===d*m,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*m}, but got ${l.shape[2]}.`));const g=Bt(c,u,s,r,i,a),b=Et(g,l,1,"valid",i);return h?gt(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const zn=(0,m.op)({sigmoid_:function(e){const t={x:(0,p._1)(e,"x","sigmoid","float32")};return a.BV.runKernel(d.a5,t)}});const Pn=(0,m.op)({slice_:function(e,t,n){const s=(0,p._1)(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:t,size:n};return a.BV.runKernel(d.p2,r,i)}});const Vn=(0,m.op)({slice1d_:function(e,t,n){const s=(0,p._1)(e,"x","slice1d");return f.hu(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Pn(s,[t],[n])}});const Wn=(0,m.op)({slice2d_:function(e,t,n){const s=(0,p._1)(e,"x","slice2d");return f.hu(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Pn(s,t,n)}});const Un=(0,m.op)({slice3d_:function(e,t,n){const s=(0,p._1)(e,"x","slice3d");return f.hu(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Pn(s,t,n)}});const Gn=(0,m.op)({slice4d_:function(e,t,n){const s=(0,p._1)(e,"x","slice4d");return f.hu(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Pn(s,t,n)}});const Hn=(0,m.op)({softmax_:function(e,t=-1){const n=(0,p._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return a.BV.runKernel(d.Gc,s,r)}});const jn=(0,m.op)({softplus_:function(e){const t={x:(0,p._1)(e,"x","softplus")};return a.BV.runKernel(d.MR,t)}});const qn=(0,m.op)({split_:function(e,t,n=0){const s={x:(0,p._1)(e,"x","split")},r={numOrSizeSplits:t,axis:n};return a.BV.runKernel(d.L8,s,r)}});const Kn=(0,m.op)({sqrt_:function(e){const t={x:(0,p._1)(e,"x","sqrt","float32")};return a.BV.runKernel(d.FK,t)}});const Xn=(0,m.op)({squeeze_:function(e,t){const n=(0,p._1)(e,"x","squeeze");return gt(n,(0,f.bp)(n.shape,t).newShape)}});const Yn=(0,m.op)({stack_:function(e,t=0){const n=(0,p.sI)(e,"tensors","stack","string_or_numeric");f.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&f.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return a.BV.runKernel(d.Qi,s,r)}});const Zn=(0,m.op)({tanh_:function(e){const t={x:(0,p._1)(e,"x","tanh","float32")};return a.BV.runKernel(d.MI,t)}});function Jn(e,t){(0,f.Cq)(e);const n=(0,p.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return x(e,null,n,t)}const Qn=(0,m.op)({truncatedNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Rn(t,n,s,!0,r),i=ae(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const es=(0,m.op)({unstack_:function(e,t=0){const n=(0,p._1)(e,"x","unstack","string_or_numeric");f.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return a.BV.runKernel(d.To,s,r)}});const ts=(0,m.op)({broadcastTo_:function(e,t){let n=(0,p._1)(e,"broadcastTo","x");const s=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=gt(n,e)}const r=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return oe(n);const o={x:n},u={reps:i};return a.BV.runKernel(d.n9,o,u)}});const ns=(0,m.op)({where_:function(e,t,n){const s=(0,p._1)(t,"a","where"),r=(0,p._1)(n,"b","where"),i=(0,p._1)(e,"condition","where","bool"),o=ye(ye(i.shape,s.shape),r.shape),u={condition:ts(i,o),t:ts(s,o),e:ts(r,o)};return a.BV.runKernel(d.Ph,u)}});const ss=(0,m.op)({zerosLike_:function(e){const t={x:(0,p._1)(e,"x","zerosLike")};return a.BV.runKernel(d.Ru,t)}});const rs=(0,m.op)({transpose_:function(e,t){const n=(0,p._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),f.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{f.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:t};return a.BV.runKernel(d.G3,s,r)}});const as=(0,m.op)({dropout_:function(e,t,n,s){const r=(0,p._1)(e,"x","dropout");if(f.hu("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),f.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof re.es?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(f.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,o=Lt(jt(Je(Dn(a,0,1,"float32",s),i)),i);return en(r,o)}});const is=(0,m.op)({imag_:function(e){const t={input:(0,p._1)(e,"input","imag")};return a.BV.runKernel(d.J_,t)}});const os=(0,m.op)({real_:function(e){const t={input:(0,p._1)(e,"input","real")};return a.BV.runKernel(d.xJ,t)}});const us=(0,m.op)({fft_:function(e){(0,f.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return a.BV.runKernel(d.vw,t)}});const ls=(0,m.op)({rfft_:function(e,t){(0,f.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,r=Pn(e,s,a),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=St([e,Nn(s)],e.shape.length-1),n=t}else r=e;const a=ss(r),i=gt(g(r,a),[s,n]),o=us(i),u=Math.floor(n/2)+1,l=os(o),c=is(o),h=qn(l,[u,n-u],l.shape.length-1),d=qn(c,[u,n-u],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=u,gt(g(h[0],d[0]),p)}});const cs=(0,m.op)({ifft_:function(e){(0,f.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return a.BV.runKernel(d.Qg,t)}});const hs=(0,m.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=gt(e,[n,t]);s=cs(r)}else{const r=[n,2*(t-1)],a=gt(os(e),[n,t]),i=gt(is(e),[n,t]),o=Bn(Pn(a,[0,1],[n,t-2]),1),u=en(Bn(Pn(i,[0,1],[n,t-2]),1),Ke(-1)),l=St([a,o],1),c=St([i,u],1),h=gt(g(l,c),[r[0],r[1]]);s=cs(h)}if(s=os(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=gt(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}});const ds=(0,m.op)({conv2DBackpropFilter_:function(e,t,n,s,r,i="NHWC",o){let u=e;3===e.rank&&(u=gt(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=gt(t,[1,t.shape[0],t.shape[1],t.shape[2]])),f.hu(4===u.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${u.shape}.`)),f.hu(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),f.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const c="NHWC"===i?u.shape[3]:u.shape[1],h="NHWC"===i?l.shape[3]:l.shape[1];f.hu(c===n[2],(()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`)),f.hu(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),mt("conv2dDerFilter",r,o);const p={x:u,dy:l},m={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,filterShape:n};return a.BV.runKernel(d.wU,p,m)}});const ps=(0,m.op)({relu6_:function(e){const t={x:(0,p._1)(e,"x","relu6")};return a.BV.runKernel(d.Sb,t)}});const fs=(0,m.op)({step_:function(e,t=0){const n={x:(0,p._1)(e,"x","step")},s={alpha:t};return a.BV.runKernel(d.h8,n,s)}});function ms(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return en(e,fs(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function gs(e,t){let n=t;const s=xe(e.shape,t.shape);return s.length>0&&(n=nn(n,s)),gt(n,e.shape)}function bs(e,t,n,s){if("linear"===t)return e;if("relu"===t)return On(e);if("elu"===t)return zt(e);if("relu6"===t)return ps(e);if("prelu"===t)return En(e,n);if("leakyrelu"===t)return Yt(e,s);if("sigmoid"===t)return zn(e);throw new Error(`Unknown fused activation ${t}.`)}const xs=(e,t)=>!(e>0)||"linear"===t;const ys=(0,m.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:u,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(l=l||"linear",!1===xs(a.BV.state.gradientDepth,l)){let a=Et(e,t,n,s,r,i,o);return null!=u&&(a=Je(a,u)),bs(a,l,c,h)}const m=(0,p._1)(e,"x","conv2d","float32"),g=(0,p._1)(t,"filter","conv2d","float32");let b=m,x=!1;3===m.rank&&(x=!0,b=gt(m,[1,m.shape[0],m.shape[1],m.shape[2]])),f.hu(4===b.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${b.rank}.`)),f.hu(4===g.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${g.rank}.`)),mt("fused conv2d",s,o),f.hu(b.shape[3]===g.shape[2],(()=>`Error in conv2d: depth of input (${b.shape[3]}) must match input depth for filter ${g.shape[2]}.`)),f.hu(pt(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),f.hu("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const y=at(b.shape,g.shape,n,i,s,o);let w,v;null!=u&&(w=(0,p._1)(u,"bias","fused conv2d"),[w]=(0,Pe.makeTypesMatch)(w,m),ye(y.outShape,w.shape)),null!=c&&(v=(0,p._1)(c,"prelu weights","fused conv2d"));const k=(e,t)=>{const[r,a,o,u]=t,c=ms(e,o,l);f.hu(dt(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[Rt(a.shape,c,r,n,s),ds(a,c,r.shape,n,s)];if(null!=u){const e=gs(u,c);h.push(e)}return h},I={x:b,filter:g,bias:w,preluActivationWeights:v},S={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:h};if(null==u){const e=qe(((e,t,n)=>{let s=a.BV.runKernel(d._V,I,S);return n([t,e,s]),x&&(s=gt(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}}));return e(b,g)}{const e=qe(((e,t,n,s)=>{let r=a.BV.runKernel(d._V,I,S);return s([t,e,r,n]),x&&(r=gt(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}}));return e(b,g,w)}}});const ws=(0,m.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r,i=[1,1],o){let u=e;3===e.rank&&(u=gt(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=gt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:u,dy:l},h={strides:s,pad:r,dimRoundingMode:o,dilations:i,filterShape:n};return a.BV.runKernel(d.sL,c,h)}});const vs=(0,m.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r,i=[1,1],o){let u=t,l=!1;3===t.rank&&(l=!0,u=gt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:u,filter:n},h={strides:s,pad:r,dimRoundingMode:o,dilations:i,inputShape:e},p=a.BV.runKernel(d.y7,c,h);return l?gt(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});(0,m.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:u,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(!1===xs(a.BV.state.gradientDepth,l)){let a=Bt(e,t,n,s,r,i,o);return null!=u&&(a=Je(a,u)),bs(a,l,c,h)}const m=(0,p._1)(e,"x","depthwiseConv2d","float32"),g=(0,p._1)(t,"filter","depthwiseConv2d","float32");let b=m,x=!1;3===m.rank&&(x=!0,b=gt(m,[1,m.shape[0],m.shape[1],m.shape[2]])),f.hu(4===b.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${b.rank}.`)),f.hu(4===g.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${g.rank}.`)),f.hu(b.shape[3]===g.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${b.shape[3]}) must match the inChannels dimension in filter ${g.shape[2]}.`)),null==i&&(i=[1,1]),f.hu(pt(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),mt("fused depthwiseConv2d",s,o);const y=at(b.shape,g.shape,n,i,s,o,!0);let w,v;null!=u&&(w=(0,p._1)(u,"bias","fused conv2d"),[w]=(0,Pe.makeTypesMatch)(w,m),ye(y.outShape,w.shape)),null!=c&&(v=(0,p._1)(c,"prelu weights","fused depthwiseConv2d"));const k=(e,t)=>{f.hu(dt(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[r,a,u,c]=t,h=ms(e,u,l),d=vs(a.shape,h,r,n,s,i,o),p=ws(a,h,r.shape,n,s,i,o);if(null!=c){return[d,p,gs(w,h)]}return[d,p]},I={x:b,filter:g,bias:w,preluActivationWeights:v},S={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:h};if(null==u){const e=qe(((e,t,n)=>{let s=a.BV.runKernel(d.lu,I,S);return n([t,e,s]),x&&(s=gt(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}}));return e(b,g)}{const e=qe(((e,t,n,s)=>{let r=a.BV.runKernel(d.lu,I,S);return s([t,e,r,n]),x&&(r=gt(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}}));return e(b,g,w)}}});const ks=(0,m.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:u}){if(!1===xs(a.BV.state.gradientDepth,i)){let a=an(e,t,n,s);return null!=r&&(a=Je(a,r)),bs(a,i,o,u)}let l=(0,p._1)(e,"a","fused matMul"),c=(0,p._1)(t,"b","fused matMul");[l,c]=(0,Pe.makeTypesMatch)(l,c);const h=n?l.shape[l.rank-2]:l.shape[l.rank-1],m=s?c.shape[c.rank-1]:c.shape[c.rank-2],g=n?l.shape[l.rank-1]:l.shape[l.rank-2],b=s?c.shape[c.rank-2]:c.shape[c.rank-1],x=l.shape.slice(0,-2),y=c.shape.slice(0,-2),w=f.NA(x),v=f.NA(y);f.hu(h===m,(()=>`Error in fused matMul: inner shapes (${h}) and (${m}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`));const k=ye(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([g,b]),I=gt(l,n?[w,h,g]:[w,g,h]),S=gt(c,s?[v,b,m]:[v,m,b]);let N,$;null!=r&&(N=(0,p._1)(r,"bias","fused matMul"),[N]=(0,Pe.makeTypesMatch)(N,l),ye(k,N.shape)),null!=o&&($=(0,p._1)(o,"prelu weights","fused matMul"));const C=(e,t)=>{const[a,o,u,l]=t,c=ms(gt(e,u.shape),u,i);let h,d;if(n||s?!n&&s?(h=an(c,o,!1,!1),d=an(c,a,!0,!1)):n&&!s?(h=an(o,c,!1,!0),d=an(a,c,!1,!1)):(h=an(o,c,!0,!0),d=an(c,a,!0,!0)):(h=an(c,o,!1,!0),d=an(a,c,!0,!1)),null!=r){return[h,d,gs(l,c)]}return[h,d]},T={a:I,b:S,bias:N,preluActivationWeights:$},E={transposeA:n,transposeB:s,activation:i,leakyreluAlpha:u};if(null==r){const e=qe(((e,t,n)=>{const s=a.BV.runKernel(d.us,T,E);return n([e,t,s]),{value:gt(s,k),gradFunc:C}}));return e(I,S)}{const e=qe(((e,t,n,s)=>{const r=a.BV.runKernel(d.us,T,E);return s([e,t,r,n]),{value:gt(r,k),gradFunc:C}}));return e(I,S,N)}}});function Is(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return Jn(r,"float32")}(0,m.op)({hammingWindow_:function(e){return Is(e,.54,.46)}});const Ss=(0,m.op)({hannWindow_:function(e){return Is(e,.5,.5)}});function Ns(e,t,n){if((0,f.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=(0,p.C)(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return x(e,t,s,n)}const $s=(0,m.op)({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Pn(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=St([Pn(e,a,t-s),Ht([s],r)]);i.push(o),a+=n}return 0===i.length?Ns([],[0,t]):gt(St(i),[i.length,t])}});(0,m.op)({stft_:function(e,t,n,s,r=Ss){var a;null==s&&(a=t,s=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=$s(e,t,n),o=en(i,r(t));return ls(o,s)}});const Cs=(0,m.op)({cropAndResize_:function(e,t,n,s,r="bilinear",i=0){const o=(0,p._1)(e,"image","cropAndResize"),u=(0,p._1)(t,"boxes","cropAndResize","float32"),l=(0,p._1)(n,"boxInd","cropAndResize","int32"),c=u.shape[0];f.hu(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),f.hu(2===u.rank&&4===u.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${u.shape}.`)),f.hu(1===l.rank&&l.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${u.shape}.`)),f.hu(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),f.hu(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),f.hu("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const h={image:o,boxes:u,boxInd:l},m={method:r,extrapolationValue:i,cropSize:s};return a.BV.runKernel(d.Vc,h,m)}});const Ts=(0,m.op)({flipLeftRight_:function(e){const t=(0,p._1)(e,"image","flipLeftRight","float32");f.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return a.BV.runKernel(d.Uy,n,{})}});const Es=(0,m.op)({grayscaleToRGB_:function(e){const t=(0,p._1)(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];f.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),f.hu(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Ut(t,r)}});const As=(0,m.op)({rotateWithOffset_:function(e,t,n=0,s=.5){const r=(0,p._1)(e,"image","rotateWithOffset","float32");f.hu(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const i={image:r},o={radians:t,fillValue:n,center:s};return a.BV.runKernel(d.b9,i,o)}});function Rs(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),f.hu(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),f.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),f.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),f.hu(1===t.rank,(()=>"scores must be a 1D tensor")),f.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),f.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const Fs=(0,m.op)({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=(0,p._1)(e,"boxes","nonMaxSuppression","float32"),o=(0,p._1)(t,"scores","nonMaxSuppression","float32"),u=Rs(i,o,n,s,r),l={maxOutputSize:n=u.maxOutputSize,iouThreshold:s=u.iouThreshold,scoreThreshold:r=u.scoreThreshold};return a.BV.runKernel(d.uv,{boxes:i,scores:o},l)}});function _s(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||Ds)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function Ds(e,t){return e>t?1:e<t?-1:0}function Os(e,t,n,s,r){return Ls(e,t,n,s,r,0)}function Bs(e,t,n,s,r,a){return Ls(e,t,n,s,r,0,!1,a,!0)}function Ms(e,t,n,s,r,a){return Ls(e,t,n,s,r,a,!0)}function Ls(e,t,n,s,r,a,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>r&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Vs);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=zs(e,a,h[n]);if(i>=s){o=!0;break}if(t.score=t.score*Ps(s,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>r&&_s(l,t,Vs))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function zs(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-a)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),b=Math.min(o,h),x=Math.min(u,d),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function Ps(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function Vs(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Ws=async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=(0,p._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,p._1)(t,"scores","nonMaxSuppressionAsync"),o=Rs(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=Os(l,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),Jn(h,"int32")};const Us=(0,m.op)({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=(0,p._1)(e,"boxes","nonMaxSuppression"),u=(0,p._1)(t,"scores","nonMaxSuppression"),l=Rs(o,u,n,s,r,i),c={boxes:o,scores:u},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},f=a.BV.runKernel(d.W0,c,h);return{selectedIndices:f[0],selectedScores:f[1]}}});const Gs=async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=(0,p._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,p._1)(t,"scores","nonMaxSuppressionAsync"),u=Rs(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:f}=Ms(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Jn(d,"int32"),selectedScores:Jn(f)}};const Hs=(0,m.op)({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=(0,p._1)(e,"boxes","nonMaxSuppression"),u=(0,p._1)(t,"scores","nonMaxSuppression"),l=Rs(o,u,n,s,r,null),c={boxes:o,scores:u},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},f=a.BV.runKernel(d.cy,c,h);return{selectedIndices:f[0],validOutputs:f[1]}}});const js=async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=(0,p._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,p._1)(t,"scores","nonMaxSuppressionAsync"),u=Rs(i,o,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,f]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:g}=Bs(d,f,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Jn(m,"int32"),validOutputs:Ke(g,"int32")}};const qs=(0,m.op)({resizeBilinear_:function(e,t,n=!1,s=!1){const r=(0,p._1)(e,"images","resizeBilinear");f.hu(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),f.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),f.hu(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=r,o=!1;3===r.rank&&(o=!0,i=gt(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,u={images:i},l={alignCorners:n,halfPixelCenters:s,size:t},c=a.BV.runKernel(d._Y,u,l);return o?gt(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Ks=(0,m.op)({resizeNearestNeighbor_:function(e,t,n=!1,s=!1){const r=(0,p._1)(e,"images","resizeNearestNeighbor");f.hu(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),f.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),f.hu("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),f.hu(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=r,o=!1;3===r.rank&&(o=!0,i=gt(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,u={images:i},l={alignCorners:n,halfPixelCenters:s,size:t},c=a.BV.runKernel(d.dp,u,l);return o?gt(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Xs=(0,m.op)({bincount_:function(e,t,n){const s=(0,p._1)(e,"x","bincount"),r=(0,p._1)(t,"weights","bincount");f.hu("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),f.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),f.hu(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const i={x:s,weights:r},o={size:n};return a.BV.runKernel(d.zv,i,o)}});const Ys=(0,m.op)({lessEqual_:function(e,t){let n=(0,p._1)(e,"a","lessEqual","string_or_numeric"),s=(0,p._1)(t,"b","lessEqual","string_or_numeric");[n,s]=(0,Pe.makeTypesMatch)(n,s),ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d.CA,r)}});const Zs=(0,m.op)({round_:function(e){const t={x:(0,p._1)(e,"x","round")};return a.BV.runKernel(d.e0,t)}});var Js=n(7546);const Qs=(0,m.op)({threshold_:function(e,t="binary",n=!1,s=.5){const r=(0,p._1)(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,o,u,l,c=en(Jn([s]),255);if(f.hu(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),f.hu(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),f.hu("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),f.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,u]=qn(r,[1,1,1],-1);const e=en(i,.2989),t=en(o,.587),n=en(u,.114);l=Je(Je(e,t),n)}else l=e;if("otsu"===t){c=function(e,t){let n,s,r,a,i,o,u=Jn([-1]),l=Jn([0]),c=Jn([0]);for(let h=0;h<e.size-1;h++){n=Pn(e,0,h+1),s=Pn(e,h+1),i=Lt(nn(n),t),o=Lt(nn(s),t);const d=nn(en(n,(0,Js.w)(0,n.size)));r=Lt(d,nn(n));const p=Ht(s.shape,n.size),f=Je((0,Js.w)(0,s.size),p),m=en(s,f);a=Lt(nn(m),nn(s));const g=tn(r,a),b=tn(r,a),x=en(i,o);c=en(en(x,g),b);const y=Kt(c,l);l=ns(y,c,l),u=ns(y,Jn([h]),u)}return u}(Xs(ie(Zs(l),"int32"),y([]),256),a)}const h=n?Ys(l,c):Kt(l,c);return ie(en(h,255),"int32")}});const er=(0,m.op)({transform_:function(e,t,n="nearest",s="constant",r=0,i){const o=(0,p._1)(e,"image","transform","float32"),u=(0,p._1)(t,"transforms","transform","float32");f.hu(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),f.hu(2===u.rank&&(u.shape[0]===o.shape[0]||1===u.shape[0])&&8===u.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),f.hu(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:o,transforms:u},c={interpolation:n,fillMode:s,fillValue:r,outputShape:i};return a.BV.runKernel(d.wx,l,c)}});const tr=(0,m.op)({bandPart_:function(e,t,n){(0,f.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,f.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=(0,p._1)(e,"a","bandPart");(0,f.hu)(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=gt((0,Js.w)(0,a,1,"int32"),[-1,1]),u=(0,Js.w)(0,i,1,"int32"),l=tn(o,u),c=rn(Ys(l,Ke(+t,"int32")),Xt(l,Ke(-n,"int32"))),h=Nn([a,i],s.dtype);return gt(Yn(es(gt(s,[-1,a,i])).map((e=>ns(c,e,h)))),r)}});const nr=(0,m.op)({min_:function(e,t=null,n=!1){const s={x:(0,p._1)(e,"x","min")},r={axis:t,keepDims:n};return a.BV.runKernel(d.c1,s,r)}});const sr=(0,m.op)({pow_:function(e,t){let n=(0,p._1)(e,"base","pow"),s=(0,p._1)(t,"exp","pow");[n,s]=(0,Pe.makeTypesMatch)(n,s);const r={a:n,b:s};return a.BV.runKernel(d.pe,r)}});function rr(e,t,n=null){if(0===e.rank)return Ze(e);if(1!==e.rank&&null===n)return rr(gt(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return nn(Ze(e),n);if(t===1/0)return Qt(Ze(e),n);if(t===-1/0)return nr(Ze(e),n);if("euclidean"===t||2===t)return Kn(nn(sr(Ze(e),Ke(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Qt(nn(Ze(e),n[0]),n[1]-1);if(t===1/0)return Qt(nn(Ze(e),n[1]),n[0]);if(t===-1/0)return nr(nn(Ze(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Kn(nn(wn(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ar=(0,m.op)({norm_:function(e,t="euclidean",n=null,s=!1){const r=rr(e=(0,p._1)(e,"x","norm"),t,n);let a=r.shape;if(s){const t=(0,f.EC)(n,e.shape);a=mn(r.shape,t)}return gt(r,a)}});const ir=(0,m.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,f.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,f.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=qn(e,e.shape[0],0).map((e=>Xn(e,[0])));(0,f.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(a.BV.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=en(nn(en(n[s],e)),n[s]);e=tn(e,t)}return Lt(e,ar(e,"euclidean"))})));return t?Yn(n,0):n}});function or(e,t=!1){return a.BV.tidy((()=>{(0,f.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=Gt(n),i=oe(e);const o=Ns([[1]],[1,1]);let u=oe(o);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=i,l=u,c=r;[u,i,r]=a.BV.tidy((()=>{const t=Pn(i,[e,e],[n-e,1]),a=ar(t),l=Pn(i,[e,e],[1,1]),c=ns(Kt(l,0),Ns([[-1]]),Ns([[1]])),h=tn(l,en(c,a)),d=Lt(t,h);u=1===d.shape[0]?oe(o):St([o,Pn(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=kn(Lt(an(c,h),a)),f=Pn(i,[e,0],[n-e,s]),m=en(p,u),g=rs(u);if(0===e)i=tn(f,an(m,an(g,f)));else{const t=tn(f,an(m,an(g,f)));i=St([Pn(i,[0,0],[e,s]),t],0)}const b=rs(m),x=Pn(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=tn(x,an(an(x,u),b));else{const t=tn(x,an(an(x,u),b));r=St([Pn(r,[0,0],[n,e]),t],1)}return[u,i,r]})),Ge([t,l,c])}return!t&&n>s&&(r=Pn(r,[0,0],[n,s]),i=Pn(i,[0,0],[s,s])),[r,i]}))}const ur=(0,m.op)({qr_:function(e,t=!1){if((0,f.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return or(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=es(gt(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach((e=>{const[n,s]=or(e,t);r.push(n),a.push(s)}));return[gt(Yn(r,0),e.shape),gt(Yn(a,0),e.shape)]}}});var lr;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(lr||(lr={}));const cr=(0,m.op)({computeWeightedLoss_:function(e,t,n=lr.SUM_BY_NONZERO_WEIGHTS){const s=(0,p._1)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,p._1)(t,"weights","computeWeightedLoss"));const a=null==r?s:en(s,r);if(n===lr.NONE)return a;if(n===lr.SUM)return nn(a);if(n===lr.MEAN){if(null==r)return cn(a);{const e=s.size/r.size,t=Lt(nn(a),nn(r));return e>1?Lt(t,Ke(e)):t}}if(n===lr.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Lt(nn(a),Ke(s.size));{const e=en(r,$n(s.shape)),t=ie(nn(In(e,Ke(0))),"float32");return Lt(nn(a),t)}}throw Error(`Unknown reduction: ${n}`)}});(0,m.op)({absoluteDifference_:function(e,t,n,s=lr.SUM_BY_NONZERO_WEIGHTS){const r=(0,p._1)(e,"labels","absoluteDifference"),a=(0,p._1)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,p._1)(n,"weights","absoluteDifference")),(0,f.k5)(r.shape,a.shape,"Error in absoluteDifference: ");const o=Ze(tn(r,a));return cr(o,i,s)}});(0,m.op)({cosineDistance_:function(e,t,n,s,r=lr.SUM_BY_NONZERO_WEIGHTS){const a=(0,p._1)(e,"labels","cosineDistance"),i=(0,p._1)(t,"predictions","cosineDistance");let o=null;null!=s&&(o=(0,p._1)(s,"weights","cosineDistance")),(0,f.k5)(a.shape,i.shape,"Error in cosineDistance: ");const u=Ke(1),l=tn(u,nn(en(a,i),n,!0));return cr(l,o,r)}});(0,m.op)({hingeLoss_:function(e,t,n,s=lr.SUM_BY_NONZERO_WEIGHTS){let r=(0,p._1)(e,"labels","hingeLoss");const a=(0,p._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,p._1)(n,"weights","hingeLoss")),(0,f.k5)(r.shape,a.shape,"Error in hingeLoss: ");const o=Ke(1);r=tn(en(Ke(2),r),o);const u=On(tn(o,en(r,a)));return cr(u,i,s)}});(0,m.op)({huberLoss_:function(e,t,n,s=1,r=lr.SUM_BY_NONZERO_WEIGHTS){const a=(0,p._1)(e,"labels","huberLoss"),i=(0,p._1)(t,"predictions","huberLoss");let o=null;null!=n&&(o=(0,p._1)(n,"weights","huberLoss")),(0,f.k5)(a.shape,i.shape,"Error in huberLoss: ");const u=Ke(s),l=Ze(tn(i,a)),c=hn(l,u),h=tn(l,c),d=Je(en(Ke(.5),wn(c)),en(u,h));return cr(d,o,r)}});(0,m.op)({logLoss_:function(e,t,n,s=1e-7,r=lr.SUM_BY_NONZERO_WEIGHTS){const a=(0,p._1)(e,"labels","logLoss"),i=(0,p._1)(t,"predictions","logLoss");let o=null;null!=n&&(o=(0,p._1)(n,"weights","logLoss")),(0,f.k5)(a.shape,i.shape,"Error in logLoss: ");const u=Ke(1),l=Ke(s),c=kn(en(a,Zt(Je(i,l)))),h=en(tn(u,a),Zt(Je(tn(u,i),l))),d=tn(c,h);return cr(d,o,r)}});const hr=(0,m.op)({squaredDifference_:function(e,t){let n=(0,p._1)(e,"a","squaredDifference"),s=(0,p._1)(t,"b","squaredDifference");[n,s]=(0,Pe.makeTypesMatch)(n,s),ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d._t,r,{})}});(0,m.op)({meanSquaredError_:function(e,t,n,s=lr.SUM_BY_NONZERO_WEIGHTS){const r=(0,p._1)(e,"labels","meanSquaredError"),a=(0,p._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,p._1)(n,"weights","meanSquaredError")),(0,f.k5)(r.shape,a.shape,"Error in meanSquaredError: ");const o=hr(r,a);return cr(o,i,s)}});(0,m.op)({sigmoidCrossEntropy_:function(e,t,n,s=0,r=lr.SUM_BY_NONZERO_WEIGHTS){let a=(0,p._1)(e,"multiClassLabels","sigmoidCrossEntropy");const i=(0,p._1)(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=(0,p._1)(n,"weights","sigmoidCrossEntropy")),(0,f.k5)(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=Ke(s),t=Ke(1),n=Ke(.5);a=Je(en(a,tn(t,e)),en(n,e))}const u=function(e,t){const n=(0,p._1)(e,"labels","sigmoidCrossEntropyWithLogits"),s=(0,p._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,f.k5)(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=On(s),a=en(s,n),i=Jt(Vt(kn(Ze(s))));return Je(tn(r,a),i)}(a,i);return cr(u,o,r)}});const dr=(0,m.op)({logSumExp_:function(e,t=null,n=!1){const s=(0,p._1)(e,"x","logSumExp"),r=(0,f.EC)(t,s.shape),a=Qt(s,r,!0),i=tn(s,a),o=Vt(i),u=nn(o,r),l=Zt(u),c=Je(gt(a,l.shape),l);if(n){const e=mn(c.shape,r);return gt(c,e)}return c}});(0,m.op)({softmaxCrossEntropy_:function(e,t,n,s=0,r=lr.SUM_BY_NONZERO_WEIGHTS){let a=(0,p._1)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,p._1)(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=(0,p._1)(n,"weights","softmaxCrossEntropy")),(0,f.k5)(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=Ke(s),t=Ke(1),n=Ke(a.shape[1]);a=Je(en(a,tn(t,e)),Lt(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=qe(((e,t,s)=>{const r=dr(t,[n],!0),a=tn(ie(t,"float32"),r);s([e,a]);const i=kn(en(a,e));return{value:nn(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=mn(e.shape,[n]);return[en(gt(e,a),tn(ie(s,"float32"),Vt(r))),en(gt(e,a),tn(Vt(r),ie(s,"float32")))]}}}));return s(e,t)}(a,i);return cr(u,o,r)}});(0,m.op)({sparseFillEmptyRows_:function(e,t,n,s){const r=(0,p._1)(e,"indices","sparseFillEmptyRows","int32"),i=(0,p._1)(t,"values","sparseFillEmptyRows"),o=(0,p._1)(n,"denseShape","sparseFillEmptyRows","int32"),u=(0,p._1)(s,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==u.rank)throw new Error(`Default value should be a scalar but received shape ${u.shape}`);const l={indices:r,values:i,denseShape:o,defaultValue:u},c=a.BV.runKernel(d.O3,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}});(0,m.op)({sparseReshape_:function(e,t,n){const s=(0,p._1)(e,"inputIndices","sparseReshape","int32"),r=(0,p._1)(t,"inputShape","sparseReshape","int32"),i=(0,p._1)(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const o={inputIndices:s,inputShape:r,newShape:i},u=a.BV.runKernel(d.nh,o);return{outputIndices:u[0],outputShape:u[1]}}});(0,m.op)({sparseSegmentMean_:function(e,t,n){const s=(0,p._1)(e,"data","sparseSegmentMean"),r=(0,p._1)(t,"indices","sparseSegmentMean","int32"),i=(0,p._1)(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const o={data:s,indices:r,segmentIds:i};return a.BV.runKernel(d.YW,o)}});(0,m.op)({sparseSegmentSum_:function(e,t,n){const s=(0,p._1)(e,"data","sparseSegmentSum"),r=(0,p._1)(t,"indices","sparseSegmentSum","int32"),i=(0,p._1)(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const o={data:s,indices:r,segmentIds:i};return a.BV.runKernel(d.Zj,o)}});(0,m.op)({stringNGrams_:function(e,t,n,s,r,i,o,u){const l=(0,p._1)(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=(0,p._1)(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:s,leftPad:r,rightPad:i,padWidth:o,preserveShortSequences:u},f={data:l,dataSplits:c},m=a.BV.runKernel(d._J,f,h);return{nGrams:m[0],nGramsSplits:m[1]}}});(0,m.op)({stringSplit_:function(e,t,n=!0){const s=(0,p._1)(e,"input","stringSplit","string"),r=(0,p._1)(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const i={skipEmpty:n},o={input:s,delimiter:r},u=a.BV.runKernel(d.s1,o,i);return{indices:u[0],values:u[1],shape:u[2]}}});(0,m.op)({stringToHashBucketFast_:function(e,t){const n=(0,p._1)(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return a.BV.runKernel(d.Xk,r,s)}});const pr={flipLeftRight:Ts,grayscaleToRGB:Es,resizeNearestNeighbor:Ks,resizeBilinear:qs,rotateWithOffset:As,cropAndResize:Cs,nonMaxSuppression:Fs,nonMaxSuppressionAsync:Ws,nonMaxSuppressionWithScore:Us,nonMaxSuppressionWithScoreAsync:Gs,nonMaxSuppressionPadded:Hs,nonMaxSuppressionPaddedAsync:js,threshold:Qs,transform:er},fr={bandPart:tr,gramSchmidt:ir,qr:ur};class mr extends Xe{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=a.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=a.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Ue((()=>ss(s).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Ue((()=>ss(s).variable(false)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Ue((()=>{const e=Je(en(i,this.rho),en(wn(r),1-this.rho)),t=en(Lt(Kn(Je(o,this.epsilon)),Kn(Je(i,this.epsilon))),r),n=Je(en(o,this.rho),en(wn(t),1-this.rho));i.assign(e),o.assign(n);const a=Je(en(t,-this.learningRate),s);s.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ge(this.accumulatedGrads.map((e=>e.variable))),Ge(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}mr.className="Adadelta",ze(mr);class gr extends Xe{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=a.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Ue((()=>Ht(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=this.accumulatedGrads[n].variable;Ue((()=>{const e=Je(i,wn(r));i.assign(e);const t=Je(en(Lt(r,Kn(Je(e,a.BV.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ge(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}gr.className="Adagrad",ze(gr);class br extends Xe{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ue((()=>{this.accBeta1=Ke(t).variable(),this.accBeta2=Ke(n).variable()})),null==s&&(this.epsilon=a.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ue((()=>{const n=tn(1,this.accBeta1),s=tn(1,this.accBeta2);t.forEach(((t,r)=>{const i=a.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Ue((()=>ss(i).variable(false)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:Ue((()=>ss(i).variable(false)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,c=Je(en(u,this.beta1),en(o,1-this.beta1)),h=Je(en(l,this.beta2),en(wn(o),1-this.beta2)),d=Lt(c,n),p=Lt(h,s);u.assign(c),l.assign(h);const f=Je(en(Lt(d,Je(Kn(p),this.epsilon)),-this.learningRate),i);i.assign(f)})),this.accBeta1.assign(en(this.accBeta1,this.beta1)),this.accBeta2.assign(en(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ge(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Ge(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Ue((()=>{this.accBeta1.assign(sr(this.beta1,this.iterations_+1)),this.accBeta2.assign(sr(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}br.className="Adam",ze(br);class xr extends Xe{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ue((()=>{this.iteration=Ke(0).variable(),this.accBeta1=Ke(t).variable()})),null==s&&(this.epsilon=a.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ue((()=>{const n=tn(1,this.accBeta1),s=Lt(-this.learningRate,Je(en(this.iteration,this.decay),1));t.forEach(((t,r)=>{const i=a.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:ss(i).variable(false)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:ss(i).variable(false)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,c=Je(en(u,this.beta1),en(o,1-this.beta1)),h=en(l,this.beta2),d=Ze(o),p=ln(h,d);u.assign(c),l.assign(p);const f=Je(en(Lt(s,n),Lt(c,Je(p,this.epsilon))),i);i.assign(f)})),this.iteration.assign(Je(this.iteration,1)),this.accBeta1.assign(en(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ge(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Ge(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}xr.className="Adamax",ze(xr);class yr extends Xe{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=a.BV.registeredVariables[t];Ue((()=>{const e=Je(en(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=He(Ke(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}yr.className="SGD",ze(yr);class wr extends yr{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ke(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=a.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Ue((()=>ss(s).variable(e)))}}const r=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&Ue((()=>{let e;const t=Je(en(this.m,r),i);e=this.useNesterov?Je(en(this.c,Je(i,en(t,this.m))),s):Je(en(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ge(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}wr.className="Momentum",ze(wr);class vr extends Xe{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=a.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=a.BV.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Ue((()=>ss(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Ue((()=>ss(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Ue((()=>ss(s).variable(r)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const o=this.accumulatedMeanSquares[n].variable,u=this.accumulatedMoments[n].variable;Ue((()=>{const e=Je(en(o,this.decay),en(wn(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Je(en(t,this.decay),en(i,1-this.decay)),a=Lt(en(i,this.learningRate),Kn(tn(e,Je(wn(r),this.epsilon)))),l=Je(en(u,this.momentum),a);o.assign(e),t.assign(r),u.assign(l);const c=tn(s,l);s.assign(c)}else{const e=Je(en(o,this.decay),en(wn(i),1-this.decay)),t=Je(en(u,this.momentum),Lt(en(i,this.learningRate),Kn(Je(e,this.epsilon))));o.assign(e),u.assign(t);const n=tn(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ge(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ge(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Ge(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}vr.className="RMSProp",ze(vr);class kr{static sgd(e){return new yr(e)}static momentum(e,t,n=!1){return new wr(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new vr(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new br(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new mr(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new xr(e,t,n,s,r)}static adagrad(e,t=.1){return new gr(e,t)}}const Ir={sgd:kr.sgd,momentum:kr.momentum,adadelta:kr.adadelta,adagrad:kr.adagrad,rmsprop:kr.rmsprop,adamax:kr.adamax,adam:kr.adam};var Sr=n(8307);const Nr="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function $r(){return new Promise((e=>Nr((()=>e()))))}function Cr(e,t){const n=e[0].length;e.forEach(((e,t)=>{f.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),f.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)f.hu(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Tr(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}const Er=30;function Ar(e){return e<=Er?e:(0,f.jP)(e,Math.floor(Math.sqrt(e)))}function Rr(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Fr(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function _r(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Dr(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function Or(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Br(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function Mr(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===(0,f.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,u=r.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...(0,f.e3)(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}function Lr(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function zr(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Lr(n,t,e)}function Pr(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let e=r;e<a;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:(0,f.NA)(t.shape)/o,sliceSize:i,strides:[...(0,f.e3)(n.slice(0,r)),1],outputSize:(0,f.NA)(n)}}const Vr=1.7580993408473768,Wr=1.0507009873554805,Ur=.3275911,Gr=.254829592,Hr=-.284496736,jr=1.421413741,qr=-1.453152027,Kr=1.061405429;var Xr=n(56);function Yr(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Zr(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Jr(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Qr(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function ea(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ta(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function na(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function sa(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const ra="->",aa=/->/g;function ia(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(aa,"").length)/ra.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=e.split(ra);(0,f.hu)(-1===s.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=s.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(o.indexOf(a[e][t]))}const l=o.length,c=[];for(let e=r.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function oa(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function ua(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:(0,f.hu)(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function la(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const a=[];for(let e=0;e<n.length;++e){const r=ha(t,n[e]);for(const t of r)-1===a.indexOf(t)&&(s[e].push(t),a.push(t))}return{path:n,steps:s}}function ca(e){return e.every(((e,t)=>e===t))}function ha(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function da(e,t,n=0){let s=[];if("number"==typeof t)(0,f.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,f.hu)(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}(0,f.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function pa(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function fa(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function ma(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function ga(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function ba(e,t){return`size ${e} must be non-negative, not ${t}`}function xa(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ya(e,t){return`Input to reshape is a SparseTensor with ${(0,f.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,f.NA)(t)}. inputShape=${e} outputShape= ${t}`}function wa(e,t){return`Input to reshape is a tensor with ${(0,f.NA)(e)} dense values, but the requested shape has ${(0,f.NA)(t)}. inputShape=${e} outputShape=${t}`}function va(){return"segment ids must be >= 0"}function ka(){return"segment ids are not increasing"}function Ia(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Sa(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Na(e,t){let n,s=!1;for(e<=Er?(n=e,s=!0):n=(0,f.jP)(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=(0,f.jP)(e,n+1);return n}function $a(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function Ca(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Ta(e){try{return e.map((e=>(0,b.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ea(e){return e.map((e=>(0,b.encodeString)(e)))}function Aa(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=ae(e,"int32"),r=ae([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=s.indexToLoc(n[t]),i=t*e.length;r.values.set(a,i)}return r.toTensor()}var Ra=n(9941);const Fa={kernelName:d.SY,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(e,fs(ie(n,"float32"),-1))}}},_a={kernelName:d.VG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=wn(ie(n,"float32")),s=Kn(tn(Ke(1),t));return kn(Lt(e,s))}}}},Da={kernelName:d.Sp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Kn(tn(wn(ie(n,"float32")),1));return Lt(e,t)}}}},Oa={kernelName:d.mm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ye(n.shape,s.shape);return{a:()=>{let t=e;const s=xe(n.shape,r);return s.length>0&&(t=nn(t,s)),gt(t,n.shape)},b:()=>{let t=e;const n=xe(s.shape,r);return n.length>0&&(t=nn(t,n)),gt(t,s.shape)}}}},Ba={kernelName:d.Xz,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},Ma={kernelName:d.sJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ss(n)}}},La={kernelName:d.aJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ss(n)}}},za={kernelName:d.M2,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lt(e,Kn(tn(Ke(1),wn(ie(n,"float32")))))}}},Pa={kernelName:d.qw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Kn(Je(Ke(1),wn(ie(n,"float32"))));return Lt(e,t)}}}},Va={kernelName:d.QC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ye(n.shape,s.shape);return{a:()=>{const t=Je(wn(n),wn(s));let a=en(e,Lt(s,t));const i=xe(n.shape,r);return i.length>0&&(a=nn(a,i)),gt(a,n.shape)},b:()=>{const t=Je(wn(n),wn(s));let a=kn(en(e,Lt(n,t)));const i=xe(s.shape,r);return i.length>0&&(a=nn(a,i)),gt(a,s.shape)}}}},Wa={kernelName:d.jM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lt(e,Je(wn(ie(n,"float32")),1))}}},Ua={kernelName:d.Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lt(e,tn(Ke(1),wn(ie(n,"float32"))))}}};const Ga=(0,m.op)({avgPool3dGrad_:function(e,t,n,s,r,i){const o=(0,p._1)(e,"dy","avgPool3dGrad"),u=(0,p._1)(t,"input","avgPool3dGrad");let l=o,c=u,h=!1;4===u.rank&&(h=!0,l=gt(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=gt(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),f.hu(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),f.hu(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),mt("avgPool3dGrad",r,i);const m={dy:l,input:c},g={filterSize:n,strides:s,pad:r,dimRoundingMode:i},b=a.BV.runKernel(d.IM,m,g);return h?gt(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),Ha={kernelName:d._k,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Ga(e,s,r,a,i,o)}}};const ja=(0,m.op)({avgPoolGrad_:function(e,t,n,s,r){const i=(0,p._1)(e,"dy","avgPoolGrad"),o=(0,p._1)(t,"input","avgPoolGrad");f.hu(o.rank===i.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`));let u=o,l=i,c=!1;3===o.rank&&(c=!0,u=gt(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=gt(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f.hu(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),f.hu(4===u.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${u.rank}.`));const h={dy:l,input:u},m={filterSize:n,strides:s,pad:r},g=a.BV.runKernel(d.RO,h,m);return c?gt(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),qa={kernelName:d.Jh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>ja(e,s,r,a,i)}}},Ka={kernelName:d.XL,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>an(e,r,!1,!1),b:()=>an(e,s,!0,!1)}:a&&!i?{a:()=>an(r,e,!1,!0),b:()=>an(s,e,!1,!1)}:{a:()=>an(r,e,!0,!0),b:()=>an(e,s,!0,!0)}:{a:()=>an(e,r,!1,!0),b:()=>an(s,e,!0,!1)}}};const Xa=(0,m.op)({spaceToBatchND_:function(e,t,n){const s=(0,p._1)(e,"x","spaceToBatchND");f.hu(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),f.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),f.hu(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},i={blockShape:t,paddings:n};return a.BV.runKernel(d.TQ,r,i)}}),Ya={kernelName:d.zw,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Xa(e,s,r)}}},Za={kernelName:d.Ly,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>nn(e,o,!0)}}},Ja={kernelName:d.RF,gradFunc:e=>({x:()=>e.clone()})},Qa={kernelName:d.gJ,gradFunc:e=>({x:()=>ss(e)})},ei={kernelName:d.xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>ns(rn(Xt(s,r),Ys(s,a)),e,ss(e))}}},ti={kernelName:d.yj,inputsToSave:["x"],gradFunc:Fa.gradFunc},ni={kernelName:d.Eh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=(0,f.EC)(r,t[0].shape)[0],i=s.map((e=>e[a]));return qn(e,i,a).map((e=>()=>e))}},si={kernelName:d.mh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return f.hu(dt(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Rt(s.shape,e,r,i,o,u),filter:()=>ds(s,e,r.shape,i,o,u)}}},ri={kernelName:d.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Et(e,r,a,i,o,1,u),filter:()=>ds(e,s,r.shape,a,i,o,u)}}};const ai=(0,m.op)({conv3DBackpropFilter_:function(e,t,n,s,r){let i=e;4===e.rank&&(i=gt(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=gt(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),f.hu(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),f.hu(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),f.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),f.hu(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),f.hu(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const u={x:i,dy:o},l={strides:s,pad:r,filterShape:n};return a.BV.runKernel(d.o2,u,l)}}),ii={kernelName:d.x1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;f.hu(dt(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>Dt(i.shape,e,o,r,a),filter:()=>ai(i,e,o.shape,r,a)}}};const oi=(0,m.op)({sin_:function(e){const t={x:(0,p._1)(e,"x","sin","float32")};return a.BV.runKernel(d.RQ,t)}}),ui={kernelName:d.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(kn(oi(ie(n,"float32"))),e)}}};const li=(0,m.op)({sinh_:function(e){const t={x:(0,p._1)(e,"x","sinh")};return a.BV.runKernel(d.w3,t)}}),ci={kernelName:d.TR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(li(ie(n,"float32")),e)}}};const hi=(0,m.op)({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:(0,p._1)(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:s};return a.BV.runKernel(d.iH,r,i)}}),di={kernelName:d.iH,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=bn([r],s.rank);let n=hi(e,r,a,!i);return null!=t&&(n=rs(n,t)),n}}}},pi={kernelName:d.ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;f.hu(dt(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return f.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),f.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),f.hu(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),f.hu(pt(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),mt("depthwiseConv2d",a,i),{x:()=>vs(u.shape,e,l,r,a,o,i),filter:()=>ws(u,e,l.shape,r,a,o,i)}}},fi={kernelName:d.p4,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,i={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>a.BV.runKernel(d.ek,i,n),filter:()=>a.BV.runKernel(d.Vn,o,n)}}},mi={kernelName:d.SX,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>a.BV.runKernel(d.HE,s)}}},gi={kernelName:d.Om,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=en(Vt(kn(wn(n))),2/Math.sqrt(Math.PI));return{x:()=>en(e,s)}}},bi={kernelName:d.NE,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(e,n)}}},xi={kernelName:d.YF,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>gt(e,n.shape)}}},yi={kernelName:d.Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(e,Vt(n))}}},wi={kernelName:d.OR,gradFunc:e=>({x:()=>ss(e)})},vi={kernelName:d.je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ye(n.shape,s.shape);return{a:()=>{const t=Lt(e,ie(s,"float32")),a=xe(n.shape,r);return a.length>0?gt(nn(t,a),n.shape):t},b:()=>{let t=en(e,ie(n,"float32"));const a=xe(s.shape,r);a.length>0&&(t=gt(nn(t,a),s.shape));const i=wn(s);return kn(Lt(t,ie(i,"float32")))}}}};const ki=(0,m.op)({rsqrt_:function(e){const t={x:(0,p._1)(e,"x","rsqrt","float32")};return a.BV.runKernel(d.bV,t)}}),Ii={kernelName:d.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,u=null==o?Ke(1):o,l=xe(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=tn(r,a),d=en(e,u),p=ki(Je(i,Ke(s))),f=en(en(en(p,p),p),Ke(-.5));return{x:()=>1===a.rank?gt(en(en(e,Ut(gt(p,[1,1,1,a.shape[0]]),c)),u),r.shape):gt(en(en(e,p),u),r.shape),mean:()=>{let e=en(en(p,Ke(-1)),d);return 1===a.rank&&(e=nn(e,l)),gt(e,a.shape)},variance:()=>{let e=en(en(f,h),d);return 1===a.rank&&(e=nn(e,l)),gt(e,a.shape)},scale:()=>{const t=en(h,p);let n=en(e,t);return 1===a.rank&&(n=nn(n,l)),gt(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=nn(t,l)),gt(t,a.shape)}}}};const Si=(0,m.op)({unsortedSegmentSum_:function(e,t,n){const s=(0,p._1)(e,"x","unsortedSegmentSum"),r=(0,p._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,f.hu)((0,f.GN)(n),(()=>"numSegments must be of dtype int"));const i={x:s,segmentIds:r},o={numSegments:n};return a.BV.runKernel(d.Qv,i,o)}}),Ni={kernelName:d.qi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=(0,f.EC)(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=$i(0,u),d=$i(u+1,u+1+c),p=Ci([o,[n],l]),f=gt(e,p),m=gt(r,[n]),g=Ci([[u],h,d]),b=rs(f,g);let x=Si(b,m,s.shape[i]);const y=xn(g);return x=rs(x,y),x},indices:()=>r}}};function $i(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function Ci(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const Ti={kernelName:d.Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>ss(n),b:()=>ss(s)}}},Ei={kernelName:d.iJ,gradFunc:e=>({x:()=>ie(e,"float32")})},Ai={kernelName:d.av,gradFunc:e=>({x:()=>ss(e)})},Ri={kernelName:d.iW,gradFunc:e=>({x:()=>ss(e)})},Fi={kernelName:d.r7,gradFunc:e=>({x:()=>ss(e)})},_i={kernelName:d.J$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=Kt(s,0);return{x:()=>ns(a,e,en(e,r))}}},Di={kernelName:d.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lt(e,Je(n,1))}}},Oi={kernelName:d.Zb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lt(e,ie(n,"float32"))}}},Bi={kernelName:d.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=Vt(s);return tn(e,en(nn(e,r,!0),t))}}}};const Mi=(0,m.op)({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,i=1,o=.5){const u={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:o};return a.BV.runKernel(d.Hh,u,l)}}),Li={kernelName:d.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Mi(s,r,e,a,i,o,u)}}};function zi(e,t,n,s){return t.rank<n.rank&&(t=gt(t,mn(t.shape,s))),e.rank<n.rank&&(e=gt(e,mn(e.shape,s))),{x:()=>en(e,ie(Pt(n,t),e.dtype))}}const Pi={kernelName:d.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=zi(e,t[1],a,f.EC(r,a.shape));return{x:()=>i.x()}}};const Vi=(0,m.op)({less_:function(e,t){let n=(0,p._1)(e,"a","less","string_or_numeric"),s=(0,p._1)(t,"b","less","string_or_numeric");[n,s]=(0,Pe.makeTypesMatch)(n,s),ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d.vt,r)}}),Wi={kernelName:d.BM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>en(e,ie(Xt(n,s),"float32")),b:()=>en(e,ie(Vi(n,s),"float32"))}}};const Ui=(0,m.op)({maxPool3dGrad_:function(e,t,n,s,r,i,o){const u=(0,p._1)(e,"dy","maxPool3dGrad"),l=(0,p._1)(t,"input","maxPool3dGrad"),c=(0,p._1)(n,"output","maxPool3dGrad");let h=u,m=l,g=c,b=!1;4===l.rank&&(b=!0,h=gt(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),m=gt(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),g=gt(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),f.hu(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),f.hu(5===m.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`)),f.hu(5===g.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${g.rank}.`)),mt("maxPool3dGrad",i,o);const x={dy:h,input:m,output:g},y={filterSize:s,strides:r,pad:i,dimRoundingMode:o},w=a.BV.runKernel(d.OU,x,y);return b?gt(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}}),Gi={kernelName:d.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Ui(e,s,r,a,i,o,u)}}};const Hi=(0,m.op)({maxPoolGrad_:function(e,t,n,s,r,i,o){const u=(0,p._1)(e,"dy","maxPoolGrad"),l=(0,p._1)(t,"input","maxPoolGrad"),c=(0,p._1)(n,"output","maxPoolGrad");f.hu(l.rank===u.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${u.rank})`)),f.hu(4===u.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),f.hu(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),mt("maxPoolGrad",i,o);const h={dy:u,input:l,output:c},m={filterSize:s,strides:r,pad:i,dimRoundingMode:o};return a.BV.runKernel(d.OV,h,m)}}),ji={kernelName:d.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Hi(e,s,r,a,i,o)}}},qi={kernelName:d.q2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=f.EC(r,s.shape),i=fn(s.shape,a)[1],o=f.NA(i);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=gt(e,t);return Lt(en(n,$n(s.shape,"float32")),o)}}}},Ki={kernelName:d.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=zi(e,i,a,f.EC(r,a.shape));return{x:()=>o.x()}}},Xi={kernelName:d.q8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>en(e,ie(Ys(n,s),"float32")),b:()=>en(e,ie(Kt(n,s),"float32"))}}},Yi={kernelName:d.jQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>Pn(e,a,s.shape)}}},Zi={kernelName:d.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ye(n.shape,s.shape);return{a:()=>{const t=xe(n.shape,r);return t.length>0?gt(nn(e,t),n.shape):e},b:()=>{const t=en(e,kn(jt(Lt(n,s)))),a=xe(s.shape,r);return a.length>0?gt(nn(t,a),s.shape):t}}}},Ji={kernelName:d.wY,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ye(n.shape,s.shape);return{a:()=>{const t=en(e,ie(s,"float32")),a=xe(n.shape,r);return a.length>0?gt(nn(t,a),n.shape):t},b:()=>{const t=en(e,ie(n,"float32")),a=xe(s.shape,r);return a.length>0?gt(nn(t,a),s.shape):t}}}},Qi={kernelName:d.ku,gradFunc:e=>({x:()=>kn(e)})},eo={kernelName:d.we,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Nn(n.shape,"float32")}}},to={kernelName:d.qW,gradFunc:e=>({x:()=>ss(e)})},no={kernelName:d.Qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return es(e,s).map((e=>()=>e))}},so={kernelName:d.ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>Pn(e,a,s.shape)}}},ro={kernelName:d.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=ye(a.shape,i.shape);return{a:()=>{const t=ie(i,"float32");let n=en(e,en(t,sr(a,tn(t,Ke(1)))));const s=xe(a.shape,o);return s.length>0&&(n=nn(n,s)),gt(n,a.shape)},b:()=>{const t=Kt(a,0),n=ns(t,Zt(a),ss(a));let s=en(e,en(r,n));const u=xe(i.shape,o);return u.length>0&&(s=nn(s,u)),gt(s,i.shape)}}}},ao={kernelName:d.o0,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=Kt(n,0);return{x:()=>ns(r,e,en(e,s)),alpha:()=>{let t=ns(r,ss(e),en(e,n));const a=xe(s.shape,e.shape);return a.length>0&&(t=nn(t,a)),gt(t,s.shape)}}}},io={kernelName:d.oH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ye(n.shape,s.shape);return{a:()=>{const t=Lt(e,ie(s,"float32")),a=xe(n.shape,r);return a.length>0?gt(nn(t,a),n.shape):t},b:()=>{let t=en(e,ie(n,"float32"));const a=xe(s.shape,r);a.length>0&&(t=gt(nn(t,a),s.shape));const i=wn(s);return kn(Lt(t,ie(i,"float32")))}}}},oo={kernelName:d.$H,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lt(e,kn(wn(n)))}}},uo={kernelName:d.Sb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=en(Ys(n,6),fs(n));return{x:()=>en(e,ie(s,"float32"))}}},lo={kernelName:d.qk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(e,ie(fs(n),"float32"))}}},co={kernelName:d.HZ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gt(e,n.shape)}}},ho={kernelName:d._Y,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>a.BV.runKernel(d.zb,r,n)}}},po={kernelName:d.dp,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>a.BV.runKernel(d.Hm,r,n)}}},fo={kernelName:d.mK,gradFunc:(e,t,n)=>{const{dims:s}=n,r=(0,f.EC)(s,e.shape);return{x:()=>Bn(e,r)}}},mo={kernelName:d.e0,gradFunc:e=>({x:()=>ss(e)})},go={kernelName:d.bV,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kn(Lt(e,en(sr(n,1.5),2)))}}};const bo=(0,m.op)({logicalNot_:function(e){const t={x:(0,p._1)(e,"x","logicalNot","bool")};return a.BV.runKernel(d.Vf,t)}}),xo={kernelName:d.Ph,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>ie(ss(n),"float32"),t:()=>en(e,ie(n,e.dtype)),e:()=>en(e,ie(bo(n),e.dtype))}}},yo={kernelName:d.oF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Kt(n,Ke(0)),s=Ke(Vr),r=Ke(Wr),a=en(e,r),i=en(en(e,s),Vt(ie(n,"float32")));return ns(t,a,i)}}}},wo={kernelName:d.a5,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(e,en(n,tn(Ke(1),n)))}}},vo={kernelName:d.i5,gradFunc:e=>({x:()=>ss(e)})};const ko=(0,m.op)({cos_:function(e){const t={x:(0,p._1)(e,"x","cos","float32")};return a.BV.runKernel(d.mc,t)}}),Io={kernelName:d.RQ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(ko(ie(n,"float32")),e)}}};const So=(0,m.op)({cosh_:function(e){const t={x:(0,p._1)(e,"x","cosh","float32")};return a.BV.runKernel(d.TR,t)}}),No={kernelName:d.w3,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(So(ie(n,"float32")),e)}}},$o={kernelName:d.p2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,u]=De(s,r,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>Tn(e,l)}}},Co={kernelName:d.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=en(e,s);return{logits:()=>tn(a,en(nn(a,[r],true),s))}}},To={kernelName:d.MR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(e,zn(n))}}};const Eo=(0,m.op)({batchToSpaceND_:function(e,t,n){const s=(0,p._1)(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));f.hu(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),f.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),f.hu(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const i={x:s},o={blockShape:t,crops:n};return a.BV.runKernel(d.zw,i,o)}}),Ao={kernelName:d.TQ,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Eo(e,s,r)}}},Ro={kernelName:d.L8,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>St(e,s)}}},Fo={kernelName:d.FK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lt(e,en(Kn(ie(n,"float32")),2))}}},_o={kernelName:d.bK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(e,en(ie(n,"float32"),2))}}};const Do=[Fa,_a,Da,Oa,Ba,Ma,La,za,Pa,Va,Wa,Ua,Ha,qa,Ka,Ya,Za,Ja,Qa,ei,ti,ni,ri,si,ii,ui,ci,di,pi,fi,io,mi,gi,bi,xi,yi,vi,wi,Ii,Ni,Ti,Ei,Ai,Ri,Fi,_i,Di,Oi,Bi,Li,Pi,Pi,Wi,Gi,ji,qi,Ki,Xi,Yi,Zi,Ji,Qi,eo,to,no,so,so,ro,ao,oo,uo,lo,co,ho,po,fo,mo,go,xo,yo,wo,vo,Io,No,$o,Co,To,Ao,Ao,Ro,Ro,Fo,{kernelName:d._t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ke(2);return{a:()=>en(e,en(r,tn(n,s))),b:()=>en(e,en(r,tn(s,n)))}}},_o,{kernelName:d.h8,gradFunc:e=>({x:()=>ss(e)})},{kernelName:d.Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ye(n.shape,s.shape);return{a:()=>{let t=e;const s=xe(n.shape,r);return s.length>0&&(t=nn(t,s)),gt(t,n.shape)},b:()=>{let t=e;const n=xe(s.shape,r);return n.length>0&&(t=nn(t,n)),gt(kn(t),s.shape)}}}},{kernelName:d.GB,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;(0,f.EC)(a,s.shape).forEach((e=>{r[e]=1}));const i=gt(e,r),o=en(i,$n(s.shape,"float32"));return{x:()=>o}}},{kernelName:d.sE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lt(e,wn(ko(n)))}}},{kernelName:d.MI,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>en(tn(Ke(1),wn(n)),e)}}},{kernelName:d.n9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=ss(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=Je(t,Pn(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=Je(t,Pn(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=Je(t,Pn(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=Je(t,Pn(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:d.G3,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=xn(r);return{x:()=>rs(e,a)}}},{kernelName:d.To,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>Yn(e,r)}}},{kernelName:d.Qv,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=ln(t,ss(t)),s=qt(e,n);let r=Xt(t,Ke(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=Wt(r,e+1);r=rn(r,$n(s.shape,"bool"));const i=ss(s);return ns(r,s,i)}(e,n)}}},{kernelName:d.Ru,gradFunc:e=>({x:()=>ss(e)})}];for(const e of Do)(0,Sr.Li)(e);(0,re.t3)().prototype.abs=function(){return this.throwIfDisposed(),Ze(this)};const Oo=(0,m.op)({acos_:function(e){const t={x:(0,p._1)(e,"x","acos")};return a.BV.runKernel(d.VG,t)}});(0,re.t3)().prototype.acos=function(){return this.throwIfDisposed(),Oo(this)};const Bo=(0,m.op)({acosh_:function(e){const t={x:(0,p._1)(e,"x","acosh")};return a.BV.runKernel(d.Sp,t)}});(0,re.t3)().prototype.acosh=function(){return this.throwIfDisposed(),Bo(this)},(0,re.t3)().prototype.add=function(e){return this.throwIfDisposed(),Je(this,e)},(0,re.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),Qe(this,e,t)},(0,re.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),et(this,e,t)},(0,re.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),tt(this,e)};const Mo=(0,m.op)({argMin_:function(e,t=0){const n={x:(0,p._1)(e,"x","argMin")},s={axis:t};return a.BV.runKernel(d.aJ,n,s)}});(0,re.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),Mo(this,e)},(0,re.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,f.hu)(1===this.size,(()=>"The array must have only 1 element.")),gt(this,[])},(0,re.t3)().prototype.asType=function(e){return this.throwIfDisposed(),ie(this,e)},(0,re.t3)().prototype.as1D=function(){return this.throwIfDisposed(),gt(this,[this.size])},(0,re.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),gt(this,[e,t])},(0,re.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),gt(this,[e,t,n])},(0,re.t3)().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),gt(this,[e,t,n,s])},(0,re.t3)().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),gt(this,[e,t,n,s,r])};const Lo=(0,m.op)({asin_:function(e){const t={x:(0,p._1)(e,"x","asin")};return a.BV.runKernel(d.M2,t)}});(0,re.t3)().prototype.asin=function(){return this.throwIfDisposed(),Lo(this)};const zo=(0,m.op)({asinh_:function(e){const t={x:(0,p._1)(e,"x","asinh")};return a.BV.runKernel(d.qw,t)}});(0,re.t3)().prototype.asinh=function(){return this.throwIfDisposed(),zo(this)};const Po=(0,m.op)({atan_:function(e){const t={x:(0,p._1)(e,"x","atan")};return a.BV.runKernel(d.jM,t)}});(0,re.t3)().prototype.atan=function(){return this.throwIfDisposed(),Po(this)};const Vo=(0,m.op)({atan2_:function(e,t){let n=(0,p._1)(e,"a","atan2"),s=(0,p._1)(t,"b","atan2");[n,s]=(0,Pe.makeTypesMatch)(n,s);const r={a:n,b:s};return a.BV.runKernel(d.QC,r)}});(0,re.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),Vo(this,e)};const Wo=(0,m.op)({atanh_:function(e){const t={x:(0,p._1)(e,"x","atanh")};return a.BV.runKernel(d.Oy,t)}});(0,re.t3)().prototype.atanh=function(){return this.throwIfDisposed(),Wo(this)},(0,re.t3)().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),bt(this,e,t,n,s)},(0,re.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Eo(this,e,t)},(0,re.t3)().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),yt(this,e,t,n,s,r)},(0,re.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),ts(this,e)},(0,re.t3)().prototype.cast=function(e){return this.throwIfDisposed(),ie(this,e)};const Uo=(0,m.op)({ceil_:function(e){const t={x:(0,p._1)(e,"x","ceil","float32")};return a.BV.runKernel(d.gJ,t)}});(0,re.t3)().prototype.ceil=function(){return this.throwIfDisposed(),Uo(this)},(0,re.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),It(this,e,t)},(0,re.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof re.es&&(e=[e]),St([this,...e],t)},(0,re.t3)().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),At(this,e,t,n,s,r,a)},(0,re.t3)().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),Ft(this,e,t,n,s,r)},(0,re.t3)().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Et(this,e,t,n,s,r,a)},(0,re.t3)().prototype.cos=function(){return this.throwIfDisposed(),ko(this)},(0,re.t3)().prototype.cosh=function(){return this.throwIfDisposed(),So(this)},(0,re.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),hi(this,e,t,n)};const Go=(0,m.op)({depthToSpace_:function(e,t,n="NHWC"){const s=(0,p._1)(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],i="NHWC"===n?s.shape[2]:s.shape[3],o="NHWC"===n?s.shape[3]:s.shape[1];f.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),f.hu(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),f.hu(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),f.hu(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`));const u={x:s},l={blockSize:t,dataFormat:n};return a.BV.runKernel(d.T0,u,l)}});(0,re.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Go(this,e,t)},(0,re.t3)().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Bt(this,e,t,n,s,r,a)};const Ho=(0,m.op)({dilation2d_:function(e,t,n,s,r=[1,1],i="NHWC"){const o=(0,p._1)(e,"x","dilation2d"),u=(0,p._1)(t,"filter","dilation2d");f.hu(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),f.hu(3===u.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${u.rank}.`)),f.hu("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=o,c=!1;3===o.rank&&(l=gt(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);const h={x:l,filter:u},m={strides:n,pad:s,dilations:r},g=a.BV.runKernel(d.p4,h,m);return c?gt(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});(0,re.t3)().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),Ho(this,e,t,n,s,r)};const jo=(0,m.op)({divNoNan_:function(e,t){let n=(0,p._1)(e,"a","div"),s=(0,p._1)(t,"b","div");[n,s]=(0,Pe.makeTypesMatch)(n,s);const r=Lt(n,s),a=ss(r),i=Pt(s,a);return ns(i,a,r)}});(0,re.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),jo(this,e)},(0,re.t3)().prototype.div=function(e){return this.throwIfDisposed(),Lt(this,e)};const qo=(0,m.op)({dot_:function(e,t){const n=(0,p._1)(e,"t1","dot"),s=(0,p._1)(t,"t2","dot");f.hu(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(f.hu(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=gt(n,[1,-1]),t=gt(s,[-1,1]),r=an(e,t);return gt(r,[])}if(1===n.rank&&2===s.rank){const e=gt(n,[1,-1]),t=gt(s,[s.shape[0],s.shape[1]]),r=an(e,t);return gt(r,[r.size])}if(2===n.rank&&1===s.rank){const e=gt(s,[-1,1]),t=an(n,e);return gt(t,[t.size])}{const e=gt(s,[s.shape[0],s.shape[1]]);return an(n,e)}}});(0,re.t3)().prototype.dot=function(e){return this.throwIfDisposed(),qo(this,e)},(0,re.t3)().prototype.elu=function(){return this.throwIfDisposed(),zt(this)},(0,re.t3)().prototype.equal=function(e){return this.throwIfDisposed(),Pt(this,e)};const Ko=(0,m.op)({erf_:function(e){let t=(0,p._1)(e,"x","erf");f.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=ie(t,"float32"));const n={x:t};return a.BV.runKernel(d.Om,n)}});(0,re.t3)().prototype.erf=function(){return this.throwIfDisposed(),Ko(this)},(0,re.t3)().prototype.exp=function(){return this.throwIfDisposed(),Vt(this)},(0,re.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),Wt(this,e)};const Xo=(0,m.op)({expm1_:function(e){const t={x:(0,p._1)(e,"x","expm1")};return a.BV.runKernel(d.Y0,t)}});(0,re.t3)().prototype.expm1=function(){return this.throwIfDisposed(),Xo(this)},(0,re.t3)().prototype.fft=function(){return this.throwIfDisposed(),us(this)},(0,re.t3)().prototype.flatten=function(){return this.throwIfDisposed(),gt(this,[this.size])},(0,re.t3)().prototype.floor=function(){return this.throwIfDisposed(),jt(this)},(0,re.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),Mt(this,e)},(0,re.t3)().prototype.gather=function(e,t){return this.throwIfDisposed(),qt(this,e,t)},(0,re.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Xt(this,e)},(0,re.t3)().prototype.greater=function(e){return this.throwIfDisposed(),Kt(this,e)},(0,re.t3)().prototype.ifft=function(){return this.throwIfDisposed(),cs(this)},(0,re.t3)().prototype.irfft=function(){return this.throwIfDisposed(),hs(this)};const Yo=(0,m.op)({isFinite_:function(e){const t={x:(0,p._1)(e,"x","isFinite")};return a.BV.runKernel(d.av,t)}});(0,re.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),Yo(this)};const Zo=(0,m.op)({isInf_:function(e){const t={x:(0,p._1)(e,"x","isInf")};return a.BV.runKernel(d.iW,t)}});(0,re.t3)().prototype.isInf=function(){return this.throwIfDisposed(),Zo(this)};const Jo=(0,m.op)({isNaN_:function(e){const t={x:(0,p._1)(e,"x","isNaN")};return a.BV.runKernel(d.r7,t)}});(0,re.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),Jo(this)},(0,re.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Yt(this,e)},(0,re.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),Ys(this,e)},(0,re.t3)().prototype.less=function(e){return this.throwIfDisposed(),Vi(this,e)};const Qo=(0,m.op)({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const i=(0,p._1)(e,"x","localResponseNormalization");f.hu(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),f.hu(f.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=i,u=!1;3===i.rank&&(u=!0,o=gt(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:o},c={depthRadius:t,bias:n,alpha:s,beta:r},h=a.BV.runKernel(d.eZ,l,c);return u?gt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});(0,re.t3)().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Qo(this,e,t,n,s)};const eu=(0,m.op)({logSigmoid_:function(e){const t=(0,p._1)(e,"x","logSigmoid"),n=qe((e=>({value:kn(jn(kn(e))),gradFunc:t=>en(t,zn(kn(e)))})));return n(t)}});(0,re.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),eu(this)},(0,re.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),sn(this,e)},(0,re.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),dr(this,e,t)},(0,re.t3)().prototype.log=function(){return this.throwIfDisposed(),Zt(this)},(0,re.t3)().prototype.log1p=function(){return this.throwIfDisposed(),Jt(this)},(0,re.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),rn(this,e)},(0,re.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),bo(this)};const tu=(0,m.op)({logicalOr_:function(e,t){const n=(0,p._1)(e,"a","logicalOr","bool"),s=(0,p._1)(t,"b","logicalOr","bool");ye(n.shape,s.shape);const r={a:n,b:s};return a.BV.runKernel(d.MZ,r)}});(0,re.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),tu(this,e)};const nu=(0,m.op)({logicalXor_:function(e,t){const n=(0,p._1)(e,"a","logicalXor","bool"),s=(0,p._1)(t,"b","logicalXor","bool");return ye(n.shape,s.shape),rn(tu(e,t),bo(rn(e,t)))}});(0,re.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),nu(this,e)},(0,re.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),an(this,e,t,n)},(0,re.t3)().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),on(this,e,t,n,s)},(0,re.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),Qt(this,e,t)},(0,re.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),ln(this,e)},(0,re.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),cn(this,e,t)},(0,re.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),nr(this,e,t)},(0,re.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),hn(this,e)};const su=(0,m.op)({mirrorPad_:function(e,t,n){f.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=(0,p._1)(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");f.hu(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)f.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),f.hu(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const i={paddings:t,mode:n},o={x:s};return a.BV.runKernel(d.jQ,o,i)}});(0,re.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),su(this,e,t)};const ru=(0,m.op)({mod_:function(e,t){let n=(0,p._1)(e,"a","mod"),s=(0,p._1)(t,"b","mod");[n,s]=(0,Pe.makeTypesMatch)(n,s);const r={a:n,b:s};return a.BV.runKernel(d.Vb,r)}});(0,re.t3)().prototype.mod=function(e){return this.throwIfDisposed(),ru(this,e)},(0,re.t3)().prototype.mul=function(e){return this.throwIfDisposed(),en(this,e)},(0,re.t3)().prototype.neg=function(){return this.throwIfDisposed(),kn(this)},(0,re.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),ar(this,e,t,n)},(0,re.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),In(this,e)},(0,re.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Sn(this,e,t,n)},(0,re.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),Cn(this)},(0,re.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),Tn(this,e,t)};const au=(0,m.op)({pool_:function(e,t,n,s,r,a,i){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const o=(0,p._1)(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=gt(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f.hu(pt(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const c=st(u.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const m=1===h[0]&&1===h[1],[g,b]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t])),u=t.map(((e,t)=>[s[t],o[t]])),l=t.map(((e,t)=>[0,i[t]]));return[u,l]}([c.inHeight,c.inWidth],h,d),x=m?s:"valid",y=m?u:Xa(u,h,g),w=("avg"===n?()=>bt(y,t,a,x,i):()=>on(y,t,a,x,i))(),v=m?w:Eo(w,h,b);return l?gt(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});(0,re.t3)().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),au(this,e,t,n,s,r,a)},(0,re.t3)().prototype.pow=function(e){return this.throwIfDisposed(),sr(this,e)},(0,re.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),En(this,e)};const iu=(0,m.op)({prod_:function(e,t=null,n=!1){let s=(0,p._1)(e,"x","prod");"bool"===s.dtype&&(s=ie(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return a.BV.runKernel(d.Dl,r,i)}});(0,re.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),iu(this,e,t)};const ou=(0,m.op)({reciprocal_:function(e){const t={x:(0,p._1)(e,"x","reciprocal")};return a.BV.runKernel(d.$H,t)}});(0,re.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),ou(this)},(0,re.t3)().prototype.relu=function(){return this.throwIfDisposed(),On(this)},(0,re.t3)().prototype.relu6=function(){return this.throwIfDisposed(),ps(this)},(0,re.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),gt(this,e.shape)},(0,re.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),gt(this,e)},(0,re.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),qs(this,e,t,n)},(0,re.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Ks(this,e,t,n)},(0,re.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),Bn(this,e)},(0,re.t3)().prototype.rfft=function(){return this.throwIfDisposed(),ls(this)},(0,re.t3)().prototype.round=function(){return this.throwIfDisposed(),Zs(this)},(0,re.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),ki(this)},(0,re.t3)().prototype.selu=function(){return this.throwIfDisposed(),Mn(this)},(0,re.t3)().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Ln(this,e,t,n,s,r,a)},(0,re.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),zn(this)};const uu=(0,m.op)({sign_:function(e){const t={x:(0,p._1)(e,"x","sign")};return a.BV.runKernel(d.i5,t)}});(0,re.t3)().prototype.sign=function(){return this.throwIfDisposed(),uu(this)},(0,re.t3)().prototype.sin=function(){return this.throwIfDisposed(),oi(this)},(0,re.t3)().prototype.sinh=function(){return this.throwIfDisposed(),li(this)},(0,re.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),Pn(this,e,t)},(0,re.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),Hn(this,e)},(0,re.t3)().prototype.softplus=function(){return this.throwIfDisposed(),jn(this)},(0,re.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Xa(this,e,t)},(0,re.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),qn(this,e,t)},(0,re.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),Kn(this)},(0,re.t3)().prototype.square=function(){return this.throwIfDisposed(),wn(this)},(0,re.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),hr(this,e)},(0,re.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),Xn(this,e)},(0,re.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof re.es?[this,e]:[this,...e];return Yn(n,t)},(0,re.t3)().prototype.step=function(e){return this.throwIfDisposed(),fs(this,e)};const lu=(0,m.op)({stridedSlice_:function(e,t,n,s,r=0,i=0,o=0,u=0,l=0){const c={x:(0,p._1)(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:u,shrinkAxisMask:l};return a.BV.runKernel(d.m2,c,h)}});(0,re.t3)().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),lu(this,e,t,n,s,r,a,i,o)},(0,re.t3)().prototype.sub=function(e){return this.throwIfDisposed(),tn(this,e)},(0,re.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),nn(this,e,t)};const cu=(0,m.op)({tan_:function(e){const t={x:(0,p._1)(e,"x","tan","float32")};return a.BV.runKernel(d.sE,t)}});(0,re.t3)().prototype.tan=function(){return this.throwIfDisposed(),cu(this)},(0,re.t3)().prototype.tanh=function(){return this.throwIfDisposed(),Zn(this)},(0,re.t3)().prototype.tile=function(e){return this.throwIfDisposed(),Ut(this,e)},(0,re.t3)().prototype.toBool=function(){return this.throwIfDisposed(),ie(this,"bool")},(0,re.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),ie(this,"float32")},(0,re.t3)().prototype.toInt=function(){return this.throwIfDisposed(),ie(this,"int32")};var hu=n(9090);(0,re.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,hu.h)(this,e,t)},(0,re.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),rs(this,e)};const du=(0,m.op)({unique_:function(e,t=0){const n=(0,p._1)(e,"x","unique","string_or_numeric");(0,f.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[i,o]=a.BV.runKernel(d.kp,s,r);return{values:i,indices:o}}});let pu;function fu(){return null==pu&&(pu=a.BV.backend.epsilon()),pu}(0,re.t3)().prototype.unique=function(e){return this.throwIfDisposed(),du(this,e)},(0,re.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Si(this,e,t)},(0,re.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),es(this,e)},(0,re.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),ns(e,this,t)},(0,re.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),ss(this)};class mu extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mu.prototype)}}class gu extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gu.prototype)}}class bu extends Error{constructor(e){super(e),Object.setPrototypeOf(this,bu.prototype)}}class xu extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xu.prototype)}}class yu extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yu.prototype)}}Error;function wu(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function vu(e,t){if(!e)throw new yu(t)}function ku(e,t){let n=0;for(const s of e)s===t&&n++;return n}function Iu(e){return 1===e.length?e[0]:e}function Su(e){return Array.isArray(e)?e:[e]}function Nu(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function $u(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Cu={};function Tu(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Eu(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Eu(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Eu(t):e[n]=t.value)}}}function Au(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in Cu)a=Cu[r];else if(a=t[r],null==a)throw new bu(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new bu(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in Cu?[o,u]=Cu.className:i in t&&([o,u]=t[i]),null==o)throw new bu(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Cu))e[t]=Cu[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Cu);for(const e of Object.keys(n))Cu[e]=n[e];Eu(a.config);const s=u(o,a.config,n,r);return Cu=Object.assign({},t),s}{const e=Object.assign({},Cu);for(const e of Object.keys(n))Cu[e]=n[e];const t=new o(a.config);return Cu=Object.assign({},e),t}}}function Ru(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Fu(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function _u(e){if(null==e)throw new bu(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Du(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new bu(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ou(e,t,n=0,s=1/0){return vu(n>=0),vu(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function Bu(e,t){Array.isArray(e)?(b.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Bu(e,`element ${n+1} of ${t}`)))):b.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Mu(e)}.`))}function Mu(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Mu(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Lu(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function zu(e,t){return Ue((()=>Kn(nn(en(e,e),t,!0))))}class Pu extends Me{getConfig(){return{}}}class Vu extends Pu{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ue((()=>{const t=zu(e,this.axis),n=It(t,0,this.maxValue);return en(e,Lt(n,Je(fu(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Vu.className="MaxNorm",ze(Vu);class Wu extends Pu{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ue((()=>Lt(e,Je(fu(),zu(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Wu.className="UnitNorm",ze(Wu);class Uu extends Pu{apply(e){return On(e)}}Uu.className="NonNeg",ze(Uu);class Gu extends Pu{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ue((()=>{const t=zu(e,this.axis),n=Je(en(this.rate,It(t,this.minValue,this.maxValue)),en(1-this.rate,t));return en(e,Lt(n,Je(fu(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Gu.className="MinMaxNorm",ze(Gu);const Hu={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ju(e){return Tu(e)}function qu(e,t={}){return Au(e,Le.getMap().classNameMap,t,"constraint")}function Ku(e){if(null==e)return null;if("string"==typeof e){return qu({className:e in Hu?Hu[e]:e,config:{}})}return e instanceof Pu?e:qu(e)}const Xu=["channelsFirst","channelsLast"],Yu=["nearest","bilinear"],Zu=["valid","same","causal"],Ju=["max","avg"],Qu=["sum","mul","concat","ave"],el=new Map;function tl(e){Du(Xu,"DataFormat",e)}function nl(e){Du(Zu,"PaddingMode",e)}function sl(e){Du(Ju,"PoolMode",e)}const rl=[];function al(e,t){rl.push(e);try{const e=t();return rl.pop(),e}catch(e){throw rl.pop(),e}}function il(e){if(!ll(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===rl.length?"":rl.join("/")+"/")+e}function ol(e){if(!ll(e))throw new Error("Not a valid tensor name: '"+e+"'");el.has(e)||el.set(e,0);const t=el.get(e);if(el.set(e,el.get(e)+1),t>0){const n=`${e}_${t}`;return el.set(n,1),n}return e}const ul=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ll(e){return!!e.match(ul)}function cl(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function hl(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function dl(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function pl(e,t){if(t<e)throw new bu(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}function fl(e,t){return ie(e,t)}function ml(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),gt(e,n)}function gl(e,t,n){return Ue((()=>{switch(e.rank){case 1:return Vn(e,t,n);case 2:return Wn(e,[t,0],[n,e.shape[1]]);case 3:return Un(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Gn(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Pn(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Pn(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new bu(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function bl(e,t,n){return Ue((()=>{switch(e.rank){case 1:return Vn(e,t,n);case 2:return Wn(e,[0,t],[e.shape[0],n]);case 3:return Un(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Gn(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new bu(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function xl(e,t,n,s){return Ue((()=>{switch(e.rank){case 1:return Vn(e,t,n);case 2:switch(s){case 1:return gl(e,t,n);case 2:return bl(e,t,n);default:throw new bu(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return gl(e,t,n);case 2:return Un(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return bl(e,t,n);default:throw new bu(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return gl(e,t,n);case 2:return Gn(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Gn(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return bl(e,t,n);default:throw new bu(`The axis is not within the rank of the tensor ${s}`)}default:throw new bu(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function yl(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),St(e,t)}function wl(e,t){switch(e.rank){case 1:return Nt([e,t]);case 2:return $t([e,t],0);case 3:return Ct([e,t],0);case 4:return Tt([e,t],0);default:throw new bu(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function vl(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new bu(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ut(e,t)}function kl(e,t=0,n=1,s,r){return _n(e,t,n,s,r)}function Il(e,t,n,s){if(e.rank<2||t.rank<2)throw new xu(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new xu(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return ks({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?$l(e.rank,s,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),a=r.pop();e=gt(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=gt(rs(t,c),[u,-1]);const h=[...r,...l];return gt(ks({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?$l(e.rank,s,"channelsLast"):null,activation:n}),h)}}function Sl(e,t,n){return Ue((()=>(t=Array.isArray(t)?Jn(t,"int32"):ie(t,"int32"),qt(e,t,n))))}function Nl(e){return en(e,e)}function $l(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new bu(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?gt(t,[1,s[0],1,1,1]):gt(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?gt(t,[1,1,1,1,s[0]]):gt(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?gt(t,[1,s[0],1,1]):gt(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?gt(t,[1,1,1,s[0]]):gt(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?gt(t,[1,s[0],1]):gt(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?gt(t,[1,1,s[0]]):gt(t,[1].concat(s))}else if(e<3)return t;throw new bu(`Unsupported input rank by biasAdd: ${t.rank}`)}function Cl(e,t,n){return Ue((()=>(null==n&&(n="channelsLast"),tl(n),Je(e,$l(e.rank,t,n)))))}function Tl(e,t,n,s){return Ue((()=>as(e,t,n,s)))}function El(e,t,n=!1){return n?e():t()}const Al=["fanIn","fanOut","fanAvg"],Rl=["normal","uniform","truncatedNormal"];class Fl extends Me{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class _l extends Fl{apply(e,t){return Nn(e,t)}}_l.className="Zeros",ze(_l);class Dl extends Fl{apply(e,t){return $n(e,t)}}Dl.className="Ones",ze(Dl);class Ol extends Fl{constructor(e){if(super(),"object"!=typeof e)throw new bu(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new bu(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Ue((()=>en(Ke(this.value),$n(e,t))))}getConfig(){return{value:this.value}}}Ol.className="Constant",ze(Ol);class Bl extends Fl{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Dn(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Bl.className="RandomUniform",ze(Bl);class Ml extends Fl{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xu(`randomNormal does not support dType ${t}.`);return kl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ml.className="RandomNormal",ze(Ml);class Ll extends Fl{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xu(`truncatedNormal does not support dType ${t}.`);return Qn(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ll.className="TruncatedNormal",ze(Ll);class zl extends Fl{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Ue((()=>{if(2!==e.length||e[0]!==e[1])throw new bu("Identity matrix initializer can only be used for 2D square matrices.");return en(this.gain,Gt(e[0]))}))}getConfig(){return{gain:this.gain}}}zl.className="Identity",ze(zl);class Pl extends Fl{constructor(e){if(super(),e.scale<0)throw new bu(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Du(Al,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Du(Rl,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(tl(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=cl(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=cl(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=cl(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xu(`${this.getClassName()} does not support dType ${t}.`);return Qn(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Dn(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Pl.className="VarianceScaling",ze(Pl);class Vl extends Pl{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Pl.className}}Vl.className="GlorotUniform",ze(Vl);class Wl extends Pl{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Pl.className}}Wl.className="GlorotNormal",ze(Wl);class Ul extends Pl{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Pl.className}}Ul.className="HeNormal",ze(Ul);class Gl extends Pl{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Pl.className}}Gl.className="HeUniform",ze(Gl);class Hl extends Pl{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Pl.className}}Hl.className="LeCunNormal",ze(Hl);class jl extends Pl{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Pl.className}}jl.className="LeCunNormal",ze(jl);class ql extends Fl{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new xu("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Ue((()=>{if(e.length<2)throw new xu("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=kl(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=fr.gramSchmidt(t);return e[0]>e[1]&&(n=rs(n)),en(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}ql.className="Orthogonal",ze(ql);const Kl={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Xl(e,t={}){return Au(e,Le.getMap().classNameMap,t,"initializer")}function Yl(e){return Tu(e)}function Zl(e){if("string"==typeof e){const t=e in Kl?Kl[e]:e;if("GlorotNormal"===t)return new Wl;if("GlorotUniform"===t)return new Vl;if("HeNormal"===t)return new Ul;if("HeUniform"===t)return new Gl;if("LeCunNormal"===t)return new Hl;if("LeCunUniform"===t)return new jl;{const e={};return e.className=t,e.config={},Xl(e)}}return e instanceof Fl?e:Xl(e)}let Jl=0;function Ql(){return Jl++}const ec={};function tc(e=""){return e in ec||(ec[e]=0),ec[e]+=1,e+ec[e].toString()}function nc(e){return Array.isArray(e)&&Array.isArray(e[0])}function sc(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function rc(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new bu(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ac(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new bu(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ic(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const oc="Variable";class uc{constructor(e,t="float32",n="Variable",s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ql(),n=null==n?oc:n,this.originalName=il(n),this.name=ol(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(e,t=!0,n,s){return a.BV.makeVariable(e,t,n,s)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function lc(e){return e.map((e=>e.read()))}function cc(e){e.forEach((e=>{e[0].write(e[1])}))}class hc{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class dc{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Ql(),null!=a&&(this.originalName=il(a),this.name=ol(this.originalName)),this.rank=t.length}}let pc=0;class fc{constructor(e,t){this.callArgs=t,this.id=pc++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let mc=0;class gc extends Me{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mc++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Nu(e)+"_"+tc(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new gu(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new bu(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Iu(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Iu(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new mu(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new mu(`Layer ${this.name} is not connected, no input to return.`);return Iu(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new mu(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new mu(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Iu(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Su(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Su(this.inputSpec);if(e.length!==t.length)throw new bu(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new bu(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new bu(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new bu(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new bu(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new bu(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new bu(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Su(e);let s=!0;for(const e of n)if(!(e instanceof dc)){s=!1;break}let r=!0;for(const e of n)if(e instanceof dc){r=!1;break}if(s===r)throw new bu("Arguments to apply() must be all SymbolicTensors or all Tensors");return al(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Su(e))t.push(n.shape);this.build(Iu(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=Su(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=Iu(a),null!=this.activityRegularizer)throw new xu("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=Su(e);const t=[];for(const n of e)t.push(n.shape);return Iu(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new dc(a,n,this,Su(e),t,this.name,s))):new dc(a,s,this,Su(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new xu("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new mu(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new mu(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new gu(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ic(this.weights)}build(e){this.built=!0}getWeights(e=!1){return lc(e?this.trainableWeights:this.weights)}setWeights(e){Ue((()=>{const t=this.weights;if(t.length!==e.length)throw new bu(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=lc(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!b.arraysEqual(a.shape,o.shape))throw new bu(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}cc(n)}))}addWeight(e,t,n,s,r,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new bu(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():Zl("zeros"));const u=s.apply(t,n),l=new uc(u,n,e,a,i);return u.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Su(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=Su(e);t=Su(t),n=Su(n),s=Su(s),r=sc(r),a=sc(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new fc({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function bc(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=bc(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class xc extends gc{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:tc("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new bu("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new bu("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new bu("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new dc(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new fc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new bu(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function yc(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];Ge(s)}}function wc(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var vc;xc.className="InputLayer",ze(xc),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(vc||(vc={}));class kc{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Ic{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Sc extends kc{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=Ue((()=>Je(this.totals[e],en(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Ue((()=>{const n=en(Lt(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),He(t[e])})))}}class Nc extends kc{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}}class $c extends kc{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||$r,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():b.now();return(...a)=>{const i=null!=n?n():b.now();return i-r<t||(r=i,s=e(...a)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await yc(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await yc(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await yc(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await yc(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await yc(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await yc(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await yc(e),await this.trainEnd(e))}}function Cc(e,t){if(null==e&&(e={}),e instanceof kc)return[e];if(Array.isArray(e)&&e[0]instanceof kc)return e;return Su(e).map((e=>new $c(e,t)))}class Tc{constructor(){}static registerCallbackConstructor(e,t){b.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Tc.checkForDuplicate(t),null==Tc.constructors[e]&&(Tc.constructors[e]=[]),Tc.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Tc.constructors){Tc.constructors[+t].forEach((t=>{if(t===e)throw new bu("Duplicate callback constructor.")}))}}static clear(){Tc.constructors={}}static createCallbacks(e){const t=[];for(const n in Tc.constructors){const s=+n;e>=s&&t.push(...Tc.constructors[s])}return t.map((e=>new e))}}function Ec(e,t,n,s,r,a,i,o,u){const l=new Nc,c=[new Sc,...Tc.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Ic(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Ac(e,t={},n=!1){return Au(e,Le.getMap().classNameMap,t,"layer",n)}function Rc(e,t){return Ue((()=>{"float32"!==e.dtype&&(e=ie(e,"float32"));const n=nn(Nl(e),t,!0),s=Ht(n.shape,fu()),r=Kn(ln(n,s));return Lt(e,r)}))}function Fc(e,t){return Ue((()=>cn(Nl(tn(t,e)),-1)))}function _c(e,t){return Ue((()=>cn(Ze(tn(t,e)),-1)))}function Dc(e,t){return Ue((()=>{const n=tn(e,t),s=It(Ze(e),fu(),Number.MAX_VALUE),r=Ze(Lt(n,s));return en(100,cn(r,-1))}))}function Oc(e,t){return Ue((()=>{const n=It(t,fu(),Number.MAX_VALUE),s=Zt(Je(1,n)),r=It(e,fu(),Number.MAX_VALUE),a=Zt(Je(1,r));return cn(Nl(tn(s,a)),-1)}))}function Bc(e,t,n=!1){return Ue((()=>{if(n)t=Hn(t);else{const e=nn(t,t.shape.length-1,!0);t=Lt(t,e)}return t=It(t,fu(),1-fu()),kn(nn(en(ie(e,"float32"),Zt(t)),t.shape.length-1))}))}function Mc(e,t,n=!1){return Ue((()=>{const s=ie(jt(function(e){const t=[cl(e.shape)];return gt(e,t)}(e)),"int32"),r=(t=It(t,fu(),1-fu())).shape;return Bc(gt(Sn(s,r[r.length-1]),r),t,n)}))}function Lc(e,t){return Ue((()=>{let n;return n=It(t,fu(),1-fu()),n=Zt(Lt(n,tn(1,n))),cn(function(e,t){if(!b.arraysEqual(e.shape,t.shape))throw new bu(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Ue((()=>{const n=On(t),s=kn(Ze(t));return Je(tn(n,en(t,e)),Jt(Vt(s)))}))}(e,n),-1)}))}function zc(e,t){return Ue((()=>{const n=It(e,fu(),1),s=It(t,fu(),1);return nn(en(e,Zt(Lt(n,s))),-1)}))}function Pc(e,t){return Ue((()=>{const n=Rc(e,-1),s=Rc(t,-1),r=en(n,s);return kn(nn(r,-1))}))}Tc.constructors={};const Vc={meanSquaredError:Fc,meanAbsoluteError:_c,meanAbsolutePercentageError:Dc,meanSquaredLogarithmicError:Oc,squaredHinge:function(e,t){return Ue((()=>{const n=ln(0,tn(1,en(e,t)));return cn(Nl(n),-1)}))},hinge:function(e,t){return Ue((()=>{const n=ln(0,tn(1,en(e,t)));return cn(n,-1)}))},categoricalHinge:function(e,t){return Ue((()=>{const n=nn(en(e,t),-1),s=Qt(en(tn(1,e),t),-1);return ln(0,Je(1,tn(s,n)))}))},logcosh:function(e,t){return Ue((()=>{const n=Math.log(2),s=tn(t,e),r=tn(Je(s,jn(en(-2,s))),n);return cn(r,-1)}))},categoricalCrossentropy:Bc,sparseCategoricalCrossentropy:Mc,binaryCrossentropy:Lc,kullbackLeiblerDivergence:zc,poisson:function(e,t){return Ue((()=>{const n=Zt(Je(fu(),t));return cn(tn(t,en(e,n)),-1)}))},cosineProximity:Pc};function Wc(e){if("string"==typeof e){if(e in Vc)return Vc[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new bu(t)}return e}function Uc(e,t){return Ue((()=>{const n=en(.5,Cn(t)),s=fl(Kt(t,n),e.dtype);return cn(Pt(e,s),-1)}))}function Gc(e,t){return Ue((()=>fl(Pt(tt(e,-1),tt(t,-1)),"float32")))}function Hc(e,t){return Ue((()=>ie(nn(rn(Pt(e,1),Pt(t,1))),"float32")))}function jc(e,t){return Lc(e,t)}function qc(e,t){return e.rank===t.rank&&(e=Xn(e,[e.rank-1])),(t=tt(t,-1)).dtype!==e.dtype&&(t=ie(t,e.dtype)),ie(Pt(e,t),"float32")}const Kc=Bc,Xc=Mc,Yc={binaryAccuracy:Uc,categoricalAccuracy:Gc,precision:function(e,t){return Ue((()=>{const n=Hc(e,t),s=function(e,t){return Ue((()=>ie(nn(rn(Pt(e,0),Pt(t,1))),"float32")))}(e,t),r=Je(n,s);return ie(ns(Kt(r,0),Lt(n,r),0),"float32")}))},categoricalCrossentropy:Kc,sparseCategoricalCrossentropy:Xc,mse:Fc,MSE:Fc,mae:_c,MAE:_c,mape:Dc,MAPE:Dc,cosine:Pc};function Zc(e){if("string"==typeof e&&e in Yc)return Yc[e];if("string"!=typeof e&&null!=e)return e;throw new bu(`Unknown metric ${e}`)}function Jc(e){if(vu(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Vc))if(Vc[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Yc))if(Yc[n]===e){t=n;break}return void 0!==t?t:e.name}}const Qc=1048576;function eh(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!th(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Qc&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function th(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!th(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!th(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function nh(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),sh(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?rh(o[e],n,s):ah(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?ic(e.collectedTrainableWeights):ic(e.trainableWeights);return t}(e),l=ic(e.nonTrainableWeights);s(`Total params: ${u+l}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${l}`),s("_".repeat(t))}function sh(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function rh(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}sh([`${e.name} (${e.getClassName()})`,r,s,e.countParams().toString()],t,n)}function ah(e,t,n,s){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];i.push(`${n}[${s}][${r}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];sh([`${o} (${u})`,a,r,e.countParams().toString(),l],t,s);for(let e=1;e<i.length;++e)sh(["","","","",i[e]],t,s)}function ih(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function oh(e,t){if(null===e)return null;if("string"==typeof e)return $u(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];ih(t,r,s)?n.push(s):n.push(oh(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=$u(n);t[e]=oh(s,e)}}return t}}function uh(e,t){if(null==e)return null;if("string"==typeof e)return Nu(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];ih(t,r,s)?n.push(s):n.push(uh(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],r=Nu(n);t[r]="name"!==n&&"className"!==n||"string"!=typeof s?uh(s,n):s}return t}}class lh{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof lh)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new bu(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return ie(t,e.dtype)}catch(n){throw new bu(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof dc){if(null==this.id2Value[e.id])throw new bu(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new bu(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof dc){if(null==this.id2Value[e.id])throw new bu(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new bu(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Ge(this.id2Mask)}}const ch={},hh={};function dh(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==ch[c]){const e=function(e,t){b.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=fh(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=fh(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:ph(s)}}(i,t);h=e.sorted,d=e.recipientCounts,ch[c]=h,hh[c]=d}h=ch[c],d={},r||Object.assign(d,hh[c]);const p=new lh(t);for(let e=0;e<h.length;++e){if(null!=s){const e=We().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof xc)continue;const l=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=p.getValue(e),s=p.getMask(e);l.push(n),c.push(s),null!=s&&(m=!0),r||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Su(i.apply(l,n));let b=null;i.supportsMasking&&(b=i.computeMask(l,c));const x=mh(a),y=Array.isArray(x)?x:[x];for(let e=0;e<y.length;++e){p.hasKey(y[e])||p.add(y[e],g[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(y[e].name);-1!==t&&(u[t]=g[e])}r||Ge(f)}return p.disposeMasks(),a?u:u[0]}function ph(e){const t={};for(const n in e)t[n]=e[n].size;return t}function fh(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function mh(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class gh extends gc{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=tc(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Fu(this.inputs).length!==this.inputs.length)throw new bu(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Fu(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;vu(0===n,"input layer has >1 nodes"),vu(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof xc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,u)=>{null!=s&&null!=r&&null!=u||(s=e.sourceLayer,r=e.nodeIndex,u=e.tensorIndex);const l=s.inboundNodes[r];if(-1!==n.indexOf(l))throw new gu(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(gh.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const s=l.inputTensors[e],r=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const d={};for(const e in s){const t=s[e];t in d||(d[t]=[]),d[t].push(r[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Ru);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof gh&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Ru);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new gu(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new gu(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new fc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new bu("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new bu(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new bu(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new bu(`${e.length} of ${s} weights are not set: ${e}`)}cc(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.14.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=uh(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Ue((()=>{e=Su(e);const n=new lh;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return dh(this.outputs,n,t)}))}computeMask(e,t){return Ue((()=>{let n;return e=Su(e),n=null==t?wu(null,e.length):Su(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=sc(e);if(t.length!==this.inputLayers.length)throw new bu(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ru);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=sc(t.computeOutputShape(Iu(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++){n[`${t.name}_${a}_${e}`]=r[e]}}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];vu(t in n),r.push(n[t])}return Iu(r)}runInternalGraph(e,t){null==t&&(t=wu(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ru);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=Su(t.call(e,l)),u=Su(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=Su(t.call(s,l)),u=Su(t.computeMask(s,i));if(t.activityRegularizer)throw new xu("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=u[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){vu(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof gh?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=gh.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new bu(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new bu("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new bu(`No such layer: ${e}`)}calculateLosses(){return Ue((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=gh.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=gh.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let u=t[gh.nodeKey(r,a)];null==u&&(u=0),e.push([r.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=gh.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=gh.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],u=a[1],l=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(Iu(n),s)}function u(e){const n=e.name,a=Ac(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new bu(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!_u(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],s=e[2];vu(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];vu(t in r);const a=r[t].inboundNodes[n].outputTensors;d.push(a[s])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new bu("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Ue((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function bh(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function xh(e,t){return bh(e,t,"classWeight")}async function yh(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Ue((()=>{if(1===e.shape.length)return oe(e);if(2===e.shape.length){if(e.shape[1]>1){return tt(e,1)}if(1===e.shape[1])return gt(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());Ge(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),Jn(r,"float32")}return null}function wh(e,t){return en(e,t)}function vh(e,t){let n,s;const r=t;n=r.xs,s=r.ys,b.assert(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=kh("input",e.inputNames,n),i=kh("output",e.outputNames,s),o=a[0].shape[0];b.assert(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),b.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)b.assert(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)b.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function kh(e,t,n){if(n instanceof re.es)return[n];if(Array.isArray(n))return b.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new bu(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}async function Ih(e,t,n){const s=null!=n.batchesPerEpoch;if(b.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),b.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),b.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),b.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),b.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(Sh(n.validationData))b.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new xu("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=r?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Cc(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Ec(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,h=0;for(s||(m=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await m.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=vh(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=xh(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await yh(r[e],null,t[e]))}const l=s.concat(r).concat(i),p=o(l);Ge(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];a[t]=n,He(n)}await d.onBatchEnd(h,a),wc(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Sh(n.validationData)?Su(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Su(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Sh(e){return"function"==typeof e.iterator}function Nh(e){b.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function $h(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>gl(e,t,n-t))):gl(e,t,n-t)}function Ch(e,t){return Ue((()=>null==e?null:Array.isArray(e)?e.map((e=>Ch(e,t))):Sl(e,"int32"===t.dtype?t:ie(t,"int32"))))}function Th(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function Eh(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,o,u,l,c,h,d;e.isTraining=!0;try{const p=null==s.batchSize?32:s.batchSize;Nh(p);const f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,p);r=m[0],a=m[1],d=m[2];let g,x=!1;if(null!=s.validationData&&s.validationData.length>0){if(x=!0,2!==s.validationData.length)throw 3===s.validationData.length?new xu("validationData including sample weights is not supported yet."):new bu(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);u=s.validationData[0],l=s.validationData[1];const t=!0,n=await e.standardizeUserData(u,l,null,null,t,p);c=n[0],h=n[1],g=c.concat(h)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){x=!0;const e=Math.floor(r[0].shape[0]*(1-s.validationSplit)),t=r[0].shape[0];c=$h(r,e,t),i=r,r=$h(r,0,e),h=$h(a,e,t),o=a,a=$h(a,0,e),g=c.concat(h)}else null!=s.validationSteps&&(x=!0);const y=r.concat(a).concat(d);e.checkTrainableWeightsConsistency();const w=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let k,I;x?(e.makeTestFunction(),k=e.testFunction,I=v.slice().concat(v.map((e=>"val_"+e)))):(k=null,g=[],I=v.slice());const S=Cc(s.callbacks,s.yieldEvery),N=await async function(e,t,n,s,r,a,i,o,u,l,c,h,d,p,f){null==r&&(r=32),null==a&&(a=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;if(null!=u&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new bu("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=e.checkNumSamples(n,r,p,"steps_per_epoch");let x;null!=g&&(x=pl(0,g)),null==i&&(i=1);const{callbackList:y,history:w}=Ec(o,i,a,d,g,p,r,m,h);y.setModel(e),e.history=w,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<a;++i){await y.onEpochBegin(i);const a={};if(null!=p)throw new xu("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new xu("batch shuffling is not implemneted yet");c&&b.shuffle(x);const i=Jn(x),o=Th(g,r);for(let c=0;c<o.length;++c){const h={};if(await y.onBatchBegin(c,h),Ue((()=>{const d=o[c][0],p=o[c][1],f=gl(i,d,p-d);h.batch=c,h.size=p-d;const g=Ch(n,f),b=t(g);for(let e=0;e<s.length;++e){const t=s[e],n=b[e];h[t]=n,He(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,r);for(let e=0;e<s.length;++e){const n=s[e],r=t[e];He(r),a["val_"+n]=r}}})),await y.onBatchEnd(c,h),wc(h),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,a),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,w,y,v,p,s.epochs,s.verbose,S,k,g,s.shuffle,I,s.initialEpoch,null,null);return N}finally{e.isTraining=!1,Rh(r,t),Rh(a,n),Rh(i,t),Rh(o,n),Rh(c,u),Rh(h,l),null!=d&&Ge(d)}}function Ah(e){const t=[];e instanceof re.es&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(ml(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Rh(e,t){if(null==e)return;const n=[];if(t instanceof re.es)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof re.es)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function Fh(e){return Array.isArray(e)}function _h(e){return!function(e){return e instanceof re.es}(e)&&!Fh(e)}function Dh(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Fh(e)&&e.length>0)t=!0;else if(_h(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new bu(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(_h(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new bu(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Fh(e)){if((e=e).length!==t.length)throw new bu(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new bu(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Ah(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new bu(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!s)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new bu(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Oh(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new bu(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new bu(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new bu(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new bu(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Bh extends gh{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new bu("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");nh(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Ir.adagrad(.01),Adadelta:()=>Ir.adadelta(1,.95,fu()),Adam:()=>Ir.adam(.001,.9,.999,fu()),Adamax:()=>Ir.adamax(.002,.9,.999,fu(),0),RMSProp:()=>Ir.rmsprop(.001,.9,0,fu()),SGD:()=>Ir.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new bu(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Xe))throw new bu("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new bu(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Wc(e)))}else{const n=Wc(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new bu(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Wc(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],al("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};al("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Lc?-1!==["accuracy","acc"].indexOf(i)?s=Uc:-1!==["crossentropy","ce"].indexOf(i)&&(s=jc):this.lossFunctions[e]===Mc?-1!==["accuracy","acc"].indexOf(i)?s=qc:-1!==["crossentropy","ce"].indexOf(i)&&(s=Xc):-1!==["accuracy","acc"].indexOf(i)?s=Gc:-1!==["crossentropy","ce"].indexOf(i)&&(s=Kc),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=Zc(i);a=e,n=""+Jc(i)}let t;al(n,(()=>{t=a})),r(e,n,t)}})(s[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;Nh(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return Iu(this.testLoop(i,a,s,n.verbose,n.steps))}finally{Rh(r[0],e),Rh(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new xu("Verbose mode is not implemented yet.");b.assert(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!s||u<n.batches;){const t=await i.next();if(a=Ue((()=>{if(t.value){const{xs:n,ys:s}=vh(e,t.value),i=n.concat(s),l=Ue((()=>r(i)));if(Ge(i),0===u)for(let e=0;e<l.length;++e)a.push(Ke(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=Ue((()=>Je(a[e],en(c,t)))),u>0&&Ge(n)}Ge(l),o+=c,++u}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Lt(a[e],o),Ge(t)}return Iu(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new bu(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new bu(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new bu("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new lh;if(e instanceof re.es&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new bu(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new bu(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=dh(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=wu(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new bu(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Ue((()=>{const s=this.checkNumSamples(e);if(n)throw new xu("Verbose predictLoop() is not implemented yet.");const r=Th(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){Ue((()=>{const n=r[t][0],s=r[t][1],a=$h(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new lh(i);return dh(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)))}return Iu(a.map((e=>St(e,0))))}))}predict(e,t={}){const n=Ah(e);Oh(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==t.batchSize?32:t.batchSize;return Nh(s),this.predictLoop(n,s)}finally{Rh(n,e)}}predictOnBatch(e){Oh(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new gu("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Mc?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const s=Fu(e.map((e=>e.shape[0])));s.sort();const r=Fu(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new bu(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new bu(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!b.arraysEqual(s,r))throw new bu(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Dh(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Dh(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[Fc,Lc,Bc];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===Bc&&1===a.shape[a.shape.length-1])throw new bu(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new bu(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new bu(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=s){const e=xh(s,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await yh(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,s=0,r){return Ue((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new xu("Verbose mode is not implemented yet.");if(null!=r)throw new xu("steps mode in testLoop() is not implemented yet");{const s=Th(a,n),r=Jn(pl(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],u=gl(r,a,o-a),l=Ch(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Ke(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Je(i[e],en(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Lt(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;if(ku(e,s)>1){r+=`_${ku(e.slice(0,n),s)}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new lh(e),o=dh(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=wh(n,r[e]));const a=cn(n);t.push(a),u=0===e?n:Je(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=cn(t(s[r],o[r]))}He(n),a.push(n)}return u=cn(u),this.calculateLosses().forEach((e=>{u=Je(u,e)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Ue((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new lh(a),o=dh(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=cn(s(r[e],o[e]));n=0===e?a:Je(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=cn(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){return Eh(this,e,t,n)}async fitDataset(e,t){return Ih(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Ge(a),Rh(n[0],e),Rh(n[1],t),Iu(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=We().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-We().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Nu(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Nu(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=Nu(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Nu(Jc(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Nu(Jc(e))));{const e={};for(const t in this.metrics)e[t]=Nu(Jc(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ac(oh(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=$u(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>$u(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=$u(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>$u(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=$u(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,E.getSaveHandlers(n));if(0===t.length)throw new bu(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new bu(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new bu("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await v(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.14.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await v(await this.optimizer.getWeights(),e);s.specs.push(...n),s.data=N([s.data,t])}if(null!=this.userDefinedMetadata){const e=!0;eh(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=s.data,r.weightSpecs=s.specs,e.save(r)}setUserDefinedMetadata(e){eh(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Bh.className="Model",ze(Bh);class Mh extends Bh{}Mh.className="Functional",ze(Mh);class Lh extends Bh{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:tc("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new bu(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Lh||e instanceof Bh;let n;if(t){if(n=e,1!==n.outputs.length)throw new bu("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new bu("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new bu("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new bu("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new xc({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new bu(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new bu("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=bc(this.outputs[0])}this.inboundNodes=[],new fc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:wu(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ac(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Bh({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new gu("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new gu("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new gu("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new gu("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new bu("Legacy serialization format not supported yet.");r=t}else b.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Lh))throw new xu(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=Ac(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new bu("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new bu("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Lh.className="Sequential",ze(Lh);class zh extends Me{getConfig(){return{}}}class Ph extends zh{apply(e,t=1){return function(e,t=1){if(1!==t)throw new xu(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return zt(e)}(e,t)}}Ph.className="elu",ze(Ph);class Vh extends zh{apply(e){return Mn(e)}}Vh.className="selu",ze(Vh);class Wh extends zh{apply(e){return On(e)}}Wh.className="relu",ze(Wh);class Uh extends zh{apply(e){return Ue((()=>hn(6,On(e))))}}Uh.className="relu6",ze(Uh);class Gh extends zh{apply(e){return e}}Gh.className="linear",ze(Gh);class Hh extends zh{apply(e){return zn(e)}}Hh.className="sigmoid",ze(Hh);class jh extends zh{apply(e){return function(e){return Ue((()=>{const t=Je(.5,en(.2,e));return It(t,0,1)}))}(e)}}jh.className="hardSigmoid",ze(jh);class qh extends zh{apply(e){return jn(e)}}qh.className="softplus",ze(qh);class Kh extends zh{apply(e){return function(e){return Ue((()=>Lt(e,Je(Ze(e),1))))}(e)}}Kh.className="softsign",ze(Kh);class Xh extends zh{apply(e){return Zn(e)}}Xh.className="tanh",ze(Xh);class Yh extends zh{apply(e,t=-1){return Hn(e,t)}}Yh.className="softmax",ze(Yh);class Zh extends zh{apply(e,t=-1){return sn(e,t)}}Zh.className="logSoftmax",ze(Zh);class Jh extends zh{apply(e,t=1){return Ue((()=>en(zn(en(e,t)),e)))}}Jh.className="swish",ze(Jh);class Qh extends zh{apply(e){return Ue((()=>en(e,Zn(jn(e)))))}}function ed(e){return e.getClassName()}function td(e,t={}){return Au(e,Le.getMap().classNameMap,t,"activation")}function nd(e){if(null==e){const e={className:"linear",config:{}};return td(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},td(t)}return e instanceof zh?e:td(e)}function sd(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Qh.className="mish",ze(Qh);class rd extends Me{}class ad extends rd{constructor(e){super(),sd(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Ue((()=>{let t=Nn([1]);return this.hasL1&&(t=Je(t,nn(en(this.l1,Ze(e))))),this.hasL2&&(t=Je(t,nn(en(this.l2,Nl(e))))),gt(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}ad.className="L1L2",ze(ad);const id={l1l2:"L1L2"};function od(e){return Tu(e)}function ud(e,t={}){return Au(e,Le.getMap().classNameMap,t,"regularizer")}function ld(e){if(null==e)return null;if("string"==typeof e){return ud({className:e in id?id[e]:e,config:{}})}return e instanceof rd?e:ud(e)}class cd extends gc{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=rc(e);let n=On(e);return null!=this.maxValue&&(n=It(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}cd.className="ReLU",ze(cd);class hd extends gc{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=rc(e);return Yt(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}hd.className="LeakyReLU",ze(hd);class dd extends gc{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Zl(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ld(e.alphaRegularizer),this.alphaConstraint=Ku(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new bu(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ac(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new hc({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=rc(e),En(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Yl(this.alphaInitializer),alphaRegularizer:od(this.alphaRegularizer),alphaConstraint:ju(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}dd.className="PReLU",ze(dd);class pd extends gc{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new xu(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=rc(e);return zt(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}pd.className="ELU",ze(pd);class fd extends gc{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=rc(e);return en(n,ie(Kt(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}fd.className="ThresholdedReLU",ze(fd);class md extends gc{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Yh).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=rc(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function gd(e,t,n){if("number"==typeof e)return wu(e,t);if(e.length!==t)throw new bu(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new bu(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function bd(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function xd(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+dl([n-t,0]);else{if("same"!==s)throw new bu(`Unsupport padding mode: ${s}.`);e*=t}return e}function yd(e,t){return Ue((()=>(tl(t),"channelsFirst"===t?rs(e,[0,2,3,1]):e)))}function wd(e,t){return Ue((()=>(tl(t),"channelsFirst"===t?rs(e,[0,2,3,4,1]):e)))}function vd(e,t,n,s=1,r="valid",a,i=1){return Ue((()=>{if(null==a&&(a="channelsLast"),tl(a),3!==e.shape.length)throw new bu(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new bu(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new bu(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=rs(e,[0,2,1])),"causal"===r)throw new xu("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=At(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=Cl(o,n)),o}))}function kd(e,t,n,s=[1,1],r="valid",a,i,o=null){return Ue((()=>{if(null==a&&(a="channelsLast"),tl(a),3!==e.rank&&4!==e.rank)throw new bu(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new bu(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=yd(e,a);if("causal"===r)throw new xu("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=ys({x:u,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=rs(u,[0,3,1,2])),u}))}function Id(e,t,n,s=[1,1,1],r="valid",a,i){return Ue((()=>{if(null==a&&(a="channelsLast"),tl(a),4!==e.rank&&5!==e.rank)throw new bu(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new bu(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=wd(e,a);if("causal"===r)throw new xu("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=_t(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=Cl(o,n)),"channelsFirst"===a&&(o=rs(o,[0,4,1,2,3])),o}))}md.className="Softmax",ze(md);class Sd extends gc{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Sd.verifyArgs(t),this.rank=e,Bu(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new xu(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=gd(t.kernelSize,e,"kernelSize"),this.strides=gd(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,nl(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,tl(this.dataFormat),this.activation=nd(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Zl(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ku(t.biasConstraint),this.biasRegularizer=ld(t.biasRegularizer),this.activityRegularizer=ld(t.activityRegularizer),this.dilationRate=gd(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new bu(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new bu(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new bu(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(vu("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Ou(e.kernelSize,"number",1,3))throw new bu(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ed(this.activation),useBias:this.useBias,biasInitializer:Yl(this.biasInitializer),biasRegularizer:od(this.biasRegularizer),activityRegularizer:od(this.activityRegularizer),biasConstraint:ju(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Nd extends Sd{constructor(e,t){super(e,t),this.kernel=null,Nd.verifyArgs(t),this.filters=t.filters,Bu(this.filters,"filters"),this.kernelInitializer=Zl(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ku(t.kernelConstraint),this.kernelRegularizer=ld(t.kernelRegularizer)}build(e){e=ac(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new bu(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Ue((()=>{let t;e=rc(e);const n=null==this.bias?null:this.bias.read(),s=Lu(this.activation.getClassName());if(null!=s&&2===this.rank)t=kd(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=vd(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=kd(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new xu("convolutions greater than 3D are not implemented yet.");t=Id(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ac(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=bd(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Yl(this.kernelInitializer),kernelRegularizer:od(this.kernelRegularizer),kernelConstraint:ju(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new bu(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class $d extends Nd{constructor(e){super(2,e),$d.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ou(e.kernelSize,"number",1,2))throw new bu(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}$d.className="Conv2D",ze($d);class Cd extends Nd{constructor(e){super(3,e),Cd.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new bu(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Cd.className="Conv3D",ze(Cd);class Td extends $d{constructor(e){if(super(e),this.inputSpec=[new hc({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new bu(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ac(e)).length)throw new bu("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new bu("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hc({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Ue((()=>{let t=rc(e);if(4!==t.shape.length)throw new bu(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[s,xd(i,c,u,this.padding),xd(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=rs(t,[0,2,3,1]));let p=Ft(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=rs(p,[0,3,1,2])),null!=this.bias&&(p=Cl(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=ac(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[s]=xd(t[s],o,a,this.padding),t[r]=xd(t[r],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Td.className="Conv2DTranspose",ze(Td);class Ed extends Cd{constructor(e){if(super(e),this.inputSpec=[new hc({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new bu(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=ac(e)).length)throw new bu("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new bu("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hc({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Ue((()=>{let t=rc(e);if(5!==t.shape.length)throw new bu(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a,i;"channelsFirst"===this.dataFormat?(i=2,r=3,a=4):(i=1,r=2,a=3);const o=n[i],u=n[r],l=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[s,xd(o,p,c,this.padding),xd(u,f,h,this.padding),xd(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=rs(t,[0,2,3,4,1]));let b=Ot(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=rs(b,[0,4,1,2,3])),null!==this.bias&&(b=Cl(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=ac(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=xd(t[s],l,i,this.padding),t[r]=xd(t[r],c,o,this.padding),t[a]=xd(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ed.className="Conv3DTranspose",ze(Ed);class Ad extends Nd{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new bu("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new bu("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new bu(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Zl(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ld(t.depthwiseRegularizer),this.depthwiseConstraint=Ku(t.depthwiseConstraint),this.pointwiseInitializer=Zl(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ld(t.pointwiseRegularizer),this.pointwiseConstraint=Ku(t.pointwiseConstraint)}build(e){if((e=ac(e)).length<this.rank+2)throw new bu(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new bu(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new hc({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Ue((()=>{let t;if(e=rc(e),1===this.rank)throw new xu("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=rs(e,[0,2,3,1])),t=Ln(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Cl(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=rs(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Yl(this.depthwiseInitializer),e.pointwiseInitializer=Yl(this.pointwiseInitializer),e.depthwiseRegularizer=od(this.depthwiseRegularizer),e.pointwiseRegularizer=od(this.pointwiseRegularizer),e.depthwiseConstraint=ju(this.depthwiseConstraint),e.pointwiseConstraint=ju(this.pointwiseConstraint),e}}Ad.className="SeparableConv";class Rd extends Ad{constructor(e){super(2,e)}}Rd.className="SeparableConv2D",ze(Rd);class Fd extends Nd{constructor(e){super(1,e),Fd.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ou(e.kernelSize,"number",1,1))throw new bu(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Fd.className="Conv1D",ze(Fd);class _d extends gc{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Ue((()=>{if(e=rc(e),"channelsLast"===this.dataFormat){const t=xl(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return xl(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=xl(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return xl(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}_d.className="Cropping2D",ze(_d);class Dd extends gc{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tl(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Du(Yu,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Ue((()=>{let t=rc(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=rs(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?pr.resizeNearestNeighbor(t,[e,s]):pr.resizeBilinear(t,[e,s]);return rs(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?pr.resizeNearestNeighbor(t,[e,s]):pr.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Dd.className="UpSampling2D",ze(Dd);class Od extends Sd{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Zl(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ku(e.depthwiseConstraint),this.depthwiseRegularizer=ld(e.depthwiseRegularizer)}build(e){if((e=ac(e)).length<4)throw new bu(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new bu(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ue((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return Ue((()=>{null==r&&(r="channelsLast"),tl(r);let i=yd(e,r);if(4!==e.rank)throw new bu(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new bu(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Bt(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=rs(i,[0,3,1,2])),i}))}(e=rc(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Cl(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ac(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=bd(t,this.kernelSize[0],this.padding,this.strides[0]),a=bd(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Yl(this.depthwiseInitializer),e.depthwiseRegularizer=od(this.depthwiseRegularizer),e.depthwiseConstraint=ju(this.depthwiseRegularizer),e}}function Bd(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new bu("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Md(e,t,n,s=!1,r,a,i=!1,o=!1){return Ue((()=>{const u=t.shape.length;if(u<3)throw new bu(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(pl(2,u));if(t=rs(t,l),null!=a)throw new xu("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=ie(ie(r,"bool"),"float32")).rank===u-1&&(r=Wt(r,-1)),r=rs(r,l)),s&&(t=Bn(t,0),null!=r&&(r=Bn(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=es(t);let m,g;null!=r&&(m=es(r));for(let t=0;t<p;++t){const n=f[t],s=Ue((()=>e(n,d)));if(null==r)h=s[0],d=s[1];else{const e=Ue((()=>{const e=m[t],n=tn(Cn(e),e);return{output:Je(en(s[0],e),en(d[0],n)),newStates:d.map(((t,r)=>Je(en(s[1][r],e),en(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){g=Yn(c,1)}return[h,g,d]}))}Od.className="DepthwiseConv2D",ze(Od);class Ld extends gc{constructor(e){let t;if(super(e),null==e.cell)throw new bu("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new jd({cells:e.cell}):e.cell,null==t.stateSize)throw new bu("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new hc({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return pl(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){nc(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return Ue((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new xu("Constants support is not implemented in RNN yet.");nc(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new hc({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!b.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new bu(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new hc({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Ue((()=>{if(!this.stateful)throw new mu("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new bu("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Nn([n,e]))):this.states_=[Nn([n,this.cell.stateSize])];else if(null==e)Ge(this.states_),null!=this.keptStates&&(Ge(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Nn([n,e]))):this.states_[0]=Nn([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new bu(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Ge(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!b.arraysEqual(s.shape,a))throw new bu(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>He(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Bd(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new hc({shape:e.shape}));i=i.concat(this.stateSpec)}null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length);if(a[0]instanceof dc){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Ue((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=rc(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new bu(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=Md(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Ue((()=>{let t=Nn(e.shape);return t=nn(t,[1,2]),t=ml(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?vl(t,[1,e]):t)):this.cell.stateSize>1?[vl(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ld.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const s=Ac(t.cell,n);return new e(Object.assign(t,{cell:s}))}}Ld.className="RNN",ze(Ld);class zd extends gc{}class Pd extends zd{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Bu(this.units,"units"),this.activation=nd(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Zl(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zl(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zl(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ld(e.kernelRegularizer),this.recurrentRegularizer=ld(e.recurrentRegularizer),this.biasRegularizer=ld(e.biasRegularizer),this.kernelConstraint=Ku(e.kernelConstraint),this.recurrentConstraint=Ku(e.recurrentConstraint),this.biasConstraint=Ku(e.biasConstraint),this.dropout=hl([1,dl([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=hl([1,dl([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ac(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ue((()=>{if(2!==(e=e).length)throw new bu(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=qd({ones:()=>Cn(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=qd({ones:()=>Cn(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=Il(null!=a?en(e,a):e,this.kernel.read()),null!=this.bias&&(r=Cl(r,this.bias.read())),null!=i&&(n=en(n,i));let o=Je(r,Il(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ed(this.activation),useBias:this.useBias,kernelInitializer:Yl(this.kernelInitializer),recurrentInitializer:Yl(this.recurrentInitializer),biasInitializer:Yl(this.biasInitializer),kernelRegularizer:od(this.kernelRegularizer),recurrentRegularizer:od(this.recurrentRegularizer),biasRegularizer:od(this.biasRegularizer),activityRegularizer:od(this.activityRegularizer),kernelConstraint:ju(this.kernelConstraint),recurrentConstraint:ju(this.recurrentConstraint),biasConstraint:ju(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Pd.className="SimpleRNNCell",ze(Pd);class Vd extends Ld{constructor(e){e.cell=new Pd(e),super(e)}call(e,t){return Ue((()=>{null!=this.cell.dropoutMask&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Vd.className="SimpleRNN",ze(Vd);class Wd extends zd{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new bu("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Bu(this.units,"units"),this.activation=nd(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=nd(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Zl(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zl(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zl(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ld(e.kernelRegularizer),this.recurrentRegularizer=ld(e.recurrentRegularizer),this.biasRegularizer=ld(e.biasRegularizer),this.kernelConstraint=Ku(e.kernelConstraint),this.recurrentConstraint=Ku(e.recurrentConstraint),this.biasConstraint=Ku(e.biasConstraint),this.dropout=hl([1,dl([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=hl([1,dl([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ac(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ue((()=>{if(2!==(e=e).length)throw new bu(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=qd({ones:()=>Cn(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=qd({ones:()=>Cn(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=en(e,r[0]));let l=Il(e,this.kernel.read());this.useBias&&(l=Cl(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=en(s,a[0]));const c=this.recurrentKernel.read(),[h,d]=qn(c,[2*this.units,this.units],c.rank-1),p=Il(s,h),[f,m,g]=qn(l,3,l.rank-1),[b,x]=qn(p,2,p.rank-1);i=this.recurrentActivation.apply(Je(f,b)),o=this.recurrentActivation.apply(Je(m,x));const y=Il(en(o,s),d);u=this.activation.apply(Je(g,y));const w=Je(en(i,s),en(Je(1,kn(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ed(this.activation),recurrentActivation:ed(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Yl(this.kernelInitializer),recurrentInitializer:Yl(this.recurrentInitializer),biasInitializer:Yl(this.biasInitializer),kernelRegularizer:od(this.kernelRegularizer),recurrentRegularizer:od(this.recurrentRegularizer),biasRegularizer:od(this.biasRegularizer),activityRegularizer:od(this.activityRegularizer),kernelConstraint:ju(this.kernelConstraint),recurrentConstraint:ju(this.recurrentConstraint),biasConstraint:ju(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Wd.className="GRUCell",ze(Wd);class Ud extends Ld{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Wd(e),super(e)}call(e,t){return Ue((()=>{null!=this.cell.dropoutMask&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ud.className="GRU",ze(Ud);class Gd extends zd{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Bu(this.units,"units"),this.activation=nd(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=nd(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Zl(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zl(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zl(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ld(e.kernelRegularizer),this.recurrentRegularizer=ld(e.recurrentRegularizer),this.biasRegularizer=ld(e.biasRegularizer),this.kernelConstraint=Ku(e.kernelConstraint),this.recurrentConstraint=Ku(e.recurrentConstraint),this.biasConstraint=Ku(e.biasConstraint),this.dropout=hl([1,dl([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=hl([1,dl([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ac(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends Fl{apply(t,s){const r=e.apply([n]),a=(new Dl).apply([n]),i=e.apply([2*n]);return wl(wl(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Ue((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new bu(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=qd({ones:()=>Cn(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=qd({ones:()=>Cn(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=en(e,a[0]));let h=Il(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=en(s,i[0])),h=Je(h,Il(s,this.recurrentKernel.read())),this.useBias&&(h=Cl(h,this.bias.read()));const[d,p,f,m]=qn(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=Je(en(u,r),en(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=en(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ed(this.activation),recurrentActivation:ed(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Yl(this.kernelInitializer),recurrentInitializer:Yl(this.recurrentInitializer),biasInitializer:Yl(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:od(this.kernelRegularizer),recurrentRegularizer:od(this.recurrentRegularizer),biasRegularizer:od(this.biasRegularizer),activityRegularizer:od(this.activityRegularizer),kernelConstraint:ju(this.kernelConstraint),recurrentConstraint:ju(this.recurrentConstraint),biasConstraint:ju(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Gd.className="LSTMCell",ze(Gd);class Hd extends Ld{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Gd(e),super(e)}call(e,t){return Ue((()=>{null!=this.cell.dropoutMask&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Hd.className="LSTM",ze(Hd);class jd extends zd{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Ue((()=>{let n=(e=e).slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;nc(e)&&(e=e[0]),e=e,this.cells.forEach(((n,s)=>{al(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(Ac(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return lc(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}cc(t)}}function qd(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Tl(t(),n),o=()=>El(i,t,s);if(!r||r<=1)return He(o().clone());return Array(r).fill(void 0).map(o).map((e=>He(e.clone())))}jd.className="StackedRNNCells",ze(jd);var Kd=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n};class Xd extends Ld{constructor(e){if(e.unroll)throw new xu("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new xu("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new hc({ndim:5})]}call(e,t){return Ue((()=>{if(null!=this.cell.dropoutMask&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new bu("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Ue((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=Nn([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){Ue((()=>{if(!this.stateful)throw new mu("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new bu("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Nn(r))):this.states_=[Nn(r)];else if(null==e)Ge(this.states_),null!=this.keptStates&&(Ge(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Nn(r))):this.states_[0]=Nn(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new bu(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ge(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!b.arraysEqual(n.shape,s))throw new bu(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>He(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=bd(u,s[0],r,a[0],i[0]),h=bd(l,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Xd.className="ConvRNN2D";class Yd extends Gd{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Bu(this.filters,"filters"),this.kernelSize=gd(n,2,"kernelSize"),this.kernelSize.forEach((e=>Bu(e,"kernelSize"))),this.strides=gd(s||1,2,"strides"),this.strides.forEach((e=>Bu(e,"strides"))),this.padding=r||"valid",nl(this.padding),this.dataFormat=a||"channelsLast",tl(this.dataFormat),this.dilationRate=gd(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Bu(e,"dilationRate")))}build(e){var t;e=ac(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new bu(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends Fl{apply(e,t){return yl([n.apply([s]),$n([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Ue((()=>{if(3!==e.length)throw new bu(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=qd({ones:()=>Cn(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?en(t[n],e):e;let u=o(s,i,0),l=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=qd({ones:()=>Cn(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),m=o(r,d,2),g=o(r,d,3);const[b,x,y,w]=qn(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?qn(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,v,this.padding),l=this.inputConv(l,x,k,this.padding),c=this.inputConv(c,y,I,this.padding),h=this.inputConv(h,w,S,this.padding);const[N,$,C,T]=qn(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,$),m=this.recurrentConv(m,C),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(Je(u,p)),A=this.recurrentActivation.apply(Je(l,f)),R=Je(en(A,a),en(E,this.activation.apply(Je(c,m)))),F=en(this.recurrentActivation.apply(Je(h,g)),this.activation.apply(R));return[F,F,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Kd(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){const r=Et(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Cl(r,n,this.dataFormat):r}recurrentConv(e,t){return Et(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Yd.className="ConvLSTM2DCell",ze(Yd);class Zd extends Xd{constructor(e){const t=new Yd(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Zd.className="ConvLSTM2D",ze(Zd);class Jd extends gc{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Ue((()=>{this.invokeCallHook(e,t);const n=rc(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return El((()=>Tl(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Jd.className="Dropout",ze(Jd);class Qd extends Jd{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Qd.className="SpatialDropout1D",ze(Qd);class ep extends gc{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Bu(this.units,"units"),this.activation=nd(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Zl(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Zl(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ku(e.kernelConstraint),this.biasConstraint=Ku(e.biasConstraint),this.kernelRegularizer=ld(e.kernelRegularizer),this.biasRegularizer=ld(e.biasRegularizer),this.activityRegularizer=ld(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ac(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ac(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Ue((()=>{this.invokeCallHook(e,t);const n=rc(e),s=Lu(this.activation.getClassName());let r;return null!=s?r=Il(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Il(n,this.kernel.read()),null!=this.bias&&(r=Cl(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:ed(this.activation),useBias:this.useBias,kernelInitializer:Yl(this.kernelInitializer),biasInitializer:Yl(this.biasInitializer),kernelRegularizer:od(this.kernelRegularizer),biasRegularizer:od(this.biasRegularizer),activityRegularizer:od(this.activityRegularizer),kernelConstraint:ju(this.kernelConstraint),biasConstraint:ju(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ep.className="Dense",ze(ep);class tp extends gc{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ac(e);for(const t of e.slice(1))if(null==t)throw new bu(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],cl(e,1)]}call(e,t){return Ue((()=>{this.invokeCallHook(e,t);let n=rc(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=rs(n,e)}return function(e){if(e.rank<=1)throw new bu(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],cl(e.shape,1)];return gt(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}tp.className="Flatten",ze(tp);class np extends gc{constructor(e){super(e),this.supportsMasking=!0,this.activation=nd(e.activation)}call(e,t){return Ue((()=>{this.invokeCallHook(e,t);const n=rc(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ed(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}np.className="Activation",ze(np);class sp extends gc{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Ue((()=>{return e=rc(e),t=e,n=this.n,Ue((()=>{if(2!==t.shape.length)throw new bu(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return vl(ml(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}sp.className="RepeatVector",ze(sp);class rp extends gc{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new bu("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=cl(e);if(null!==a){if(0===r||i%r!=0)throw new bu(n);s[a]=i/r}else if(i!==r)throw new bu(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Ue((()=>{this.invokeCallHook(e,t);const n=rc(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return gt(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}rp.className="Reshape",ze(rp);class ap extends gc{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=pl(1,e.dims.length+1);if(!b.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new hc({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ac(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return rs(rc(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ap.className="Permute",ze(ap);class ip extends gc{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=rc(e);return et(In(n,this.maskValue),-1)}call(e,t){return Ue((()=>{this.invokeCallHook(e,t);const n=rc(e),s=et(In(n,this.maskValue),-1,!0);return en(n,ie(s,n.dtype))}))}}ip.className="Masking",ze(ip);class op extends gc{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Su(e.inputLength))}this.inputDim=e.inputDim,Bu(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Bu(this.outputDim,"outputDim"),this.embeddingsInitializer=Zl(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ld(e.embeddingsRegularizer),this.activityRegularizer=ld(e.activityRegularizer),this.embeddingsConstraint=Ku(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Ue((()=>this.maskZero?(e=rc(e),In(e,ss(e))):null))}computeOutputShape(e){if(e=ac(e),null==this.inputLength)return[...e,this.outputDim];const t=Su(this.inputLength);if(t.length!==e.length-1)throw new bu(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new bu(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Ue((()=>{this.invokeCallHook(e,t);let n=rc(e);"int32"!==n.dtype&&(n=fl(n,"int32"));const s=Sl(this.embeddings.read(),gt(n,[n.size]));return gt(s,ac(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Yl(this.embeddingsInitializer),embeddingsRegularizer:od(this.embeddingsRegularizer),activityRegularizer:od(this.activityRegularizer),embeddingsConstraint:ju(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}op.className="Embedding",ze(op);class up extends gc{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new xu}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new bu("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ac(e)]),(e=e).length<2)throw new bu(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Fu(t),t.length>1)throw new bu(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===Fu(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Ue((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=dl(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=ml(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=gt(s,[r].concat(cl(e.slice(1))));i=rs(i,[1,0]),i=gt(i,a),t.push(i),n=!0}else if(e>1){const r=pl(1,e).concat([0]);t.push(rs(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=gt(rs(gt(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(pl(0,r-1));s=rs(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Fu(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Ue((()=>{if(null==t)return null;if(!Array.isArray(t))throw new bu("`mask` should be an Array");if(!Array.isArray(e))throw new bu("`inputs` should be an Array");if(t.length!==e.length)throw new bu(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Wt(e,0))))[0];for(let e=1;e<t.length-1;++e)n=rn(n,t[e]);return n}))}}class lp extends up{constructor(e){super(e)}mergeFunction(e){return Ue((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Je(t,e[n]);return t}))}}lp.className="Add",ze(lp);class cp extends up{constructor(e){super(e)}mergeFunction(e){return Ue((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=en(t,e[n]);return t}))}}cp.className="Multiply",ze(cp);class hp extends up{constructor(e){super(e)}mergeFunction(e){return Ue((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Je(t,e[n]);return en(1/e.length,t)}))}}hp.className="Average",ze(hp);class dp extends up{constructor(e){super(e)}mergeFunction(e){return Ue((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ln(t,e[n]);return t}))}}dp.className="Maximum",ze(dp);class pp extends up{constructor(e){super(e)}mergeFunction(e){return Ue((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=hn(t,e[n]);return t}))}}pp.className="Minimum",ze(pp);class fp extends up{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new bu("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(b.arraysEqual(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new bu("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Ue((()=>yl(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new bu("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new bu("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new bu("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new bu(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Ue((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(ie(Cn(e[n]),"bool")):t[n].rank<e[n].rank?s.push(Wt(t[n],-1)):s.push(t[n]);const r=St(s,this.axis);return Qe(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function mp(e,t){for(;e<0;)e+=t;return e}fp.className="Concatenate",ze(fp);class gp extends up{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new xu("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new bu(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new bu(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>mp(t,e[n].shape.length))):[mp(this.axes,n.shape.length),mp(this.axes,s.shape.length)],this.normalize&&(n=Rc(n,t[0]),s=Rc(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new xu("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),b.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new xu("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return Ue((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=gt(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=gt(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?nn(en(e,t),a[0]):nn(en(rs(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=an(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=Xn(i,t)}return 1===i.shape.length&&(i=Wt(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[mp(this.axes,e.length),mp(this.axes,t.length)],n}computeOutputShape(e){b.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new xu("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}gp.className="Dot",ze(gp);class bp extends gc{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Ue((()=>{this.invokeCallHook(e,t);const n=rc(e);return El((()=>Je(kl(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}bp.className="GaussianNoise",ze(bp);class xp extends gc{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ue((()=>{this.invokeCallHook(e,t);const n=rc(e);if(this.rate>0&&this.rate<1){return El((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return en(n,kl(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}xp.className="GaussianDropout",ze(xp);class yp extends gc{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||rc(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ue((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),s=()=>{const t=rc(e),s=-1.7580993408473766;let r=Xt(Dn(n),this.rate);r=fl(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate,o=Je(en(t,r),en(Je(r,-1),s));return Je(en(o,a),i)};return El(s,(()=>rc(e)),t.training||!1)}return e}))}}function wp(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=wt(e,t,n,s,r,a);else if(3===e.rank)i=vt(e,t,n,s,r,a);else{if(4!==e.rank)throw new xu(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=kt(e,t,n,s,r,a)}return i}function vp(e,t,n,s,r=.001){return b.arraysEqual(s.slice().sort(),pl(0,e.rank-1))?function(e,t,n,s,r=.001){return Ue((()=>{const a=vn(e,s),i=a.mean,o=a.variance;return[wp(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return Ue((()=>{const a=vn(e,s),i=a.mean,o=a.variance,u=[];for(const t of pl(0,e.rank))-1!==s.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=gt(i,u),c=gt(o,u),h=null==t?null:gt(t,u),d=null==n?null:gt(n,u);return[wp(e,l,c,d,h,r),i,o]}))}(e,t,n,s,r)}yp.className="AlphaDropout",ze(yp);class kp extends gc{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Zl(e.betaInitializer||"zeros"),this.gammaInitializer=Zl(e.gammaInitializer||"ones"),this.movingMeanInitializer=Zl(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Zl(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ku(e.betaConstraint),this.gammaConstraint=Ku(e.gammaConstraint),this.betaRegularizer=ld(e.betaRegularizer),this.gammaRegularizer=ld(e.gammaRegularizer)}build(e){e=ac(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new bu(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new hc({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Ue((()=>{const n=null!=t.training&&t.training,s=rc(e),r=s.shape,a=r.length,i=pl(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=wu(1,a);u[o]=r[o];const l=i.slice();l.sort();const c=!b.arraysEqual(l,pl(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=gt(this.movingMean.read(),u),t=gt(this.movingVariance.read(),u),n=this.center?gt(this.beta.read(),u):null,r=this.scale?gt(this.gamma.read(),u):null;return wp(s,e,t,n,r,this.epsilon)}return wp(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=vp(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Ue((()=>{const s=1-n,r=e.read(),a=en(tn(r,t),s);e.write(tn(r,a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Yl(this.betaInitializer),gammaInitializer:Yl(this.gammaInitializer),movingMeanInitializer:Yl(this.movingMeanInitializer),movingVarianceInitializer:Yl(this.movingVarianceInitializer),betaRegularizer:od(this.betaRegularizer),gammaRegularizer:od(this.gammaRegularizer),betaConstraint:ju(this.betaConstraint),gammaConstraint:ju(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}kp.className="BatchNormalization",ze(kp);class Ip extends gc{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Zl(e.betaInitializer||"zeros"),this.gammaInitializer=Zl(e.gammaInitializer||"ones"),this.betaRegularizer=ld(e.betaRegularizer),this.gammaRegularizer=ld(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ac(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Fu(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=rc(e),s=n.shape,r=s.length;return Ue((()=>{let{mean:e,variance:t}=vn(n,this.axis,!0);const a=wu(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r?gt(e,a):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(l.push(s[e]),c.push(1)):(l.push(1),c.push(s[e]));return e=Ut(e,l),t=Ut(t,l),o=Ut(o,c),u=Ut(u,c),wp(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Yl(this.betaInitializer),gammaInitializer:Yl(this.gammaInitializer),betaRegularizer:od(this.betaRegularizer),gammaRegularizer:od(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ip.className="LayerNormalization",ze(Ip);class Sp extends gc{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new bu(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new bu(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new bu(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new hc({ndim:4})]}computeOutputShape(e){let t,n;return e=ac(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Ue((()=>{return t=rc(e),n=this.padding,s=this.dataFormat,Ue((()=>{if(4!==t.rank)throw new bu(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new bu("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new bu(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Tn(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Np(e,t,n,s,r,a){return Ue((()=>{let i;tl(r),sl(a),nl(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=yd(e,r);const o="same"===s?"same":"valid";return i="max"===a?on(e,t,n,o):bt(e,t,n,o),"channelsFirst"===r&&(i=rs(i,[0,3,1,2])),i}))}function $p(e,t,n,s,r,a){return Ue((()=>{let i;tl(r),sl(a),nl(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=wd(e,r);const o="same"===s?"same":"valid";return i="max"===a?un(e,t,n,o):xt(e,t,n,o),"channelsFirst"===r&&(i=rs(i,[0,4,1,2,3])),i}))}Sp.className="ZeroPadding2D",ze(Sp);class Cp extends gc{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new bu(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Bu(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new bu(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Bu(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,nl(this.padding),this.inputSpec=[new hc({ndim:3})]}computeOutputShape(e){const t=bd((e=ac(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Ue((()=>{this.invokeCallHook(e,t),e=ml(rc(e),2);const n=this.poolingFunction(rc(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Xn(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Tp extends Cp{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tl(r),nl(s),Np(e,t,n,s,r,"max")}}Tp.className="MaxPooling1D",ze(Tp);class Ep extends Cp{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tl(r),nl(s),Np(e,t,n,s,r,"avg")}}Ep.className="AveragePooling1D",ze(Ep);class Ap extends gc{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new bu(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Bu(this.poolSize,"poolSize"),Bu(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tl(this.dataFormat),nl(this.padding),this.inputSpec=[new hc({ndim:4})]}computeOutputShape(e){e=ac(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=bd(t,this.poolSize[0],this.padding,this.strides[0]),n=bd(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Ue((()=>(this.invokeCallHook(e,t),this.poolingFunction(rc(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Rp extends Ap{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tl(r),nl(s),Np(e,t,n,s,r,"max")}}Rp.className="MaxPooling2D",ze(Rp);class Fp extends Ap{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tl(r),nl(s),Np(e,t,n,s,r,"avg")}}Fp.className="AveragePooling2D",ze(Fp);class _p extends gc{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new bu(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Bu(this.poolSize,"poolSize"),Bu(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tl(this.dataFormat),nl(this.padding),this.inputSpec=[new hc({ndim:5})]}computeOutputShape(e){e=ac(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=bd(t,this.poolSize[0],this.padding,this.strides[0]),n=bd(n,this.poolSize[1],this.padding,this.strides[1]),s=bd(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Ue((()=>(this.invokeCallHook(e,t),this.poolingFunction(rc(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Dp extends _p{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tl(r),nl(s),$p(e,t,n,s,r,"max")}}Dp.className="MaxPooling3D",ze(Dp);class Op extends _p{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tl(r),nl(s),$p(e,t,n,s,r,"avg")}}Op.className="AveragePooling3D",ze(Op);class Bp extends gc{constructor(e){super(e),this.inputSpec=[new hc({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new xu}}class Mp extends Bp{constructor(e){super(e||{})}call(e,t){return Ue((()=>{const t=rc(e);return cn(t,1)}))}}Mp.className="GlobalAveragePooling1D",ze(Mp);class Lp extends Bp{constructor(e){super(e||{})}call(e,t){return Ue((()=>{const t=rc(e);return Qt(t,1)}))}}Lp.className="GlobalMaxPooling1D",ze(Lp);class zp extends gc{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tl(this.dataFormat),this.inputSpec=[new hc({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new xu}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Pp extends zp{call(e,t){return Ue((()=>{const t=rc(e);return"channelsLast"===this.dataFormat?cn(t,[1,2]):cn(t,[2,3])}))}}Pp.className="GlobalAveragePooling2D",ze(Pp);class Vp extends zp{call(e,t){return Ue((()=>{const t=rc(e);return"channelsLast"===this.dataFormat?Qt(t,[1,2]):Qt(t,[2,3])}))}}Vp.className="GlobalMaxPooling2D",ze(Vp);class Wp extends gc{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=Ac(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class Up extends Wp{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ac(e)).length<3)throw new bu(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ac(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Ue((()=>Md(((e,n)=>[rc(this.layer.call(e,t)),[]]),e=rc(e),[],!1,null,null,!1,!0)[1]))}}Up.className="TimeDistributed",ze(Up);class Gp extends Wp{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ac(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Ac(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,Du(Qu,"BidirectionalMergeMode",r),e.weights)throw new xu("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(s=r.slice(1),t=r[0]):t=r[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):Iu(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Bd(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new bu("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new hc({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new xu("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof dc;for(const e of a)if(e instanceof dc!==o)throw new bu("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Ue((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Bn(r,1)),"concat"===this.mergeMode?i=yl([s,r]):"sum"===this.mergeMode?i=Je(s,r):"ave"===this.mergeMode?i=en(.5,Je(s,r)):"mul"===this.mergeMode?i=en(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){al(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),al(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Ac(t.layer);if(delete t.layer,null!=t.numConstants)throw new xu("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}Gp.className="Bidirectional",ze(Gp);var Hp,jp;(0,l.OB)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Hp||(Hp={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(jp||(jp={}));n(8834).Buffer;var qp,Kp=n(521);function Xp(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Qp(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=Xp(e[a],t,n,s);r[a]=i}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function Yp(e,t=Jp){return Zp(e,t)}function Zp(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Qp(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=Zp(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function Jp(e){return null===e?null:Qp(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Qp(e){let t=!1;if(l.OB().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(9182);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof re.es)&&!(e instanceof Promise)&&!t)}function ef(e){return function(e,t){return Xp(e,t)}(e,tf)}function tf(e){return e instanceof re.es?{value:e.clone(),recurse:!1}:Qp(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class nf{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class sf extends nf{constructor(){super(sf.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function rf(e){return new lf(e)}function af(e,t){return new wf(e,t)}sf.INITIAL_CAPACITY=32;class of{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new gf(this,e)}filter(e){return new ff(this,e)}map(e){return new mf(this,e)}mapAsync(e){return new bf(this,e)}serialMapAsync(e){return new bf(this,e).serial()}flatmap(e){return new yf(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new pf(this,e,t)}columnMajorBatch(e,t=!0,n=Jp){return this.rowMajorBatch(e,t).map((e=>Yp(e,n)))}concatenate(e,t){return new wf(new uf([this,e]),t)}take(e){return e<0||null==e?this:new df(this,e)}skip(e){return e<0||null==e?this:new hf(this,e)}prefetch(e){return new vf(this,e)}shuffle(e,t){return new kf(this,e,t)}serial(){return new cf(this)}}class uf extends of{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:ef(e),done:!1}}}class lf extends of{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class cf extends of{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class hf extends of{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Ge(e.value)}return this.upstream.next()}}class df extends of{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class pf extends of{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class ff extends of{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ge(e.value)}}}class mf extends of{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Pe.getTensorsInContainer(e.value),n=this.transform(e.value),s=Pe.getTensorsInContainer(n);for(const e of t)Pe.isTensorInList(e,s)||e.dispose();return{value:n,done:!1}}}class gf extends of{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class bf extends of{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Pe.getTensorsInContainer(e.value),n=await this.transform(e.value),s=Pe.getTensorsInContainer(n);for(const e of t)Pe.isTensorInList(e,s)||e.dispose();return{value:n,done:!1}}}class xf extends of{constructor(){super(),this.outputQueue=new sf,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class yf extends xf{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Pe.getTensorsInContainer(e.value),n=this.transform(e.value),s=Pe.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)Pe.isTensorInList(e,s)||e.dispose();return!0}}class wf extends of{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(qp||(qp={}));class vf extends of{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new nf(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class kf extends vf{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Kp.alea(n||b.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class If{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return b.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Sf((async()=>(await n.iterator()).columnMajorBatch(e,t,Nf)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Sf((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Sf((async()=>(await t.iterator()).filter((t=>Ue((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Sf((async()=>(await t.iterator()).map((t=>Ue((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Sf((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Sf((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Sf((async()=>af(rf((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Sf((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=Kp.alea(t||b.now().toString());return Sf((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Sf((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Sf(e,t=null){return new class extends If{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Nf(e){if(null===e)return null;const t=e[0];if(null==(n=t)||null===(s=n)||"object"!=typeof s&&"function"!=typeof s||Array.isArray(n)||"object"==typeof n&&n instanceof re.es||b.isTypedArray(n)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof re.es?Yn(e):y(e)}(e),recurse:!1}}var n,s;return{value:null,recurse:!0}}If.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");n(8834).Buffer;function $f(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&b.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const Cf=Aa;class Tf extends Ra.Zu{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Ra.JL(this,Ve())}nextDataId(){return Tf.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,l.OB)().get("IS_NODE")&&Xr.Z("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&b.isString(n[0])){const r=n.map((e=>b.encodeString(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return Yr(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>b.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ae(e.shape,e.dtype,n)}makeOutput(e,t,n){const s=this.write(e,t,n);return Ve().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=b.now();e();return{kernelMs:b.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){$f([e],"where");const t=this.readSync(e.dataId);return Cf(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Tf.nextDataId=0;function Ef(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if($f(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=b.sizeFromShape(i.shape),c=n||i.dtype,h=b.getArrayFromDType(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],r);return o.makeTensorInfo(i.shape,c,h)}}function Af(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if($f(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,r);return o.makeTensorInfo(i.shape,l,c)}}je("cpu",(()=>new Tf),1);const Rf=Ef(d.SX,(e=>e>=0?e:Math.exp(e)-1)),Ff={kernelName:d.SX,backendName:"cpu",kernelFunc:Rf};function _f(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Df={kernelName:d.iJ,backendName:"cpu",kernelFunc:_f};function Of(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;$f([r],"leakyRelu");const i=b.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,u=b.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",u)}const Bf={kernelName:d.J$,backendName:"cpu",kernelFunc:Of};function Mf(e){return(t,n,s,r,a)=>{const i=ye(t,n),o=i.length,u=b.computeStrides(i),l=b.sizeFromShape(i),c=b.getTypedArrayFromDType(a,l),h=t.length,d=n.length,p=b.computeStrides(t),f=b.computeStrides(n),m=be(t,i),g=be(n,i);if(m.length+g.length===0)for(let t=0;t<c.length;++t)c[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<c.length;++t){const n=b.indexToLoc(t,o,u),a=n.slice(-h);m.forEach((e=>a[e]=0));const i=b.locToIndex(a,h,p),l=n.slice(-d);g.forEach((e=>l[e]=0));const x=b.locToIndex(l,d,f);c[t]=e(s[i],r[x])}return[c,i]}}const Lf=Mf(((e,t)=>e<0?t*e:e));function zf(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;$f([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,u]=Lf(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}const Pf={kernelName:d.o0,backendName:"cpu",kernelFunc:zf},Vf=Ef(d.qk,(e=>Math.max(0,e))),Wf={kernelName:d.qk,backendName:"cpu",kernelFunc:Vf},Uf=Ef(d.Sb,(e=>Math.min(Math.max(0,e),6))),Gf={kernelName:d.Sb,backendName:"cpu",kernelFunc:Uf};function Hf(e){return(t,n,s)=>{const r=b.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}const jf=Hf((e=>1/(1+Math.exp(-e)))),qf=Ef(d.a5,(e=>1/(1+Math.exp(-e)))),Kf={kernelName:d.a5,backendName:"cpu",kernelFunc:qf};function Xf(e,t,n,s,r){if("linear"===n)return _f({inputs:{x:t},backend:e});if("relu"===n)return Vf({inputs:{x:t},backend:e});if("elu"===n)return Rf({inputs:{x:t},backend:e});if("relu6"===n)return Uf({inputs:{x:t},backend:e});if("prelu"===n)return zf({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return Of({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return qf({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Yf(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const Zf={kernelName:d.Zz,backendName:"cpu",kernelFunc:Yf};function Jf(e,t,n="float32"){if("complex64"===n){return Yf({inputs:{real:Jf(e,t,"float32"),imag:Jf(e,t,"float32")},backend:e})}const s=b.makeZerosTypedArray(b.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Qf(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const em={kernelName:d.xJ,backendName:"cpu",kernelFunc:Qf};function tm(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return _f({inputs:{x:r},backend:n});const e=Jf(n,r.shape,r.dtype),t=tm({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=Yf({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=Qf({inputs:{input:r},backend:n}),t=tm({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!b.hasEncodingLoss(r.dtype,a)){const e=_f({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(r.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(r.shape,"int32",t)}if("bool"===a){const e=n.data.get(r.dataId).values,t=b.toTypedArray([0],r.dtype),[s,a]=Mf(((e,t)=>e!==t?1:0))(r.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",s)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const nm={kernelName:d.RF,backendName:"cpu",kernelFunc:tm};function sm(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;$f([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c="string"===a.dtype?Ta(u):u,h="string"===a.dtype?Ta(l):l,d=s||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:r})=>{const{a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=tm({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,u=o.data.get(s.dataId).values,l=o.data.get(r.dataId).values,c=tm({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,x]=n(a.shape,i.shape,u,l,f,m),y=o.makeTensorInfo(x,"float32",g),w=o.makeTensorInfo(x,"float32",b),v=Yf({inputs:{real:y,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[u,l]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(l,r,u)}}}function rm(e){return(t,n,s,r,a,i)=>{const o=ye(t,n),u=b.sizeFromShape(o),l=o.length,c=b.computeStrides(o),h=b.getTypedArrayFromDType("float32",u),d=b.getTypedArrayFromDType("float32",u),p=be(t,o),f=be(n,o),m=Yr(s,r),g=Yr(a,i),x=t.length,y=b.computeStrides(t),w=n.length,v=b.computeStrides(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,s=t%g.length,r=e(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[t]=r.real,d[t]=r.imag}else for(let t=0;t<h.length;t++){const n=b.indexToLoc(t,l,c),s=n.slice(-x);p.forEach((e=>s[e]=0));const r=b.locToIndex(s,x,y),a=n.slice(-w);f.forEach((e=>a[e]=0));const i=b.locToIndex(a,w,v),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const am=Mf(((e,t)=>e+t)),im=rm(((e,t,n,s)=>({real:e+n,imag:t+s}))),om=sm(d.mm,am,im),um={kernelName:d.mm,backendName:"cpu",kernelFunc:om};function lm(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=b.sizeFromShape(r.shape),o=b.inferFromImplicitShape(a,i),u=b.sizeFromShape(o);b.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const cm={kernelName:d.HZ,backendName:"cpu",kernelFunc:lm};function hm(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;$f([r,a],"matMul");const u=r.shape.length,l=a.shape.length,c=i?r.shape[u-2]:r.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],p=o?a.shape[l-2]:a.shape[l-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=b.sizeFromShape(f),x=b.sizeFromShape(m),y=ye(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);b.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[x,p,h]:[x,h,p],v=lm({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),k=lm({inputs:{x:a},backend:n,attrs:{shape:w}}),I=i?v.shape[1]:v.shape[2],S=i?v.shape[2]:v.shape[1],N=o?k.shape[1]:k.shape[2],$=Math.max(g,x),C=n.data.get(v.dataId).values,T=n.data.get(k.dataId).values,E=b.computeStrides(v.shape),A=b.computeStrides(k.shape),[R,F,_]=i?[E[0],1,E[1]]:[E[0],E[1],1],[D,O,B]=o?[1,A[1],A[0]]:[A[1],1,A[0]],M=S*N,L=ae([$,S,N],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<$;e++)for(let t=0;t<S;t+=P)for(let n=0;n<N;n+=P)for(let s=0;s<I;s+=P){const r=Math.min(t+P,S),a=Math.min(n+P,N),i=Math.min(s+P,I);for(let o=t;o<r;o++)for(let t=n;t<a;t++){let n=0;for(let r=s;r<i;r++){const s=Math.min(e,g-1)*R,a=Math.min(e,x-1)*B;n+=C[s+o*F+r*_]*T[r*D+t*O+a]}z[e*M+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(y,L.dtype,L.values)}const dm={kernelName:d.XL,backendName:"cpu",kernelFunc:hm};const pm={kernelName:d.us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=hm({inputs:{a:r,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=om({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=Xf(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function fm(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const mm={kernelName:d.SY,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;$f(t,"abs");let s=new Float32Array(b.sizeFromShape(t.shape));return s=fm(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},gm=Ef(d.VG,(e=>Math.acos(e))),bm={kernelName:d.VG,backendName:"cpu",kernelFunc:gm},xm=Ef(d.Sp,(e=>Math.acosh(e))),ym={kernelName:d.Sp,backendName:"cpu",kernelFunc:xm};const wm={kernelName:d.Xz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;$f(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=ae(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function vm(e,t,n,s,r){const a=t.length,i=b.sizeFromShape(t),o=b.computeStrides(t),u=b.computeStrides(r),l=b.getTypedArrayFromDType(n,b.sizeFromShape(r));for(let t=0;t<i;++t){const n=b.indexToLoc(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];l[b.locToIndex(r,a,u)]=e[t]}return l}function km(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;$f(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];const u=vm(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(u,o,r.dtype),shape:o,dtype:r.dtype}}const Im={kernelName:d.G3,backendName:"cpu",kernelFunc:km};const Sm={kernelName:d.oT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;$f(r,"all");const o=b.parseAxisParam(a,r.shape);let u=o;const l=bn(u,r.shape.length);let c=r;null!=l&&(c=km({inputs:{x:r},backend:n,attrs:{perm:l}}),u=yn(u.length,r.shape.length)),gn("all",u,c.shape.length);const[h,d]=fn(c.shape,u),p=b.sizeFromShape(d),f=b.makeZerosTypedArray(b.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];n=n&&s}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=lm({inputs:{x:g},backend:n,attrs:{shape:mn(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const Nm={kernelName:d.IK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;$f(r,"any");const o=b.parseAxisParam(a,r.shape);let u=o;const l=bn(u,r.shape.length);let c=r;null!=l&&(c=km({inputs:{x:r},backend:n,attrs:{perm:l}}),u=yn(u.length,r.shape.length)),gn("any",u,c.shape.length);const[h,d]=fn(c.shape,u),p=b.sizeFromShape(d),f=b.makeZerosTypedArray(b.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];n=n||s}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=lm({inputs:{x:g},backend:n,attrs:{shape:mn(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const $m={kernelName:d.sJ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;$f(r,"argMax");let i=b.parseAxisParam(a,r.shape);const o=bn(i,r.shape.length);let u=r;const l=[];null!=o&&(u=km({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=yn(i.length,u.shape.length)),i=[i[0]],gn("argMax",i,u.shape.length);const[c,h]=fn(u.shape,i),d=b.sizeFromShape(c),p=b.makeZerosTypedArray(d,"int32"),f=b.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],s=0;for(let e=0;e<f;++e){const r=m[t+e];r>n&&(n=r,s=e)}p[e]=s}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}};const Cm={kernelName:d.aJ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;$f(r,"argMin");let i=b.parseAxisParam(a,r.shape);const o=bn(i,r.shape.length);let u=r;const l=[];null!=o&&(u=km({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=yn(i.length,u.shape.length)),i=[i[0]],gn("argMin",i,u.shape.length);const[c,h]=fn(u.shape,i),d=b.sizeFromShape(c),p=b.makeZerosTypedArray(d,"int32"),f=b.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],s=0;for(let e=0;e<f;++e){const r=m[t+e];r<n&&(n=r,s=e)}p[e]=s}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},Tm=Ef(d.M2,(e=>Math.asin(e))),Em={kernelName:d.M2,backendName:"cpu",kernelFunc:Tm},Am=Ef(d.qw,(e=>Math.asinh(e))),Rm={kernelName:d.qw,backendName:"cpu",kernelFunc:Am},Fm=Ef(d.jM,(e=>Math.atan(e))),_m={kernelName:d.jM,backendName:"cpu",kernelFunc:Fm},Dm=Mf(((e,t)=>Math.atan2(e,t))),Om=sm(d.QC,Dm),Bm={kernelName:d.QC,backendName:"cpu",kernelFunc:Om},Mm=Ef(d.Oy,(e=>Math.atanh(e))),Lm={kernelName:d.Oy,backendName:"cpu",kernelFunc:Mm};function zm(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ae(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*b,m=t*s[0];for(let t=0;t<r.inChannels;++t)for(let b=0;b<r.outHeight;++b){const w=b*i-d,v=Math.max(0,w),k=Math.min(r.inHeight,c+w),I=n+b*x;for(let n=0;n<r.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(r.inWidth,h+i);let b=f,x=0,w=0;for(let n=v;n<k;n+=u){const r=m+n*s[1];for(let n=c;n<d;n+=l){const i=e[r+n*s[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(x+=i,w++)}if(isNaN(b))break}g[I+n*y+t]="avg"===a?x/w:b}}}return m}function Pm(e,t,n,s,r=!1,a=!1){const i=ae(s.outShape,"int32"),o=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=ae(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=l;const x=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const y=Math.min(s.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<x;n+=l){const i=n-g;for(let o=p;o<y;o+=c){const u=o-h,l=m.get(e,n,o,t);l>w&&(w=l,v=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*d+u)}}i.set(v,e,n,o,t)}}return i}function Vm(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,x="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ae(r.outShape,n),w=y.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*v,y=t*s[0];for(let t=0;t<r.inChannels;++t)for(let v=0;v<r.outDepth;++v){const N=v*i-m;let $=N;for(;$<0;)$+=l;const C=Math.min(r.inDepth,d+N),T=n+v*k;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(r.inHeight,p+i),v=T+n*I;for(let n=0;n<r.outWidth;++n){const i=n*u-b;let o=i;for(;o<0;)o+=h;const p=Math.min(r.inWidth,f+i),g=v+n*S;let k=x,I=0,N=0;for(let n=$;n<C;n+=l){const r=y+n*s[1];for(let n=d;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<p;n+=h){const r=e[i+n*s[3]+t];if("max"===a&&r>k?k=r:"avg"===a&&(I+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===a?I/N:k}}}}return y}const Wm={kernelName:d.Jh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;$f(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s;b.assert(pt(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=st(r.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&b.arraysEqual(l.inShape,l.outShape))c=_f({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=b.computeStrides(r.shape),s=zm(e,r.shape,r.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,r.dtype,s.values)}return c}};const Um={kernelName:d._k,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s;$f(r,"avgPool3d");const c=rt(r.shape,a,i,1,o,u,l),h=Vm(n.data.get(r.dataId).values,r.shape,r.dtype,b.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Gm={kernelName:d.IM,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;$f([r,a],"avgPool3DGrad");const c=rt(a.shape,i,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,$=ae(a.shape,"float32"),C=1/(f*m*g),T=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-I,i=s-N,o=r-S;let u=0;for(let n=0;n<w;n+=b){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<v;n+=x){const r=(i+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=y){const a=(o+n)/p;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;u+=T.get(e,s,r,a,t)}}}$.set(u*C,e,n,s,r,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}};const Hm={kernelName:d.RO,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;$f([r,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=s,c=st(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,w=b-1-c.padInfo.top,v=ae(i.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,S=ae(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-w,a=s-y;let i=0;for(let n=0;n<b;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<x;n+=g){const r=(a+n)/d;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;i+=S.get(e,s,r,t)}}v.set(i*k,e,n,s,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const jm={kernelName:d.sH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:u}=t;b.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),b.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),b.assert(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),$f([r,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=s;null==l&&(l=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,x=p.length,y=d.length,w=h.length;let v=0,k=0,I=0,S=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[k++])*p[I++]/Math.sqrt(d[S++]+l),v>=g&&(v=0),k>=w&&(k=0),I>=x&&(I=0),S>=y&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function qm(e,t,n,s,r){const a=Fe(s,t,n),i=b.sizeFromShape(n),o=b.computeStrides(s);if(a){const n=_e(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const u=ae(s,r,"string"===r?Ta(e):e),l=ae(n,r);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));l.set(u.get(...s),...n)}return"string"===r?Ea(l.values):l.values}function Km(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;$f(r,"slice");const[o,u]=De(r,a,i);we(r,o,u);const l=qm(n.data.get(r.dataId).values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,l)}const Xm={kernelName:d.p2,backendName:"cpu",kernelFunc:Km};const Ym={kernelName:d.zw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;$f([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),u=Fr(r.shape,a,o),l=_r(u.length,a.length),c=Dr(r.shape,a,o),h=Or(i,a.length),d=Br(c,i,a.length),p=lm({inputs:{x:r},backend:n,attrs:{shape:u}}),f=km({inputs:{x:p},backend:n,attrs:{perm:l}}),m=lm({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Km({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Zm(e,t,n,s,r){const a=b.sizeFromShape(s),i=b.makeZerosTypedArray(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i}function Jm(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=ae([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const Qm={kernelName:d.zv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=Zm(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};const eg={kernelName:d.eE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=ye(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},tg=Hf((e=>Math.ceil(e))),ng=Af(d.gJ,tg),sg={kernelName:d.gJ,backendName:"cpu",kernelFunc:ng},rg=Ef(d.xn,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),ag={kernelName:d.xn,backendName:"cpu",kernelFunc:rg},ig={kernelName:d.yj,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(b.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function og(e,t,n,s){const r=b.getArrayFromDType(n,b.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=b.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?Ta(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}function ug(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const lg={kernelName:d.J_,backendName:"cpu",kernelFunc:ug};function cg(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=b.parseAxisParam(r,t[0].shape)[0];let i=Tr(t.map((e=>e.shape)),a);if(0===b.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>b.sizeFromShape(e.shape)>0));if(1===o.length)return _f({inputs:{x:o[0]},backend:n});if(Cr(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>Qf({inputs:{input:e},backend:n}))),t=o.map((e=>ug({inputs:{input:e},backend:n}))),s=cg({inputs:e,backend:n,attrs:{axis:a}}),r=cg({inputs:t,backend:n,attrs:{axis:a}}),i=Yf({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const u=o.map((e=>{const t=b.sizeFromShape(e.shape.slice(a));return lm({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Tr(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],h=og(l,i,t[0].dtype,c),d=Tr(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const hg={kernelName:d.Eh,backendName:"cpu",kernelFunc:cg};function dg(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s;$f([r,a],"conv2d");const h=ft(u),d=at(r.shape,a.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,y=d.padInfo.top,w="channelsLast"===d.dataFormat,v=new re.YD(d.outShape,r.dtype),k=b.computeStrides(r.shape),I=b.computeStrides(a.shape),S=k[0],N=w?k[1]:k[2],$=w?k[2]:1,C=w?1:k[1],T=v.strides[0],E=w?v.strides[1]:v.strides[2],A=w?v.strides[2]:1,R=w?1:v.strides[1],F=n.data.get(r.dataId).values,_=n.data.get(a.dataId).values,D=v.values;for(let e=0;e<d.batchSize;++e){const t=e*S,n=e*T;for(let e=0;e<d.outHeight;++e){const s=n+e*E,r=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=r+e*m;if(n<0||n>=d.inHeight)continue;const a=e*I[0],i=t+n*N;for(let e=0;e<d.outWidth;++e){const t=s+e*A,n=e*d.strideWidth-x;for(let e=0;e<f;++e){const s=n+e*g;if(s<0||s>=d.inWidth)continue;const r=i+s*$;let o=a+e*I[1];for(let e=0;e<d.inChannels;++e){const n=F[r+e*C];for(let e=0;e<d.outChannels;++e)D[t+e*R]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const pg={kernelName:d.mh,backendName:"cpu",kernelFunc:dg};const fg={kernelName:d.wU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=s;$f([r,a],"conv2dBackpropFilter");const h=ft(u),d=at(r.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,x=new re.YD(d.filterShape,"float32"),y=d.padInfo.left,w=d.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=new re.YD(r.shape,r.dtype,v),S=new re.YD(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(d.outHeight,(d.inHeight+w-e)/p);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((y-s)/f)),a=Math.min(d.outWidth,(d.inWidth+y-s)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-w;for(let e=r;e<a;++e){const n=s+e*f-y;u+=b?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}x.set(u,e,s,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const mg={kernelName:d.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s;$f([r,a],"conv2dBackpropInput");const h=b.computeStrides(a.shape),d=b.computeStrides(r.shape);let p=ft(l);const f=at(i,a.shape,o,1,u,c,!1,p),m=new re.YD(f.inShape,"float32"),g=m.values,x=n.data.get(r.dataId).values,y=n.data.get(a.dataId).values,[w,v,k]=h,{batchSize:I,filterHeight:S,filterWidth:N,inChannels:$,inHeight:C,inWidth:T,outChannels:E,outHeight:A,outWidth:R,strideHeight:F,strideWidth:_}=f;p=f.dataFormat;const D=S-1-f.padInfo.top,O=N-1-f.padInfo.left,B="channelsLast"===p,M=m.strides[0],L=B?m.strides[1]:m.strides[2],z=B?m.strides[2]:1,P=B?1:m.strides[1],V=d[0],W=B?d[1]:d[2],U=B?d[2]:1,G=B?1:d[1];for(let e=0;e<I;++e)for(let t=0;t<$;++t)for(let n=0;n<C;++n){const s=n-D,r=Math.max(0,Math.ceil(s/F)),a=Math.min(A,(S+s)/F);for(let i=0;i<T;++i){const o=i-O,u=Math.max(0,Math.ceil(o/_)),l=Math.min(R,(N+o)/_);let c=0;for(let n=r;n<a;++n){const r=n*F-s;for(let s=u;s<l;++s){const a=V*e+W*n+U*s,i=w*(S-1-r)+v*(N-1-(s*_-o))+k*t;for(let e=0;e<E;++e){c+=x[a+G*e]*y[i+e]}}}g[M*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const gg={kernelName:d.x1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s;$f([r,a],"conv3d");const l=it(r.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,x=g.front,y=g.left,w=g.top,v=new re.YD(l.outShape,r.dtype),k=n.data.get(r.dataId).values,I=n.data.get(a.dataId).values,S=v.values,N=b.computeStrides(r.shape),$=b.computeStrides(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*N[0],n=e*v.strides[0];for(let e=0;e<l.outDepth;++e){const s=n+e*v.strides[1],r=e*l.strideDepth-x;for(let e=0;e<c;++e){const n=r+e*p;if(n<0||n>=l.inDepth)continue;const a=e*$[0],i=t+n*N[1];for(let e=0;e<l.outHeight;++e){const t=s+e*v.strides[2],n=e*l.strideHeight-w;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=l.inHeight)continue;const r=a+e*$[1],o=i+s*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,s=e*l.strideWidth-y;for(let e=0;e<d;++e){const t=s+e*m;if(t<0||t>=l.inWidth)continue;const a=r+e*$[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=k[i+e];for(let e=0;e<l.outChannels;++e)S[n+e]+=t*I[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const bg={kernelName:d.o2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s;$f([r,a],"conv3dBackpropFilterV2");const l=b.computeStrides(r.shape),c=b.computeStrides(a.shape),h=it(r.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,y=new re.YD(h.filterShape,"float32"),w=y.values,[v,k,I,S]=y.strides,N=n.data.get(a.dataId).values,[$,C,T,E]=c,A=n.data.get(r.dataId).values,[R,F,_,D]=l,O=h.padInfo.front,B=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((O-e)/d)),n=Math.min(h.outDepth,(h.inDepth+O-e)/d),s=e*v;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/p)),i=Math.min(h.outHeight,(h.inHeight+M-r)/p),o=r*k+s;for(let s=0;s<x;++s){const u=Math.max(0,Math.ceil((B-s)/f)),l=Math.min(h.outWidth,(h.inWidth+B-s)/f),c=s*I+o;for(let o=0;o<h.inChannels;++o){const m=o*S+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*R,b=m*$;for(let m=t;m<n;++m){const t=(e+m*d-O)*F+h,n=m*C+b;for(let e=a;e<i;++e){const a=(r+e*p-M)*_+t,i=e*T+n;for(let e=u;e<l;++e){const t=e*E+i;g+=A[(s+e*f-B)*D+a+o]*N[t+c]}}}}w[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const xg={kernelName:d.ik,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s;$f([r],"conv3dBackpropInputV2");const l=b.computeStrides(r.shape),c=b.computeStrides(a.shape),h=it(u,a.shape,o,1,i),d=new re.YD(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,y=n.data.get(r.dataId).values,[w,v,k,I]=l,S=n.data.get(a.dataId).values,[N,$,C,T]=c,{batchSize:E,filterDepth:A,filterHeight:R,filterWidth:F,inChannels:_,inDepth:D,inHeight:O,inWidth:B,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:V,strideHeight:W,strideWidth:U}=h,G=A-1-h.padInfo.front,H=R-1-h.padInfo.top,j=F-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<_;++t)for(let n=0;n<D;++n){const s=n-G,r=Math.max(0,Math.ceil(s/V)),a=Math.min(L,(A+s)/V);for(let i=0;i<O;++i){const o=i-H,u=Math.max(0,Math.ceil(o/W)),l=Math.min(z,(R+o)/W);for(let c=0;c<B;++c){const h=c-j,d=Math.max(0,Math.ceil(h/U)),b=Math.min(P,(F+h)/U);let E=0;for(let n=r;n<a;++n){const r=n*V-s;for(let s=u;s<l;++s){const a=s*W-o;for(let i=d;i<b;++i){const o=w*e+v*n+k*s+I*i,u=N*(A-1-r)+$*(R-1-a)+C*(F-1-(i*U-h))+T*t;for(let e=0;e<M;++e){E+=y[o+e]*S[u+e]}}}}p[f*e+m*n+g*i+x*c+t]=E}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},yg=Ef(d.mc,(e=>Math.cos(e))),wg={kernelName:d.mc,backendName:"cpu",kernelFunc:yg},vg=Ef(d.TR,(e=>Math.cosh(e))),kg={kernelName:d.TR,backendName:"cpu",kernelFunc:vg};const Ig={kernelName:d.Vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,[c,h,d,p]=r.shape,f=a.shape[0],[m,g]=o,x=ae([f,m,g,p],"float32"),y=n.data.get(a.dataId).values,w=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,k=b.computeStrides(r.shape),I=b.computeStrides(x.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],s=y[t+1],r=y[t+2],a=y[t+3],i=w[e];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<p;s++){const r=s+n*I[2]+t*I[1]+e*I[0];x.values[r]=l}else if("bilinear"===u){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?s*(d-1)+u*f:.5*(s+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const s=n+u*I[2]+t*I[1]+e*I[0];x.values[s]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let s=0;s<p;s++){let a=s+h*k[2]+n*k[1]+i*k[0];const l=v[a];a=s+m*k[2]+n*k[1]+i*k[0];const c=v[a];a=s+h*k[2]+r*k[1]+i*k[0];const d=v[a];a=s+m*k[2]+r*k[1]+i*k[0];const p=l+(c-l)*b,f=d+(v[a]-d)*b;a=s+u*I[2]+t*I[1]+e*I[0],x.values[a]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(d-1)+n*f:.5*(s+a)*(d-1);if(r<0||r>d-1){for(let s=0;s<p;s++){const r=s+n*I[2]+t*I[1]+e*I[0];x.values[r]=l}continue}const o=Math.round(r),u=Math.round(c);for(let s=0;s<p;s++){const r=s+o*k[2]+u*k[1]+i*k[0],a=s+n*I[2]+t*I[1]+e*I[0];x.values[a]=v[r]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const Sg={kernelName:d.iH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;$f(r,"cumsum");const u=bn([a],r.shape.length);let l=r;null!=u&&(l=km({inputs:{x:r},backend:n,attrs:{perm:u}}));const c=yn(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=(0,Ye.x8)(l.dtype,"int32"),d=b.makeZerosTypedArray(b.sizeFromShape(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const s=m(e,t-1);d[n]=i?p[s]+d[s]:p[n]+d[s]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=km({inputs:{x:g},backend:n,attrs:{perm:xn(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const Ng={kernelName:d.QR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=Zm(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=Jm(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};const $g={kernelName:d.T0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;b.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],u=r.shape[1],l=r.shape[2],c=r.shape[3],h=u*a,d=l*a,p=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<d;++t){const r=Math.floor(t/a),i=(s*a+t%a)*p;for(let t=0;t<p;++t){const s=t+i+c*(r+l*(n+u*e));m[g++]=f[s]}}}return n.makeTensorInfo([o,h,d,p],r.dtype,m)}};function Cg(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s;$f([r,a],"depthwiseConv2DNative");const c=b.computeStrides(r.shape),h=b.computeStrides(a.shape);let d=u;null==d&&(d=[1,1]),b.assert(pt(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=at(r.shape,a.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:y}=p,w=y.left,v=y.top,k=p.outChannels/p.inChannels,I=new re.YD(p.outShape,r.dtype),S=n.data.get(r.dataId).values,N=n.data.get(a.dataId).values,$=I.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<p.outHeight;++e){const s=n+e*I.strides[1],r=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=s+e*I.strides[2],n=e*p.strideWidth-w;for(let e=0;e<m;++e){const s=n+e*x;if(s<0||s>=p.inWidth)continue;const r=a+e*h[1],o=i+s*p.inChannels;let u=t,l=r;for(let e=0;e<p.inChannels;++e){const t=S[o+e];for(let e=0;e<k;++e)$[u+e]+=t*N[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Tg={kernelName:d.ci,backendName:"cpu",kernelFunc:Cg};const Eg={kernelName:d.sL,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=s;$f([r,a],"depthwiseConv2dNativeBackpropFilter");const h=at(r.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new re.YD(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,v=new re.YD(r.shape,r.dtype,w),k=n.data.get(a.dataId).values,I=new re.YD(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(h.outHeight,(h.inHeight+x-e)/d);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((b-s)/p)),a=Math.min(h.outWidth,(h.inWidth+b-s)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/y),u=i%y;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=r;e<a;++e){const n=s+e*p-b;l+=v.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,s,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Ag={kernelName:d.y7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=s;$f([r,a],"depthwiseConv2DNativeBackpropInput");const h=b.computeStrides(r.shape),d=b.computeStrides(a.shape),p=at(c,a.shape,i,o,u,l,!0),f=new re.YD(p.inShape,"float32"),m=f.values,[g,x,y]=f.strides,w=n.data.get(r.dataId).values,[v,k,I]=h,S=n.data.get(a.dataId).values,[N,$,C]=d,{batchSize:T,filterHeight:E,filterWidth:A,inChannels:R,inHeight:F,inWidth:_,outChannels:D,outHeight:O,outWidth:B,strideHeight:M,strideWidth:L}=p,z=E-1-p.padInfo.top,P=A-1-p.padInfo.left,V=D/R;for(let e=0;e<T;++e)for(let t=0;t<R;++t)for(let n=0;n<F;++n){const s=n-z,r=Math.max(0,Math.ceil(s/M)),a=Math.min(O,(E+s)/M);for(let i=0;i<_;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(B,(A+o)/L);let c=0;for(let n=r;n<a;++n){const r=n*M-s;for(let s=u;s<l;++s){const a=v*e+k*n+I*s,i=N*(E-1-r)+$*(A-1-(s*L-o))+C*t;for(let e=0;e<V;++e){c+=w[a+(t*V+e)]*S[i+e]}}}m[g*e+x*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Rg={kernelName:d.$w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=b.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,i=ae([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const u=[...s.shape,...s.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Fg={kernelName:d.p4,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(s.dataId).values,c=s.shape.length,h=u.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:y,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:$,outShape:C}=nt(s.shape,r.shape,a,i,"NHWC",o),T=b.sizeFromShape(C),E=C.length,A=b.getArrayFromDType(s.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<x;++t){const n=t*v-w.top;for(let a=0;a<y;++a){const i=a*k-w.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const a=n+t*N;if(a>=0&&a<f)for(let n=0;n<S;++n){const p=i+n*$;if(p>=0&&p<m){const i=b.locToIndex([e,a,p,o],c,b.computeStrides(s.shape)),f=b.locToIndex([t,n,o],d,b.computeStrides(r.shape)),m=l[i]+h[f];m>u&&(u=m)}}}A[b.locToIndex([e,t,a,o],E,b.computeStrides(C))]=u}}}return{dataId:u.write(b.toTypedArray(A,s.dtype),C,s.dtype),shape:C,dtype:s.dtype}}},_g={kernelName:d.Vn,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=b.toNestedArray(s.shape,l.data.get(s.dataId).values),h=b.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:y,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:$,outShape:C}=nt(s.shape,r.shape,i,o,"NHWC",u);b.assert(a.rank===C.length,(()=>`Error in ${d.Vn}, dy must have the same rank as output ${C.length}, but got ${a.rank}`));const T=b.toNestedArray(C,l.data.get(a.dataId).values),E=b.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<x;++t){const n=t*v-w.top;for(let s=0;s<y;++s){const r=s*k-w.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<I;++t){const s=n+t*N;if(s>=0&&s<f)for(let n=0;n<S;++n){const l=r+n*$;if(l>=0&&l<m){const r=c[e][s][l][a]+h[t][n][a];r>i&&(i=r,o=t,u=n)}}}E[o][u][a]+=T[e][t][s][a]}}}return{dataId:l.write(b.toTypedArray(E,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Dg={kernelName:d.ek,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=b.toNestedArray(s.shape,l.data.get(s.dataId).values),h=b.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:y,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:$,outShape:C}=nt(s.shape,r.shape,i,o,"NHWC",u);b.assert(a.rank===C.length,(()=>`Error in ${d.ek}, dy must have the same rank as output ${C.length}, but got ${a.rank}`));const T=b.toNestedArray(C,l.data.get(a.dataId).values),E=b.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<x;++t){const n=t*v-w.top;for(let s=0;s<y;++s){const r=s*k-w.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=r<0?0:r;for(let t=0;t<I;++t){const s=n+t*N;if(s>=0&&s<f)for(let n=0;n<S;++n){const l=r+n*$;if(l>=0&&l<m){const r=c[e][s][l][a]+h[t][n][a];r>i&&(i=r,o=s,u=l)}}}E[e][o][u][a]+=T[e][t][s][a]}}}return{dataId:l.write(b.toTypedArray(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Og=Mf(((e,t)=>e*t)),Bg=rm(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),Mg=sm(d.wY,Og,Bg),Lg={kernelName:d.wY,backendName:"cpu",kernelFunc:Mg};function zg(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;$f(r,"sum"),o="bool"===r.dtype?tm({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):_f({inputs:{x:r},backend:n});const u=o.shape.length,l=b.parseAxisParam(a,o.shape),c=bn(l,u);let h=l,d=o;null!=c&&(d=km({inputs:{x:o},backend:n,attrs:{perm:c}}),h=yn(h.length,u)),gn("sum",h,d.shape.length);const[p,f]=fn(d.shape,h);let m=Jf(n,p,Ye.x8(d.dtype,"int32"));const g=b.sizeFromShape(f),x=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<x.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=y[t+e];x[e]=n}if(i){const e=m;m=lm({inputs:{x:m},backend:n,attrs:{shape:mn(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const Pg={kernelName:d.GB,backendName:"cpu",kernelFunc:zg};const Vg={kernelName:d.$g,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=ia(r,a.length);ua(i.length,u,a);const{path:l,steps:c}=la(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=oa(p,u[t]);let r;ca(e)?r=a[t]:(r=km({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);b.arraysEqual(r.shape,i)||(r=lm({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=Mg({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=zg({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}};const Wg={kernelName:d.HE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;$f([s,r],"eluGrad");const a=new Float32Array(b.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},Ug=Mf(((e,t)=>e===t?1:0)),Gg=sm(d.hd,Ug,null,"bool"),Hg={kernelName:d.hd,backendName:"cpu",kernelFunc:Gg},jg=Ur,qg=Gr,Kg=Hr,Xg=jr,Yg=qr,Zg=Kr,Jg=Ef(d.Om,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+jg*n);return t*(1-((((Zg*s+Yg)*s+Xg)*s+Kg)*s+qg)*s*Math.exp(-n*n))})),Qg={kernelName:d.Om,backendName:"cpu",kernelFunc:Jg},eb=Hf((e=>Math.exp(e))),tb=Af(d.NE,eb,"float32"),nb={kernelName:d.NE,backendName:"cpu",kernelFunc:tb};function sb(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let u=a;return a<0&&(b.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),lm({inputs:{x:r},backend:n,attrs:{shape:o}})}const rb={kernelName:d.YF,backendName:"cpu",kernelFunc:sb},ab=Hf((e=>Math.expm1(e))),ib=Af(d.Y0,ab),ob={kernelName:d.Y0,backendName:"cpu",kernelFunc:ib},ub=Mf(((e,t)=>e/t)),lb=sm(d.oH,ub),cb={kernelName:d.oH,backendName:"cpu",kernelFunc:lb},hb=Mf(((e,t)=>e-t)),db=rm(((e,t,n,s)=>({real:e-n,imag:t-s}))),pb=sm(d.Tr,hb,db),fb={kernelName:d.Tr,backendName:"cpu",kernelFunc:pb};function mb(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[r,a],c=b.sizeFromShape(l),h=b.getTypedArrayFromDType("float32",c),d=b.getTypedArrayFromDType("float32",c);for(let e=0;e<r;e++){const s=Km({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=Km({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=Yf({inputs:{real:s,imag:r},backend:n}),{real:l,imag:c}=gb(i,t,n),p=Yr(l,c);for(let t=0;t<a;t++){const n=ea(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=Yf({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function gb(e,t,n){const s=b.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=bb(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),i=_f({inputs:{x:a},backend:n}),u=cb.kernelFunc({inputs:{a:e,b:a},backend:n}),l=cb.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=sa(r*s,t,n),u=ea(e,s);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),ta(s,a,i,r)}return s}(Yr(a,i),s,t);return Zr(e)}var o}function bb(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=Yr(e,t),i=n/2,o=Jr(a),u=o.real,l=o.imag,c=[u.length],h=r.makeTensorInfo(c,"float32",u),d=r.makeTensorInfo(c,"float32",l),p=Yf({inputs:{real:h,imag:d},backend:r}),f=Qr(a),m=f.real,g=f.imag,b=[m.length],x=r.makeTensorInfo(b,"float32",m),y=r.makeTensorInfo(b,"float32",g),w=Yf({inputs:{real:x,imag:y},backend:r}),v=bb(u,l,i,s,r),k=v.real,I=v.imag,S=[k.length],N=r.makeTensorInfo(S,"float32",k),$=r.makeTensorInfo(S,"float32",I),C=Yf({inputs:{real:N,imag:$},backend:r}),T=bb(m,g,i,s,r),E=T.real,A=T.imag,R=[E.length],F=r.makeTensorInfo(R,"float32",E),_=r.makeTensorInfo(R,"float32",A),D=Yf({inputs:{real:F,imag:_},backend:r}),O=na(n,s),B=[O.real.length],M=r.makeTensorInfo(B,"float32",O.real),L=r.makeTensorInfo(B,"float32",O.imag),z=Yf({inputs:{real:M,imag:L},backend:r}),P=Mg({inputs:{a:z,b:D},backend:r}),V=om({inputs:{a:C,b:P},backend:r}),W=pb({inputs:{a:C,b:P},backend:r}),U=Qf({inputs:{input:V},backend:r}),G=Qf({inputs:{input:W},backend:r}),H=ug({inputs:{input:V},backend:r}),j=ug({inputs:{input:W},backend:r}),q=cg({inputs:[U,G],backend:r,attrs:{axis:0}}),K=cg({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const xb={kernelName:d.vw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=b.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=lm({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=mb(i,!1,n),u=lm({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function yb(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||b.inferDtype(r),o=b.getArrayFromDType(i,b.sizeFromShape(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const wb={kernelName:d.de,backendName:"cpu",kernelFunc:yb};const vb={kernelName:d.Uy,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=b.getTypedArrayFromDType(s.dtype,b.sizeFromShape(s.shape)),[i,o,u,l]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const s=e*l;for(let r=0;r<l;r++){const i=Math.round(u-e-1),o=t+n+s+r;let h=c[o];if(i>=0&&i<u){h=c[t+n+i*l+r]}a[o]=h}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},kb=Hf((e=>Math.floor(e))),Ib=Af(d.OR,kb),Sb={kernelName:d.OR,backendName:"cpu",kernelFunc:Ib},Nb=Mf(((e,t)=>Math.floor(e/t))),$b=sm(d.je,Nb,null,"int32"),Cb={kernelName:d.je,backendName:"cpu",kernelFunc:$b};const Tb={kernelName:d._V,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=dg({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=om({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Xf(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const Eb={kernelName:d.lu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=Cg({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=om({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Xf(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function Ab(e,t,n,s,r,a,i,o,u){const l=ae([s,a],n);for(let n=0;n<s;n++){const s=[];let c=0;for(let t=0;t<r;t++){const a=e[n*r+t];c+=a*i[t],s.push(a)}if(c<0||c>=u/a)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let e=0;e<a;e++)l.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return l}const Rb={kernelName:d.q1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=b.sizeFromShape(s.shape),i=r.shape,o=i[i.length-1],[u,l,c,h]=Mr(s,r);if(0===l)return n.makeTensorInfo(u,s.dtype,[]);const d=Ab(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,l,o,c,h,s.shape,a);return n.makeTensorInfo(u,s.dtype,d.values)}};function Fb(e,t,n){const s=ae(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const u=e.locToIndex(r);0<=u&&u<e.values.length&&(s.values[n]=e.values[u])}return s}const _b={kernelName:d.qi,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;$f([r,a],"gatherV2");const u=b.parseAxisParam(i,r.shape)[0],l=n.data.get(a.dataId).values,c=r.shape[u];for(let e=0;e<l.length;++e){const t=l[e];b.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=b.sizeFromShape(a.shape),p=Ca(r,a,u,h),f=lm({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=lm({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=n.bufferSync(m),y=Fb(n.bufferSync(f),x,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}},Db=Mf(((e,t)=>e>t?1:0)),Ob=sm(d.iZ,Db,null,"bool"),Bb={kernelName:d.iZ,backendName:"cpu",kernelFunc:Ob},Mb=Mf(((e,t)=>e>=t?1:0)),Lb=sm(d.Ac,Mb,null,"bool"),zb={kernelName:d.Ac,backendName:"cpu",kernelFunc:Lb};const Pb={kernelName:d.Qg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=b.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=lm({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=mb(i,!0,n),u=lm({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Vb=Ef(d.av,(e=>Number.isFinite(e)?1:0),"bool"),Wb={kernelName:d.av,backendName:"cpu",kernelFunc:Vb},Ub=Ef(d.iW,(e=>Math.abs(e)===1/0?1:0),"bool"),Gb={kernelName:d.iW,backendName:"cpu",kernelFunc:Ub},Hb=Ef(d.r7,(e=>Number.isNaN(e)?1:0),"bool"),jb={kernelName:d.r7,backendName:"cpu",kernelFunc:Hb},qb=Mf(((e,t)=>e<t?1:0)),Kb=sm(d.vt,qb,null,"bool"),Xb={kernelName:d.vt,backendName:"cpu",kernelFunc:Kb},Yb=Mf(((e,t)=>e<=t?1:0)),Zb=sm(d.CA,Yb,null,"bool"),Jb={kernelName:d.CA,backendName:"cpu",kernelFunc:Zb};function Qb(e,t,n){const s=(t-e)/(n-1),r=b.makeZerosTypedArray(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}const ex={kernelName:d.e7,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=Qb(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},tx=Hf((e=>Math.log(e))),nx=Af(d.Zb,tx),sx={kernelName:d.Zb,backendName:"cpu",kernelFunc:nx},rx=Ef(d.kU,(e=>Math.log1p(e))),ax={kernelName:d.kU,backendName:"cpu",kernelFunc:rx},ix=Mf(((e,t)=>e&&t)),ox=sm(d.PY,ix,null,"bool"),ux={kernelName:d.PY,backendName:"cpu",kernelFunc:ox},lx=Ef(d.Vf,(e=>e?0:1),"bool"),cx={kernelName:d.Vf,backendName:"cpu",kernelFunc:lx},hx=Mf(((e,t)=>e||t)),dx=sm(d.MZ,hx,null,"bool"),px={kernelName:d.MZ,backendName:"cpu",kernelFunc:dx};const fx={kernelName:d.eZ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s;$f(r,"LRN");const l=r.shape[3],c=l-1,h=n.data.get(r.dataId).values,d=b.sizeFromShape(r.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(r.shape,r.dtype,p)}};const mx={kernelName:d.Hh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s;$f(i,"LRNGrad");const h=b.sizeFromShape(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),x=h;for(let e=0;e<x;e++){const t=e%d,n=e-t+Math.max(0,t-o),s=e-t+Math.min(d,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(f[e],2);r=l*r+u;for(let t=n;t<s;t++){let n=-2*l*c*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function gx(e,t,n,s){const r=b.getTypedArrayFromDType(s,b.sizeFromShape(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>a)&&(a=t)}r[n]=a}return r}function bx(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let u=r.shape;const l=u.length,c=b.parseAxisParam(a,u);let h=c;const d=bn(h,l);let p=o.data.get(r.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=vm(p,u,r.dtype,d,e),h=yn(h.length,l),u=e}$f(r,"max"),gn("max",h,l);const[f,m]=fn(u,h),g=gx(p,b.sizeFromShape(m),f,r.dtype),x=o.write(g,f,r.dtype);let y=f;if(i){y=mn(f,c)}return{dataId:x,shape:y,dtype:r.dtype}}const xx={kernelName:d.Yo,backendName:"cpu",kernelFunc:bx},yx=Mf(((e,t)=>Math.max(e,t))),wx=sm(d.BM,yx),vx={kernelName:d.BM,backendName:"cpu",kernelFunc:wx};const kx={kernelName:d.mT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;$f(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s;b.assert(pt(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=st(r.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&b.arraysEqual(l.inShape,l.outShape))c=_f({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=b.computeStrides(r.shape),s=zm(e,r.shape,r.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,r.dtype,s.values)}return c}};const Ix={kernelName:d.OA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s;$f(r,"maxPool3d");const c=rt(r.shape,a,i,1,o,u,l),h=Vm(n.data.get(r.dataId).values,r.shape,r.dtype,b.computeStrides(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Sx={kernelName:d.OU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;$f([r,a],"maxPool3DGrad");const c=rt(a.shape,i,o,1,u,l),h=function(e,t){const n=ae(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const x=b*s-d;let y=x;for(;y<0;)y+=i;const w=Math.min(t.inDepth,l+x);for(let s=0;s<t.outHeight;++s){const l=s*r-p;let d=l;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+l);for(let r=0;r<t.outWidth;++r){const p=r*a-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=y;t<w;t+=i){const n=t-x;for(let s=d;s<v;s+=o){const r=s-l;for(let a=k;a<I;a+=u){const i=a-p,o=e.get(m,t,s,a,g);o>=S&&(S=o,N=n*c*h+r*c+i)}}}n.set(N,m,b,s,r,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,y=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=x-1-c.padInfo.front,k=w-1-c.padInfo.left,I=y-1-c.padInfo.top,S=ae(a.shape,"float32"),N=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-v,i=s-I,o=r-k;let u=0;for(let n=0;n<x;n+=m){const s=(a+n)/d;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<y;r+=g){const a=(i+r)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=b){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=x*y*w-1-h.get(e,s,a,l,t)===n*y*w+r*w+i?1:0;if(0===d)continue;u+=N.get(e,s,a,l,t)*d}}}S.set(u,e,n,s,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const Nx={kernelName:d.OV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;$f([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,d=st(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=ae(d.outShape,o.dtype,Pm(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=y-1-d.padInfo.top,I=ae(o.shape,"float32"),S=n.data.get(r.dataId).values,N=ae(r.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-k,a=s-v;let i=0;for(let n=0;n<y;n+=b){const s=(r+n)/m;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<w;r+=x){const o=(a+r)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=y*w-1-f.get(e,s,o,t)===n*w+r?1:0;if(0===u)continue;i+=N.get(e,s,o,t)*u}}I.set(i,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const $x={kernelName:d.vF,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;$f(s,"MaxPoolWithArgmax");const l=u.data.get(s.dataId).values,c=st(s.shape,r,a,[1,1],i),[h,d]=function(e,t,n,s,r){const a=zm(e,0,n,b.computeStrides(t),r,"max"),i=Pm(e,t,n,r,!0,s);return[a.values,i.values]}(l,s.shape,s.dtype,o,c),p=u.write(h,c.outShape,s.dtype),f=u.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const Cx={kernelName:d.q2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=b.parseAxisParam(a,r.shape),u=fn(r.shape,o)[1],l=b.sizeFromShape(u),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(h);const d=tm({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});c.push(d);const p=lb({inputs:{a:d,b:h},backend:n});c.push(p);const f=zg({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const Tx={kernelName:d.c1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;$f(r,"min");const o=b.parseAxisParam(a,r.shape);let u=o;const l=bn(u,r.shape.length);let c=r;null!=l&&(c=km({inputs:{x:r},backend:n,attrs:{perm:l}}),u=yn(u.length,r.shape.length)),gn("min",u,c.shape.length);const[h,d]=fn(c.shape,u),p=b.sizeFromShape(d),f=b.makeZerosTypedArray(b.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];(Number.isNaN(s)||s<n)&&(n=s)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=lm({inputs:{x:g},backend:n,attrs:{shape:mn(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Ex=Mf(((e,t)=>Math.min(e,t))),Ax=sm(d.q8,Ex),Rx={kernelName:d.q8,backendName:"cpu",kernelFunc:Ax};const Fx={kernelName:d.jQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;$f(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=b.computeStrides(r.shape),f=b.sizeFromShape(o),m=o.length,g=b.computeStrides(o),x=b.getTypedArrayFromDType(r.dtype,f);for(let e=0;e<f;e++){let t=b.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=b.locToIndex(t,d,p);x[e]=h[n]}return{dataId:n.write(x,o,r.dtype),shape:o,dtype:r.dtype}}},_x=Mf(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Dx=sm(d.Vb,_x),Ox={kernelName:d.Vb,backendName:"cpu",kernelFunc:Dx};var Bx=n(1943);function Mx(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=b.parseAxisParam([o],r.shape),l=bx({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=mn(l.shape,u),h=lm({inputs:{x:l},backend:n,attrs:{shape:c}}),d=pb({inputs:{a:r,b:h},backend:n}),p=tb({inputs:{x:d},backend:n}),f=zg({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=lm({inputs:{x:f},backend:n,attrs:{shape:c}}),g=lb({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const Lx={kernelName:d.Gc,backendName:"cpu",kernelFunc:Mx};const zx={kernelName:d.NZ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;$f(r,"multinomial");const u=o?r:Mx({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,a],p=b.makeZerosTypedArray(b.sizeFromShape(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const s=Bx.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();p[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){p[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}};function Px(e,t,n){const s=b.createScalarValue(-1,n);return Og([],t,s,e,n)}const Vx={kernelName:d.ku,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;$f(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=Px(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},Wx=Os;const Ux={kernelName:d.uv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s;$f(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=Wx(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Gx=Bs;const Hx={kernelName:d.cy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s;$f(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=Gx(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},jx=Ms;const qx={kernelName:d.W0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s;$f(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=jx(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},Kx=Mf(((e,t)=>e!==t?1:0)),Xx=sm(d.yQ,Kx,null,"bool"),Yx={kernelName:d.yQ,backendName:"cpu",kernelFunc:Xx};const Zx={kernelName:d.we,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;$f(r,"oneHot");const u=b.sizeFromShape(r.shape),l=new Float32Array(u*a);l.fill(o);const c=n.data.get(r.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<a&&(l[e*a+c[e]]=i);return n.makeTensorInfo([...r.shape,a],"int32",l)}};function Jx(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=Qf({inputs:{input:s},backend:n}),t=Jx({inputs:{x:e},backend:n}),r=ug({inputs:{input:s},backend:n}),a=Jx({inputs:{x:r},backend:n}),i=Yf({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return yb({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const Qx={kernelName:d.Ru,backendName:"cpu",kernelFunc:Jx};const ey={kernelName:d.qW,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=Qf({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=ug({inputs:{input:r},backend:s}),i=Jx({inputs:{x:a},backend:s}),o=Yf({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return yb({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function ty(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return sb({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{b.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=cg({inputs:t.map((e=>{const t=sb({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const ny={kernelName:d.Qi,backendName:"cpu",kernelFunc:ty};const sy={kernelName:d.ly,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;$f(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(r.dataId).values,c=b.sizeFromShape(r.shape),h=r.shape.length,d=b.computeStrides(r.shape),p=b.sizeFromShape(o),f=o.length,m=b.computeStrides(o),g=b.getTypedArrayFromDType(r.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++){const t=b.indexToLoc(e,h,d).map(((e,t)=>e+u[t]));g[b.locToIndex(t,f,m)]=l[e]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},ry=Mf(((e,t)=>Math.pow(e,t))),ay=sm(d.pe,ry),iy={kernelName:d.pe,backendName:"cpu",kernelFunc:ay};function oy(e,t,n,s){const[r,a]=fn(e,s),i=(0,Ye.x8)(t,"int32"),o=b.makeZerosTypedArray(b.sizeFromShape(r),i),u=b.sizeFromShape(a);for(let e=0;e<o.length;++e){const t=e*u;let s=1;for(let e=0;e<u;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}}const uy={kernelName:d.Dl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;$f(r,"prod");const o=r.shape.length,u=b.parseAxisParam(a,r.shape),l=bn(u,o);let c=u,h=r;const d=[];null!=l&&(h=km({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),c=yn(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=oy(h.shape,h.dtype,p,c);let x=m;return i&&(x=mn(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(x,g,f)}};function ly(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return b.makeZerosTypedArray(0,s);const r=Math.abs(Math.ceil((t-e)/n)),a=b.makeZerosTypedArray(r,s);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const cy={kernelName:d.e6,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=ly(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},hy=Ef(d.$H,(e=>1/e)),dy={kernelName:d.$H,backendName:"cpu",kernelFunc:hy};const py={kernelName:d._Y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;$f(r,"resizeBilinear");const u=b.computeStrides(r.shape),[l,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(b.sizeFromShape([h,l,c,f])),x=[a&&l>1?d-1:d,a&&c>1?p-1:p],y=[a&&l>1?l-1:l,a&&c>1?c-1:c];let w=0;const v=x[0]/y[0],k=x[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?v*(t+.5)-.5:v*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(d-1,Math.ceil(n)),o=e*u[0]+s*u[1],l=e*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+a*u[2],b=l+a*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*s,i=a+(n+(m[b+e]-n)*s-a)*r;g[w++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}};const fy={kernelName:d.zb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;$f([a,r],"resizeBilinearGrad");const o=b.computeStrides(r.shape),[u,l,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(u*l*c*h),m=[i&&d>1?l-1:l,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],x=m[0]/g[0],y=m[1]/g[1],w=n.data.get(a.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*x,s=Math.floor(n),r=Math.min(Math.ceil(n),l-1),a=t+s*o[1],i=t+r*o[1],u=n-s,d=1-u;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,l=1-r,p=a+n*o[2],m=a+s*o[2],g=i+n*o[2],b=i+s*o[2],x=d*l,k=d*r,I=u*l,S=u*r;for(let e=0;e<h;e++){const t=w[v++];f[p+e]+=t*x,f[m+e]+=t*k,f[g+e]+=t*I,f[b+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}};const my={kernelName:d.dp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;$f(r,"resizeNearestNeighbor");const u=b.computeStrides(r.shape),[l,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*c*f),x=[a&&l>1?d-1:d,a&&c>1?p-1:p],y=[a&&l>1?l-1:l,a&&c>1?c-1:c],w=x[0]/y[0],v=x[1]/y[1];let k=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?w*(e+.5):w*e;let s=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*u[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*u[2];for(let e=0;e<f;e++){const t=m[s+e];g[k++]=t}}}}return n.makeTensorInfo([h,l,c,f],r.dtype,g)}};const gy={kernelName:d.Hm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;$f([a,r],"resizeNearestNeighborGrad");const o=b.computeStrides(r.shape),u=b.computeStrides(a.shape),[l,c,h,d]=r.shape,[,p,f]=a.shape,m=new Float32Array(l*c*h*d),g=n.data.get(a.dataId).values,x=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],w=x[0]/y[0],v=x[1]/y[1],k=1/w,I=1/v,S=2*Math.ceil(k)+2,N=2*Math.ceil(I)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*k),r=Math.floor(s-S/2);for(let s=0;s<h;s++){const a=n+s*o[2],l=Math.floor(s*I),b=Math.floor(l-N/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<S;a++){const l=a+r;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*w;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+b;if(t<0||t>=f)continue;const r=d+t*u[2],a=t*v;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const by={kernelName:d.mK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;$f(r,"reverse");const i=r.shape.length,o=b.parseAxisParam(a,r.shape);if(0===i)return _f({inputs:{x:r},backend:n});const u=new re.YD(r.shape,r.dtype),l=n.bufferSync(r);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},xy={kernelName:d.b9,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=b.getTypedArrayFromDType(s.dtype,b.sizeFromShape(s.shape)),[l,c,h,d]=s.shape,[p,f]=Rr(i,c,h),m=Math.sin(r),g=Math.cos(r),x=o.data.get(s.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let s=0;s<h;s++){const r=s*d;for(let i=0;i<d;i++){const o=[l,e,s,i],b=o[2],y=o[1];let w=(b-p)*g-(y-f)*m,v=(b-p)*m+(y-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=a;if("number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c){k=x[t+v*(h*d)+w*d+i]}u[t+n+r+i]=k}}}}return{dataId:o.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},yy=Ef(d.e0,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),wy={kernelName:d.e0,backendName:"cpu",kernelFunc:yy},vy=Hf((e=>1/Math.sqrt(e))),ky=Af(d.bV,vy),Iy={kernelName:d.bV,backendName:"cpu",kernelFunc:ky};function Sy(e,t,n,s,r,a,i,o,u,l){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return ae(n,t.dtype);const p=ae(c,t.dtype);p.values.fill(u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)l?p.values[u*r+n]+=d[e*r+n]:p.values[u*r+n]=0===t.rank?d[0]:d[e*r+n]}return p}const Ny={kernelName:d.xQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Pr(0,r,i),d=Sy(n.bufferSync(r),n.bufferSync(a),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};const $y={kernelName:d.Ph,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;$f([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=(0,Ye.x8)(r.dtype,a.dtype),h=b.makeZerosTypedArray(b.sizeFromShape(r.shape),c);let d=0;const p=0===i||i>1||1===r.shape.length?1:b.sizeFromShape(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(r.shape,c,h)}},Cy=Vr,Ty=Wr,Ey=Ef(d.oF,(e=>e>=0?Ty*e:Cy*(Math.exp(e)-1))),Ay={kernelName:d.oF,backendName:"cpu",kernelFunc:Ey},Ry=Ef(d.i5,(e=>e<0?-1:e>0?1:0)),Fy={kernelName:d.i5,backendName:"cpu",kernelFunc:Ry},_y=Ef(d.RQ,(e=>Math.sin(e))),Dy={kernelName:d.RQ,backendName:"cpu",kernelFunc:_y},Oy=Ef(d.w3,(e=>Math.sinh(e))),By={kernelName:d.w3,backendName:"cpu",kernelFunc:Oy},My=Math.log(1.1920928955078125e-7)+2,Ly=Ef(d.MR,(e=>{const t=e>-My,n=e<My,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),zy={kernelName:d.MR,backendName:"cpu",kernelFunc:Ly};const Py={kernelName:d.TQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;$f([r],"spaceToBatchND");const o=b.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<r.shape.length;++e)u.push([0,0]);const l=sy.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=Fr(l.shape,a,o,!1),h=_r(c.length,a.length,!1),d=Dr(l.shape,a,o,!1),p=lm({inputs:{x:l},backend:n,attrs:{shape:c}}),f=km({inputs:{x:p},backend:n,attrs:{perm:h}}),m=lm({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function Vy(e,t,n,s,r,a,i){const o=t[0],u=a[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(pa(o));return[b.getArrayFromDType(n,0),[0,h],b.getArrayFromDType(r,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(fa(t,n));if(n>=u)throw new Error(ma(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],a=b.getArrayFromDType(n,t*h),d=b.getArrayFromDType(r,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=p[n],i=(0===n?0:f[n-1])+r;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=s[t],c[t]=i}for(let e=0;e<u;++e){if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}}return[a,[t,h],d,l,c]}}const Wy={kernelName:d.O3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=Vy(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};function Uy(e,t,n,s,r){const a=b.sizeFromShape(s),i=t[0],o=r.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(ga(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(ba(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/l);if(l*e!==a)throw new Error(ya(s,u));u[c]=e}if(b.sizeFromShape(u)!==a)throw new Error(wa(s,u));const h=s.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*s[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=b.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let s=0;s<h;++s)n+=e[t*h+s]*d[s];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],u]}const Gy={kernelName:d.nh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=Uy(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function Hy(e,t,n,s,r,a=!1,i=0){const o=s.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=h.reduce(((e,t)=>e*t),1),p=b.getArrayFromDType(n,d);if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let f=0,m=1,g=0,x=r[f];for(;;){let t=0;if(m<o){if(t=r[m],x===t){++m;continue}if(x>=t)throw new Error("segment ids are not increasing")}if(x<0||x>=c)throw new Error(Ia(x,c));x>g&&p.fill(i,g*l,x*l);for(let t=f;t<m;++t){const n=s[t];if(n<0||n>=u[0])throw new Error(Sa(t,s[t],u[0]));for(let t=0;t<l;t++)p[x*l+t]+=e[n*l+t]}if(a)for(let e=0;e<l;e++)p[x*l+e]/=m-f;if(f=m,++m,g=x+1,x=t,m>o)break}return g<c&&p.fill(i,g*l,c*l),[p,h]}const jy={kernelName:d.YW,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=Hy(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}};const qy={kernelName:d.Zj,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=Hy(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}};const Ky={kernelName:d.D2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Pr(0,r,o),p=Sy(n.bufferSync(r),n.bufferSync(a),o,d,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}};const Xy={kernelName:d.L8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=b.parseAxisParam(i,r.shape)[0],u=da(r,a,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const s=Km({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,s}))}},Yy=Hf((e=>Math.sqrt(e))),Zy=Ef(d.FK,(e=>Math.sqrt(e))),Jy={kernelName:d.FK,backendName:"cpu",kernelFunc:Zy},Qy={kernelName:d.bK,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;$f(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ew=Mf(((e,t)=>{const n=e-t;return n*n})),tw=sm(d._t,ew),nw={kernelName:d._t,backendName:"cpu",kernelFunc:tw},sw=Ef(d.h8,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),rw={kernelName:d.h8,backendName:"cpu",kernelFunc:sw};function aw(e,t,n,s){const r=ae(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r}const iw={kernelName:d.m2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;$f(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:w,strides:v}=Oe(r.shape,a,i,o,u,l,c,h,d);let k;if(m)k=lm({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||x){b.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=ke(y,w,v),t=Km({inputs:{x:r},backend:n,attrs:{begin:y,size:e}});k=lm({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=aw(p,n.bufferSync(r),v,y);k=n.makeTensorInfo(f,e.dtype,e.values)}return k}};class ow{constructor(e,t,n,s,r,a){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(r-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length;d+=(u+l+c-1)*this.separator.length,n[s+i]=new Uint8Array(d);const p=n[s+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=b.getArrayFromDType("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=r;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),a[e]=a[e-1]+s}const i=new Array(a[r]);for(let n=0;n<r;++n){const s=t[n];let r=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,a);this.createNGrams(e,s,i,r,u,a),r+=u})),this.preserveShort&&r===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,u=1;this.createNGrams(e,s,i,r,u,o)}}return[i,a]}}function uw(e,t,n,s,r,a,i,o){return new ow(n,s,r,a,i,o).compute(e,t)}const lw={kernelName:d._J,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=uw(d,p,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function cw(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);n&&0===t.length||s.push(t),r=a+1}}function hw(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let u=0;u<s;++u){const s=r.length;cw(e[u],t,n,r);const l=r.length-s;o[u]=l,a+=l,i=Math.max(i,l)}const u=b.getArrayFromDType("int32",2*a),l=new Array(a),c=[s,i];let h=0;for(let e=0;e<s;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=r[h],++h;return[u,l,c]}const dw={kernelName:d.s1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=hw(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function pw(e,t){const n=b.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=b.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}const fw={kernelName:d.Xk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=pw(n.data.get(a.dataId).values,r);return n.makeTensorInfo(a.shape,"int32",i)}},mw=Ef(d.sE,(e=>Math.tan(e))),gw={kernelName:d.sE,backendName:"cpu",kernelFunc:mw},bw=Ef(d.MI,(e=>Math.tanh(e))),xw={kernelName:d.MI,backendName:"cpu",kernelFunc:bw};function yw(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=ae(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}const ww={kernelName:d.n9,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;$f(r,"tile");const i=yw(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},vw=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function kw(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);kw(e,t,Math.max(n,Math.floor(t-a*o/r+u)),Math.min(s,Math.floor(t+(r-a)*o/r+u)))}const r=e[t];let a=n,i=s;for(b.swap(e,n,t),vw(e[s],r)>0&&b.swap(e,n,s);a<i;){for(b.swap(e,a,i),a++,i--;vw(e[a],r)<0;)a+=1;for(;vw(e[i],r)>0;)i-=1}0===vw(e[n],r)?b.swap(e,n,i):(i+=1,b.swap(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function Iw(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],u=b.getTypedArrayFromDType(n,i*s),l=b.getTypedArrayFromDType("int32",i*s);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(kw(i,s),i=i.slice(0,s)),r&&i.sort(vw);const c=t*s,h=u.subarray(c,c+s),d=l.subarray(c,c+s);for(let e=0;e<s;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[ae(c,n,u),ae(c,"int32",l)]}const Sw={kernelName:d.cW,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;$f(r,"topk");const o=n.data.get(r.dataId).values,[u,l]=Iw(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Nw={kernelName:d.wx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],x=b.computeStrides(r.shape),y=x[0],w=x[1],v=x[2],k=b.getTypedArrayFromDType(r.dtype,b.sizeFromShape(g));k.fill(u);const I=s.data.get(r.dataId).values,S=s.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?S:S.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<p;++r){let a;const l=t[6]*s+t[7]*n+1;if(0===l)continue;const c=(t[0]*s+t[1]*n+t[2])/l,p=(t[3]*s+t[4]*n+t[5])/l,f=$w(c,d,o),m=$w(p,h,o);switch(i){case"nearest":a=Tw(I,h,d,y,w,v,e,m,f,r,u);break;case"bilinear":a=Ew(I,h,d,y,w,v,e,m,f,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}k[e*y+n*w+s*v+r]=a}return s.makeTensorInfo(g,r.dtype,k)}return{dataId:s.write(k,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function $w(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return b.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return b.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return b.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Cw(e,t,n,s,r,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*s+o*r+u*a+l]:c}function Tw(e,t,n,s,r,a,i,o,u,l,c){return Cw(e,t,n,s,r,a,i,Math.round(o),Math.round(u),l,c)}function Ew(e,t,n,s,r,a,i,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*Cw(e,t,n,s,r,a,i,h,d,l,c)+(u-d)*Cw(e,t,n,s,r,a,i,h,f,l,c))+(o-h)*((f-u)*Cw(e,t,n,s,r,a,i,p,d,l,c)+(u-d)*Cw(e,t,n,s,r,a,i,p,f,l,c))}function Aw(e,t,n,s){const r=b.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[r]),u=new re.YD(a,s,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(u.get(n,t,s));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new re.YD(h,s);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)d.set(u.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const Rw={kernelName:d.kp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;$f(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=Aw(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}};const Fw={kernelName:d.To,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=Km({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[e]=lm({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}};const _w={kernelName:d.Qv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;$f(r,"unsortedSegmentSum");const o=[],u=[],l=r.shape.length-a.shape.length;let c=a;for(let e=0;e<l;++e){const t=sb({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=b.createScalarValue(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=Gg({inputs:{a:s,b:c},backend:n}),i=tm({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=Mg({inputs:{a:i,b:r},backend:n}),h=zg({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(s),u.push(a),u.push(i),u.push(l),u.push(h)}const h=ty({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Dw=[pm,mm,bm,ym,um,wm,Sm,Nm,$m,Cm,Em,Rm,_m,Bm,Lm,Wm,Um,Gm,Hm,dm,jm,Ym,Qm,eg,nm,sg,ag,Zf,ig,hg,pg,fg,mg,gg,bg,xg,wg,kg,Ig,Sg,Ng,$g,Tg,Eg,Ag,Rg,Fg,_g,Dg,Vg,Ff,Wg,Hg,Qg,nb,rb,ob,xb,wb,vb,Sb,Cb,Tb,Eb,Rb,_b,Bb,zb,Df,Pb,lg,Wb,Gb,jb,Bf,Xb,Jb,ex,sx,ax,ux,cx,px,fx,mx,xx,vx,kx,Ix,Sx,Nx,$x,Cx,Tx,Rx,Fx,Ox,zx,Lg,Vx,Ux,Hx,qx,Yx,Zx,ey,ny,sy,iy,Pf,uy,cy,em,cb,dy,Wf,Gf,cm,py,fy,my,gy,by,xy,wy,Iy,Ny,$y,Ay,Kf,Fy,Dy,By,Xm,Lx,zy,Py,Wy,Gy,jy,qy,Ky,Xy,Jy,Qy,nw,rw,iw,lw,dw,fw,fb,Pg,gw,xw,ww,Sw,Nw,Im,Rw,Fw,_w,Qx];for(const e of Dw)(0,Sr.wC)(e);const Ow={},Bw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Mw(e,t){if(!(e in Ow)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;if(n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete Ow[e]}),!1),1===e)return n.getContext("webgl",Bw)||n.getContext("experimental-webgl",Bw);return n.getContext("webgl2",Bw)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;Ow[e]=n}const n=Ow[e];return null==n||n.isContextLost()?(delete Ow[e],Mw(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Ow[e])}var Lw,zw,Pw;function Vw(e,t){return[t,e]}function Ww(e){const t=b.sizeFromShape(e),n=Math.ceil(t/4);return b.sizeToSquarishShape(n)}function Uw(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Gw(e,t){const n=e;let s,r,a,i,o,u,c,h,d,p;return 2===(0,l.OB)().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,c=4,h=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}function Hw(e,t){const n=t();return(0,l.OB)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Lw||(Lw={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(zw||(zw={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Pw||(Pw={}));function jw(e){return!!((0,l.OB)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function qw(e,t){return nv(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function Kw(e,t){const n=nv(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Hw(e,(()=>e.shaderSource(n,t))),Hw(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=Xw.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>b.rightPad((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,s-1),l=i.slice(s-1,s),c=i.slice(s);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${b.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Xw=/ERROR: [0-9]+:([0-9]+):/g;function Yw(e,t){if(Hw(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Zw(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(Hw(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),Hw(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),Hw(e,(()=>e.enableVertexAttribArray(o))),!0)}function Jw(e,t,n,s){Hw(e,(()=>function(e,t,n){sv(e,n),Hw(e,(()=>e.activeTexture(e.TEXTURE0+n))),Hw(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),Hw(e,(()=>e.uniform1i(n,s)))}function Qw(e,t,n){Hw(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),Hw(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function ev(e,t){Hw(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),Hw(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function tv(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function nv(e,t,n){const s=Hw(e,(()=>t()));if(null==s)throw new Error(n);return s}function sv(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function rv(e,t=2){return b.sizeFromShape(e.slice(0,e.length-t))}function av(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function iv(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[rv(e),...av(e)]),t}function ov(e){return e%2==0}function uv(e,t){if(e=e.slice(-2),t=t.slice(-2),b.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(ov(n)&&ov(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&ov(e[0])&&ov(t[0])}let lv,cv;function hv(e,t){return null!=e.getExtension(t)}function dv(e){try{if(null!=Mw(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function pv(e){if(0===e)return!1;const t=Mw(e);if(1!==e){if(hv(t,"EXT_color_buffer_float"))return fv(t);const e="EXT_color_buffer_half_float";if(hv(t,e)){const n=t.getExtension(e);return function(e,t){const n=Gw(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);const r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!hv(t,"OES_texture_float"))return!1;if(!hv(t,"WEBGL_color_buffer_float"))return!1;return fv(t)}function fv(e){const t=Gw(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function mv(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&b.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const gv=(0,l.OB)();function bv(){let e,t,n,s,r,a,i,o,u,c;return 2===(0,l.OB)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function xv(e,t,n="index"){const s=b.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function yv(e,t,n="index"){const s=b.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function wv(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${s[e+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${s[r]}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}function vv(e){const t=b.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}gv.registerFlag("HAS_WEBGL",(()=>gv.getNumber("WEBGL_VERSION")>0)),gv.registerFlag("WEBGL_VERSION",(()=>dv(2)?2:dv(1)?1:0)),gv.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),gv.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===gv.get("WEBGL_VERSION"))),gv.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),gv.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),gv.registerFlag("WEBGL_PACK",(()=>gv.getBool("HAS_WEBGL"))),gv.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>gv.getBool("WEBGL_PACK"))),gv.registerFlag("WEBGL_PACK_CLIP",(()=>gv.getBool("WEBGL_PACK"))),gv.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>gv.getBool("WEBGL_PACK"))),gv.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>gv.getBool("WEBGL_PACK"))),gv.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>gv.getBool("WEBGL_PACK"))),gv.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>gv.getBool("WEBGL_PACK"))),gv.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>gv.getBool("WEBGL_PACK"))),gv.registerFlag("WEBGL_PACK_REDUCE",(()=>gv.getBool("WEBGL_PACK"))),gv.registerFlag("WEBGL_LAZILY_UNPACK",(()=>gv.getBool("WEBGL_PACK"))),gv.registerFlag("WEBGL_CONV_IM2COL",(()=>gv.getBool("WEBGL_PACK"))),gv.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==lv){const t=Mw(e);lv=t.getParameter(t.MAX_TEXTURE_SIZE)}return lv}(gv.getNumber("WEBGL_VERSION")))),gv.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==cv){const t=Mw(e);cv=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,cv)}(gv.getNumber("WEBGL_VERSION")))),gv.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=gv.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Mw(e);return t=hv(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:hv(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),gv.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>gv.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!o())),gv.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Mw(e);if(1===e){if(!hv(t,"OES_texture_float"))return!1}else if(!hv(t,"EXT_color_buffer_float"))return!1;return fv(t)}(gv.getNumber("WEBGL_VERSION")))),gv.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!gv.getBool("WEBGL_FORCE_F16_TEXTURES")&&gv.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),gv.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>pv(gv.getNumber("WEBGL_VERSION")))),gv.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=gv.getNumber("WEBGL_VERSION"))&&null!=Mw(e).fenceSync;var e})),gv.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>gv.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),gv.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),gv.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>o()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),gv.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),gv.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),gv.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),gv.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const kv="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Iv}=s;function Sv(e,t,n){const s=[];if(e.forEach((e=>{const t=b.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=Ov(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),a=e.map((e=>function(e,t,n=!1,s){let r="";r+=n?$v(e,s):Nv(e,s);const a=e.shapeInfo.logicalShape,i=t.logicalShape;a.length<=i.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=Iv(e.shapeInfo.logicalShape,t.logicalShape),u=Dv(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===b.sizeFromShape(e.shapeInfo.logicalShape),m=1===b.sizeFromShape(t.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&b.arraysEqual(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=Dv(u),c=Iv(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");return`\n    float ${r}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=bv(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Cv}\n    ${Tv}\n    ${Ev}\n  `}(o);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return Rv();case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===s[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `;if(1===s[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(b.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return Rv();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(b.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${yv(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const s=xv(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${yv(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const s=xv(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=xv(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=xv(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=Av);return[h,u,c,r,l,a,n.userCode].join("\n")}function Nv(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Fv(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${_v(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Fv(n);if(1===i)return t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&b.arraysEqual(n,a)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=b.squeezeShape(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${Nv(Bv(e,u),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${Mv(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${_v(e)}\n      }\n    `;const l=a[0],c=a[1],h=Fv(s);if(1===c)return t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;if(1===l)return t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `;if(t)return`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=b.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${Nv(Bv(e,l),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Mv(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${_v(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=Fv(s);if(t)return`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * ${a} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=b.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Nv(Bv(e,u),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Mv(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${_v(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const x=Fv(s);if(t)return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${x});\n      return sampleTexture(${s}, uv);\n    }\n  `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=b.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Nv(Bv(e,u))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${Mv(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${_v(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Fv(n);return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=b.squeezeShape(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Nv(Bv(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${Mv(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${_v(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Fv(n);return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function $v(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=bv();return`\n    vec4 ${n}() {\n      return ${s.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=bv();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=bv();if(null!=a&&b.arraysEqual(n,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${u.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${s}, uv);\n    }\n  `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${$v(Bv(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Mv(a,s)});\n        }\n      `}const o=bv();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=bv();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Cv="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Tv="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ev="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Av="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Rv(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Fv(e){return`offset${e}`}function _v(e){const t=e.name,n=b.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Dv(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Ov(e,t,n){const{newShape:s,keptDims:r}=b.squeezeShape(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):s,u=!e&&a>1&&!b.arraysEqual(t,n)&&s.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:r}}function Bv(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Mv(e,t){return t.map((t=>e[t])).join(", ")}function Lv(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!b.arraysEqual(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!b.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function zv(e){return(0,l.OB)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class Pv{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Lw.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=bv();this.outputShape=e,this.enableShapeUniforms=zv(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?yv(["r","c","d"],e):xv(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Vv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Lw.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=bv();this.outputShape=e,this.enableShapeUniforms=zv(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?yv(["r","c","d"],e):xv(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Wv{constructor(e){this.variableNames=["A"],this.outTexUsage=zw.DOWNLOAD;const t=bv();this.outputShape=e,this.userCode=`\n      ${kv}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Uv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=zw.DOWNLOAD;const t=bv();this.outputShape=e,this.userCode=`\n      ${kv}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Gv{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=bv();this.outputShape=e,this.enableShapeUniforms=zv(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":vv(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class Hv{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=bv();this.outputShape=e,this.enableShapeUniforms=zv(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const a=2*t+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":vv(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function jv(e){const t=bv();return function(e,t){const n=nv(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Hw(e,(()=>e.shaderSource(n,t))),Hw(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function qv(e){return function(e,t){const n=nv(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Hw(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Hw(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Kv(e){return function(e,t){const n=nv(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Hw(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),Hw(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function Xv(e,t,n,s,r,a){!function(e,t){const n=(0,l.OB)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return nv(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return Hw(e,(()=>e.bindTexture(o,i))),Hw(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),Hw(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),Hw(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),Hw(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,l.OB)().getNumber("WEBGL_VERSION")?Hw(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))):Hw(e,(()=>e.texStorage2D(o,1,s,t,n))),Hw(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function Yv(e){return e.internalFormatFloat}function Zv(e){return e.internalFormatHalfFloat}function Jv(e){return e.downloadTextureFormat}function Qv(e){return e.internalFormatPackedFloat}function ek(e){return e.internalFormatPackedHalfFloat}function tk(e,t,n,s,r,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,s]=Uw(e,t);return n*s*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}class nk{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,l.OB)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){Ow[e]=t}(t,e)):this.gl=Mw(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===(0,l.OB)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=qw(this.gl,e),hv(this.gl,t))this.textureHalfFloatExtension=qw(this.gl,t);else if((0,l.OB)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),hv(this.gl,s))this.colorBufferHalfFloatExtension=qw(this.gl,s);else if((0,l.OB)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",hv(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!hv(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=qv(this.gl),this.indexBuffer=Kv(this.gl),this.framebuffer=function(e){return nv(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Gw(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,l.OB)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Hw(e,(()=>e.finish())),Hw(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),Hw(e,(()=>e.deleteFramebuffer(this.framebuffer))),Hw(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),Hw(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),Hw(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=Vw(t,n);return Xv(e,r,a,Yv(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=Vw(t,n);return Xv(e,r,a,Zv(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=Vw(t,n);return Xv(e,r,a,Jv(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Hw(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,l.OB)().getNumber("WEBGL_VERSION")?Hw(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):Hw(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,l.OB)().getNumber("WEBGL_VERSION")?Hw(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):Hw(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),Hw(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,u;Hw(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(r),2===(0,l.OB)().getNumber("WEBGL_VERSION")?Hw(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):Hw(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,o,i))),Hw(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=Uw(t,n);return Xv(e,r,a,ek(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=Uw(t,n);return Xv(e,r,a,Qv(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(ev(this.gl,this.framebuffer),this.outputTexture=null),Hw(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=Vw(t,n),i=new Uint8Array(t*n*4);return Hw(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return tk(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();Hw(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return Hw(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),Hw(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),Hw(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,l.OB)().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else(0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return Hw(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=jv(t));const n=function(e){return nv(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return Hw(t,(()=>t.attachShader(n,this.vertexShader))),Hw(t,(()=>t.attachShader(n,e))),function(e,t){if(Hw(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&Yw(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return Hw(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Zw(e,t,"clipSpacePos",n,3,20,0)&&Zw(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&Hw(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Yw(this.gl,this.program),Hw(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return nv(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Hw(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Jw(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=Uw(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Yw(this.gl,this.program),tv(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),Hw(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Hw(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=qw(this.gl,2===(0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||b.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Qw(this.gl,e,this.framebuffer),this.debug&&tv(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Qw(this.gl,this.outputTexture,this.framebuffer),this.debug&&tv(this.gl)):ev(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;Qw(s,e,this.framebuffer),this.debug&&tv(s),this.outputTexture=e,Hw(s,(()=>s.viewport(0,0,t,n))),Hw(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),Hw(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:sk,bincountImpl:rk,bincountReduceImpl:ak,ceilImpl:ik,concatImpl:ok,equalImpl:uk,expImpl:lk,expm1Impl:ck,floorImpl:hk,gatherNdImpl:dk,gatherV2Impl:pk,greaterImpl:fk,greaterEqualImpl:mk,lessImpl:gk,lessEqualImpl:bk,linSpaceImpl:xk,logImpl:yk,maxImpl:wk,maximumImpl:vk,minimumImpl:kk,multiplyImpl:Ik,negImpl:Sk,notEqualImpl:Nk,prodImpl:$k,rangeImpl:Ck,rsqrtImpl:Tk,sigmoidImpl:Ek,simpleAbsImpl:Ak,sliceImpl:Rk,sparseFillEmptyRowsImpl:Fk,sparseReshapeImpl:_k,sparseSegmentReductionImpl:Dk,sqrtImpl:Ok,stridedSliceImpl:Bk,stringNGramsImpl:Mk,stringSplitImpl:Lk,stringToHashBucketFastImpl:zk,subImpl:Pk,tileImpl:Vk,topKImpl:Wk,transposeImpl:Uk,uniqueImpl:Gk}=r;function Hk(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function jk(e,t){return 1===t?[e]:Hk(e,t)}class qk{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=zv(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=jk("rc",this.rank),t=Dv(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class Kk{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=zv(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?wv(["r","c","d"],"inputShape"):xv(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":vv(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Xk{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=Zk(t,n),r=Jk(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=Yk(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===Pw.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Pw.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Pw.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Pw.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Pw.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=Zk(n,s),a=Jk(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Yk(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=(0,l.OB)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Yk(e,t,n,s,r){const a=function(e,t){switch(e){case Pw.PACKED_2X2_FLOAT32:return Qv(t);case Pw.PACKED_2X2_FLOAT16:return ek(t);case Pw.UNPACKED_FLOAT32:return Yv(t);case Pw.UNPACKED_FLOAT16:return Zv(t);case Pw.PACKED_4X1_UNSIGNED_BYTE:return Jv(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=Uw(e[0],e[1]);i=t*n}else{const[t,n]=Vw(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function Zk(e,t){if(e===zw.UPLOAD)return Pw.PACKED_2X2_FLOAT32;if(e===zw.RENDER||null==e)return function(e){return(0,l.OB)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Pw.PACKED_2X2_FLOAT32:Pw.UNPACKED_FLOAT32:e?Pw.PACKED_2X2_FLOAT16:Pw.UNPACKED_FLOAT16}(t);if(e===zw.DOWNLOAD||e===zw.PIXELS)return Pw.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Jk(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Qk{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=zv(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const eI="return abs(x);";const tI="return x;";class nI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=zv(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class sI{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=zv(this.outputShape.length);const t=e.length,n=jk("rc",t),s=Dv(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const rI=Aa,aI={};const iI=(0,l.OB)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class oI extends Ra.Zu{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,l.OB)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof nk)t=e;else{const n=Mw((0,l.OB)().getNumber("WEBGL_VERSION"),e);t=new nk(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Mw((0,l.OB)().getNumber("WEBGL_VERSION"));t=new nk(e),this.binaryCache=((n=(0,l.OB)().getNumber("WEBGL_VERSION"))in aI||(aI[n]={}),aI[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Xk(this.gpgpu),this.numMBBeforeWarning=null==(0,l.OB)().global.screen?1024:(0,l.OB)().global.screen.height*(0,l.OB)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Ra.JL(this,Ve())}nextDataId(){return oI.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,l.OB)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,l.OB)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:zw.UPLOAD,refCount:1}),s}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,s,r){if((0,l.OB)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:zw.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new nI(i,tI):new Qk(i,tI);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=b.now()),"complex64"===s){c=Yr(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=b.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new nI(s,tI):new Qk(s,tI);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,l.OB)().getBool("DEBUG")&&!(0,l.OB)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,l.OB)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,h=null;if("complex64"!==a&&(0,l.OB)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);h=this.gpgpu.createBufferFromTexture(t.texture.texture,...Ww(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);c=Yr(e[0],e[1])}else if(null==h)c=this.getValuesFromTexture(e);else{const e=b.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=h){const e=this.gpgpu.gl;Hw(e,(()=>e.deleteBuffer(h)))}const d=this.convertAndCacheOnCPU(e,c),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ve().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new nI(r,tI):new Qk(r,tI);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),a=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),a}if(null==u)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Ve().makeTensorFromDataId(l.dataId,l.shape,l.dtype),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>b.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ae(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!jw(n)){if((0,l.OB)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=b.sizeFromShape(t);if((0,l.OB)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...Ww(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=(0,l.OB)().getBool("WEBGL_PACK")&&!0===s,i=a?iv(t):t,o=a?new Uv(i):new Wv(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return(0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=b.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=b.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=b.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(e){return(0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=b.now(),e)}async getQueryTime(e){if((0,l.OB)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=iI){return(0,l.OB)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&b.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Xr.Z("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return rI(e.shape,t)}packedUnaryOp(e,t,n){const s=new nI(e.shape,t),r=this.compileAndRun(s,[e],n);return Ve().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Ak(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,l.OB)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,eI,e.dtype);const t=new Qk(e.shape,eI),n=this.compileAndRun(t,[e]);return Ve().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&b.isString(n[0])){const r=n.map((e=>b.encodeString(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:s}=this.makeTensorInfo(e,t,n);return Ve().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){const t=new sI(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new qk(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[rv(e.shape),...av(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[rv(t),...av(t)],a=new Kk(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(null!=t){const e=b.sizeFromShape(r),n=t[0]*t[1]*4;b.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=iv(r);let o;o=s?new Vv(i):new Pv(i);const u=[null!=t?t:Ww(i)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,s,r=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Lw.DENSE){const t=null!=a?a:Ww(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===b.sizeFromShape(i.shape))return o.values=b.getTypedArrayFromDType(i.dtype,0),i;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&b.sizeFromShape(t.shape)<=(0,l.OB)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!uv(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),u.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=Ov(e.packedInputs,t.shape,a);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=b.computeStrides(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&b.arraysEqual(t.shape,a),f=1===b.sizeFromShape(t.shape),m=be(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&b.arraysEqual(a,n.texData.texShape),x=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${d}_${g}_${i?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${h}_${x}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r+`${(0,l.OB)().getNumber("WEBGL_VERSION")}`,a}(e,c,h),p=this.getAndSaveBinary(d,(()=>function(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),a=r.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=Sv(r,i,t),u=Kw(e.gl,o),c=e.createProgram(u);let h=null;const d=e.getUniformLocation(c,"NAN",!1);1===(0,l.OB)().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(c,"INFINITY",!1));const p=!1,f={},m={},g={};for(let n=0;n<t.variableNames.length;n++){const s=t.variableNames[n];f[s]=e.getUniformLocation(c,s,p),f[`offset${s}`]=e.getUniformLocation(c,`offset${s}`,p),t.enableShapeUniforms&&(m[`${s}Shape`]=e.getUniformLocation(c,`${s}Shape`,p),g[`${s}TexShape`]=e.getUniformLocation(c,`${s}TexShape`,p))}let b,x,y;t.enableShapeUniforms&&(b=e.getUniformLocation(c,"outShape",p),y=e.getUniformLocation(c,"outShapeStrides",p),x=e.getUniformLocation(c,"outTexShape",p));const w=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{w[n]=e.getUniformLocation(c,t.name,p)})),{program:t,fragmentShader:u,source:o,webGLProgram:c,uniformLocations:f,customUniformLocations:w,inShapeInfos:a,outShapeInfo:i,infLoc:h,nanLoc:d,inShapesLocations:m,inTexShapesLocations:g,outShapeLocation:b,outShapeStridesLocation:y,outTexShapeLocation:x}}(this.gpgpu,e,c,h))),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),function(e,t,n,s,r){t.program.enableShapeUniforms||(Lv(t.inShapeInfos,n),Lv([t.outShapeInfo],[s]));const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===(0,l.OB)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],a=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],u=t.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:s}=Ov(t.program.packedInputs,n.shape,n.texData.texShape);switch(s.length){case 1:e.gl.uniform1iv(o,new Int32Array(s));break;case 2:e.gl.uniform2iv(o,new Int32Array(s));break;case 3:e.gl.uniform3iv(o,new Int32Array(s));break;case 4:e.gl.uniform4iv(o,new Int32Array(s))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(b.sizeFromShape(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,s)}));const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=b.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,s)=>{const a=t.customUniformLocations[s],i=r[s];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,p,c,h,s),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=(0,l.OB)().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=b.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,l.OB)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,l.OB)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ue((()=>{if(!(0,l.OB)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,l.OB)().getBool("DEBUG");(0,l.OB)().set("DEBUG",!1);const t=this.abs(Ke(1e-8)).dataSync()[0];if((0,l.OB)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const u=null!=this.activeTimers;let c;u&&(c=b.now());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=(0,l.OB)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?b.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=b.squeezeShape(e);e=t.newShape}let s=b.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=rv(e);let n=2,r=2;return e.length&&([n,r]=av(e)),s=t*(n/2)*(r/2),b.sizeToSquarishShape(s).map((e=>2*e))}return b.sizeToSquarishShape(s)}(n,o),t.texShape=h),null!=r){const e=iv(n);let a,i=h[1],l=h[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([i,l]=Uw(h[0],h[1])),a=o?new Hv(e,d):new Gv(e,d);const p=d?[l,i]:h,f=this.makeTensorInfo(p,s),m=this.texData.get(f.dataId);m.usage=d?zw.PIXELS:zw.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,l,r);const g=[[l,i]],x=!0,y=this.runWebGLProgram(a,[f],s,g,x),w=this.texData.get(y.dataId);t.texture=w.texture,t.texShape=w.texShape,t.isPacked=w.isPacked,t.usage=w.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(y.dataId),t.values=null,u&&(this.uploadWaitMs+=b.now()-c)}else{const e=this.acquireTexture(h,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*b.bytesPerElement(t)}}oI.nextDataId=0;u()&&je("webgl",(()=>new oI),2);class uI{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ye(t,n),this.enableShapeUniforms=zv(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class lI{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ye(t,n);const r=this.outputShape.length;this.enableShapeUniforms=zv(r);let a="";if(s)if(0===r||1===b.sizeFromShape(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${Dv(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=jk("coords",r);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function cI(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const hI={kernelName:d.iJ,backendName:"webgl",kernelFunc:cI};function dI(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=cI({inputs:{x:s},backend:n}),u=cI({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const pI={kernelName:d.Zz,backendName:"webgl",kernelFunc:dI},fI="return (a < 0.) ? b * a : a;",mI="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const gI={kernelName:d.J$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",b.createScalarValue(a,"float32")),o=(0,l.OB)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lI(mI,r.shape,i.shape):new uI(fI,r.shape,i.shape),u=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},bI="return (a < 0.) ? b * a : a;",xI="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const yI={kernelName:d.o0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=(0,l.OB)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lI(xI,s.shape,r.shape):new uI(bI,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}};function wI({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,u=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let c;return c=(0,l.OB)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new nI(i.shape,t):new Qk(i.shape,e),o.runWebGLProgram(c,[i],u)}}function vI({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:c}=i,h=o;if(s&&"complex64"===u.dtype){const t=h.texData.get(u.dataId),n=h.texData.get(c.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:s.dataId,dtype:s.dtype,shape:c.shape},i=new uI(e,u.shape,c.shape);return h.runWebGLProgram(i,[r,a],(0,Ye.x8)(n.dtype,s.dtype))})),a=dI({inputs:{real:s,imag:r},backend:h});return h.disposeIntermediateTensorInfo(s),h.disposeIntermediateTensorInfo(r),a}const d=a||(0,Ye.x8)(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||h.shouldExecuteOnCPU([u,c]))&&null!=r){const e=h.texData.get(u.dataId).values,t=h.texData.get(c.dataId).values,n="string"===u.dtype?Ta(e):e,s="string"===u.dtype?Ta(t):t,[a,i]=r(u.shape,c.shape,n,s,d),o=h.makeTensorInfo(i,d);return h.texData.get(o.dataId).values=a,o}let p;return p=(0,l.OB)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new lI(t,u.shape,c.shape,n):new uI(e,u.shape,c.shape),h.runWebGLProgram(p,[u,c],d)}}function kI(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?xI:bI;if("leakyrelu"===e)return t?mI:fI;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class II{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=zv(this.outputShape.length);const l=s?e[1]:e[2],c=Math.ceil(l/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${x};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const SI="return areal * breal - aimag * bimag;",NI="return areal * bimag + aimag * breal;";class $I{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ye(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const CI="return a * b;";function TI(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=Ye.x8(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new $I(SI,s.shape,r.shape),i=new $I(NI,s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=dI({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=Ik(s.shape,r.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=(0,l.OB)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lI(CI,s.shape,r.shape):new uI(CI,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const EI={kernelName:d.wY,backendName:"webgl",kernelFunc:TI};function AI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=b.sizeFromShape(r.shape),u=b.inferFromImplicitShape(a,o),l=b.sizeFromShape(u);b.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||uv(r.shape,u)||null!==c.texture&&uv(c.shape,u)?(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype}):function(e,t,n){const s=[rv(e.shape),...av(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[rv(t),...av(t)],i=new Kk(a,s),o=[s],u=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(r,u,i)}const RI={kernelName:d.HZ,backendName:"webgl",kernelFunc:AI};class FI{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${b.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";r%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class _I{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function DI(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=Ar(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:u,outSize:l}=r[i];let c,h;c="mean"===n?0===i?new FI({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new FI({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new _I({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class OI{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=Dv(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class BI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=Dv(this.rank),r=Hk("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function MI(e,t,n){const s=(0,l.OB)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new BI(e.shape,t):new OI(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function LI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=b.parseAxisParam(r,e.shape);let o=i;const u=bn(o,a),l=null!=u;let c=e;l&&(c=MI(e,u,s),o=yn(o.length,a)),gn("sum",o,a);const[h,d]=fn(c.shape,o);let p=h;n&&(p=mn(h,i));const f=b.sizeFromShape(d),m=AI({inputs:{x:c},attrs:{shape:[b.sizeFromShape(e.shape)/f,f]},backend:s}),g=DI(m,(0,Ye.z4)(e.dtype),"sum",s),x=AI({inputs:{x:g},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),l&&s.disposeIntermediateTensorInfo(c),x}(r,a,i,n)}const zI={kernelName:d.GB,backendName:"webgl",kernelFunc:LI};function PI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=r.shape[a[e]];let l;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=Uk(e,r.shape,r.dtype,a,u);l=i.makeTensorInfo(u,r.dtype);i.texData.get(l.dataId).values=t}else l=MI(r,a,i);return l}const VI={kernelName:d.G3,backendName:"webgl",kernelFunc:PI};function WI({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),x=b.sizeFromShape(m),y=b.sizeFromShape(g),w=ye(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);b.assert(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=n?[x,h,p]:[x,p,h],k=s?[y,f,d]:[y,d,f],I=AI({inputs:{x:e},backend:r,attrs:{shape:v}}),S=AI({inputs:{x:t},backend:r,attrs:{shape:k}}),N=[I,S],$=Math.max(x,y),C=n?I.shape[1]:I.shape[2],T=null!=a,E=null!=i,A="leakyrelu"===u,R=null!=u?kI(u,!0):null;let F;if((1===p||1===f)&&C>1e3&&!1===(T||E||A||null!=R)){let e=I,t=S;n&&(e=PI({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),N.push(e)),s&&(t=PI({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),N.push(t));const a=1===f;let i=e;1!==f&&(i=AI({inputs:{x:e},backend:r,attrs:{shape:[$,C,1]}}),N.push(i));const o=1===f?2:1;let u=t;a&&(u=AI({inputs:{x:t},backend:r,attrs:{shape:[$,1,C]}}),N.push(u));const l=TI({inputs:{a:i,b:u},backend:r});F=LI({inputs:{x:l},backend:r,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const u=(0,Ye.x8)(e.dtype,t.dtype),l=new II(v,k,[$,p,f],n,s,T,R,E,A),c=[I,S];if(null!=a&&c.push(a),E&&c.push(i),A){const e=r.makeTensorInfo([],"float32",b.createScalarValue(o,"float32"));c.push(e),N.push(e)}F=r.runWebGLProgram(l,c,u)}const _=AI({inputs:{x:F},backend:r,attrs:{shape:w}});N.push(F);for(const e of N)r.disposeIntermediateTensorInfo(e);return _}const UI={kernelName:d.us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;return WI({a:r,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},GI="return abs(x);";const HI={kernelName:d.SY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=Ak(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=(0,l.OB)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new nI(s.shape,GI):new Qk(s.shape,GI),n.runWebGLProgram(r,[s],s.dtype)}},jI=wI({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),qI={kernelName:d.VG,backendName:"webgl",kernelFunc:jI},KI=wI({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),XI={kernelName:d.Sp,backendName:"webgl",kernelFunc:KI},YI="return a + b;",ZI=vI({opSnippet:YI,packedOpSnippet:YI,supportsComplex:!0,cpuKernelImpl:sk}),JI={kernelName:d.mm,backendName:"webgl",kernelFunc:ZI};class QI{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class eS{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const tS={kernelName:d.Xz,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return cI({inputs:{x:r[0]},backend:s});if(r.length>(0,l.OB)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>(0,Ye.x8)(e,t))),i=r.map((e=>e.shape)),o=(0,l.OB)().getBool("WEBGL_PACK")?new eS(r[0].shape,i):new QI(r[0].shape,i);return s.runWebGLProgram(o,r,a)}};const nS={kernelName:d.oT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=b.parseAxisParam(a,r.shape);let l=u;const c=bn(l,o);let h=r;null!=c&&(h=PI({inputs:{x:r},backend:n,attrs:{perm:c}}),l=yn(l.length,o)),gn("all",l,o);const[d,p]=fn(h.shape,l),f=AI({inputs:{x:h},backend:n,attrs:{shape:[-1,b.sizeFromShape(p)]}}),m=DI(f,f.dtype,"all",n);let g;if(i){g=AI({inputs:{x:m},backend:n,attrs:{shape:mn(d,u)}})}else g=AI({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};const sS={kernelName:d.IK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=b.parseAxisParam(a,r.shape);let l=u;const c=bn(l,o);let h=r;null!=c&&(h=PI({inputs:{x:r},backend:n,attrs:{perm:c}}),l=yn(l.length,o)),gn("any",l,o);const[d,p]=fn(h.shape,l),f=AI({inputs:{x:h},backend:n,attrs:{shape:[-1,b.sizeFromShape(p)]}}),m=DI(f,f.dtype,"any",n);let g;if(i){g=AI({inputs:{x:m},backend:n,attrs:{shape:mn(d,u)}})}else g=AI({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class rS{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class aS{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,b.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=Dv(o),l=jk("coords",o);let c,h;if(1===a){h=o+1;const e=Dv(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=jk("sourceLocR",h-1).concat("inIdx.r"),g=jk("sourceLocG",h-1).concat("inIdx.g"),x=jk("sourceLocB",h-1).concat("inIdx.b"),y=jk("sourceLocA",h-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function iS(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=Ar(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},u=new rS(o,n,null==s),l=[t];null!=s&&l.push(s);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=iS(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function oS(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=Ar(r[r.length-1]),i=new aS(r,a,n,null==s),o=null==s?[t]:[t,s],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const s=oS(e,t,n,u);return e.disposeIntermediateTensorInfo(u),s}return u}function uS(e,t,n,s){const r=[n];if(gn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!(0,l.OB)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=fn(i.shape,r),l=b.sizeFromShape(u),c=AI({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=iS(e,c,s);n.push(h);const d=AI({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return oS(e,t,s)}const lS={kernelName:d.sJ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=b.parseAxisParam(a,r.shape);const o=bn(i,r.shape.length);let u=r;const l=[];null!=o&&(u=PI({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=yn(i.length,u.shape.length)),gn("argMax",[i[0]],u.shape.length);const c=uS(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const cS={kernelName:d.aJ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=b.parseAxisParam(a,r.shape);const o=bn(i,r.shape.length);let u=r;const l=[];null!=o&&(u=PI({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=yn(i.length,u.shape.length)),gn("argMin",[i[0]],u.shape.length);const c=uS(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},hS=wI({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),dS={kernelName:d.M2,backendName:"webgl",kernelFunc:hS},pS=wI({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),fS={kernelName:d.qw,backendName:"webgl",kernelFunc:pS},mS=wI({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),gS={kernelName:d.jM,backendName:"webgl",kernelFunc:mS},bS=vI({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),xS={kernelName:d.QC,backendName:"webgl",kernelFunc:bS},yS=wI({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),wS={kernelName:d.Oy,backendName:"webgl",kernelFunc:yS};class vS{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const y=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class kS{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const IS={kernelName:d.Jh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;mv(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s;b.assert(pt(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=st(r.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&b.arraysEqual(l.inShape,l.outShape))return cI({inputs:{x:r},backend:n});const c=new vS(l,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}};const SS={kernelName:d._k,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s,c=rt(r.shape,a,i,[1,1,1],o,u,l),h=new kS(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class NS{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $S{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const CS={kernelName:d.IM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s,h=rt(i.shape,o,u,[1,1,1],l,c),d=new $S(h);return n.runWebGLProgram(d,[r],i.dtype)}};const TS={kernelName:d.RO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;mv([r,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=s,c=st(i.shape,o,u,1,l),h=new NS(c);return n.runWebGLProgram(h,[r],i.dtype)}};const ES={kernelName:d.XL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return WI({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class AS{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ye(e,t),ye(e,n);let i="0.0";null!=s&&(ye(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(ye(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class RS{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ye(e,t),ye(e,n);let i="vec4(0.0)";null!=s&&(ye(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(ye(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const FS={kernelName:d.sH,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=e;b.assert(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),b.assert(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),b.assert(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[s,r,a];let h=null;null!=i&&(h=i.shape,c.push(i));let d=null;null!=o&&(d=o.shape,c.push(o));const p=(0,l.OB)().getBool("WEBGL_PACK_NORMALIZATION")?new RS(s.shape,r.shape,a.shape,h,d,u):new AS(s.shape,r.shape,a.shape,h,d,u);return t.runWebGLProgram(p,c,c[0].dtype)}};class _S{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Dv(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return DS.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${DS[t]} = start[${t}] + coords.${DS[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const DS=["x","y","z","w","u","v"];class OS{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Dv(this.rank),n=jk("coords",this.rank),s=jk("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function BS(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,u]=De(r,a,i);if(we(r,o,u),0===b.sizeFromShape(u))return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=Rk(e.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,t)}const{isPacked:c}=n.texData.get(r.dataId),h=Fe(r.shape,o,u);if(c||!h){const e=(0,l.OB)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new OS(u):new _S(u),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=_e(t,b.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),a}(r,o,u,n)}const MS={kernelName:d.p2,backendName:"webgl",kernelFunc:BS},LS={kernelName:d.zw,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;b.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=Fr(r.shape,a,o),l=_r(u.length,a.length),c=Dr(r.shape,a,o),h=Or(i,a.length),d=Br(c,i,a.length),p=[],f=AI({inputs:{x:r},backend:n,attrs:{shape:u}}),m=PI({inputs:{x:f},backend:n,attrs:{perm:l}}),g=AI({inputs:{x:m},backend:n,attrs:{shape:c}}),x=BS({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};const zS={kernelName:d.zv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=rk(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}};const PS={kernelName:d.eE,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=ye(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},VS=vI({opSnippet:"return float(a != b);",cpuKernelImpl:Nk,dtype:"bool"}),WS={kernelName:d.yQ,backendName:"webgl",kernelFunc:VS};function US(e){const{inputs:t,backend:n}=e,{input:s}=t;return cI({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const GS={kernelName:d.xJ,backendName:"webgl",kernelFunc:US};const HS={kernelName:d.RF,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return cI({inputs:{x:a},backend:s});const t=Nn(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=dI({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=US({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!b.hasEncodingLoss(a.dtype,i)){const e=cI({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new Qk(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),t=VS({inputs:{a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},jS="return ceil(x);",qS=wI({opSnippet:jS,packedOpSnippet:jS,cpuKernelImpl:ik}),KS={kernelName:d.gJ,backendName:"webgl",kernelFunc:qS};class XS{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class YS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const ZS={kernelName:d.xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=(0,l.OB)().getBool("WEBGL_PACK_CLIP")?new YS(r.shape):new XS(r.shape);const u=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,u)}};class JS{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function QS(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const eN={kernelName:d.yj,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new JS(s.shape),i=[QS(s,r.complexTensorInfos.real),QS(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class tN{constructor(e){this.outputShape=[],this.outputShape=Tr(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class nN{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Tr(e,t);const n=this.outputShape,s=n.length,r=Dv(s),a=jk("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${sN(i,u,t)}),\n            vec2(${sN(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${sN(i,u,p)}),\n          vec2(${sN(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function sN(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function rN(e){const{inputs:t,backend:n}=e,{input:s}=t;return cI({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const aN={kernelName:d.J_,backendName:"webgl",kernelFunc:rN};function iN(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>US({inputs:{input:e},backend:n}))),r=e.map((e=>rN({inputs:{input:e},backend:n}))),a=iN(s,t,n),i=iN(r,t,n),o=dI({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=b.sizeFromShape(e.shape.slice(t));return AI({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),a=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Tr(r.map((e=>e.shape)),1),o=1===r[0].shape[0],u=ok(a,i,s,o),l=Tr(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,s,u);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>(0,l.OB)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(e.length/2),r=iN(e.slice(0,s),t,n),a=iN(e.slice(s),t,n),i=iN([r,a],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if((0,l.OB)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new nN(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,s)}const{tensors2D:a,outShape:i}=function(e,t,n){const s=Tr(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>AI({inputs:{x:e},attrs:{shape:[-1,b.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:s}}(e,t,n),o=new tN(a.map((e=>e.shape))),u=n.runWebGLProgram(o,a,s);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=AI({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),c}function oN(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=b.parseAxisParam(r,t[0].shape)[0],i=Tr(t.map((e=>e.shape)),a);if(0===b.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>b.sizeFromShape(e.shape)>0));if(1===o.length)return cI({inputs:{x:o[0]},backend:n});return Cr(o.map((e=>e.shape)),a),iN(o,a,n)}const uN={kernelName:d.Eh,backendName:"webgl",kernelFunc:oN};class lN{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,x=m?3:1;let y="",w="";n&&(y=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class cN{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=zv(this.outputShape.length);const{dataFormat:n}=t,s=bv(),r="channelsLast"===n,a=r?0:1,i=r?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${s.output} = result;\n      }\n    `}}function dN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=s.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if(!((1===h||1===d)&&c>1e3)&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&b.arraysEqual(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,b.assert(uv(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const p=AI({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=WI({a:h,b:p,backend:s,transposeA:false,transposeB:false,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),x=s.texData.get(g.dataId);b.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,x.shape=n.outShape,f=cI({inputs:{x:g},backend:s}),f.shape=n.outShape,m.push(g)}else{const l=AI({inputs:{x:e},backend:s,attrs:{shape:[1,p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=AI({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=WI({a:l,b:c,transposeA:false,transposeB:false,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=AI({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)s.disposeIntermediateTensorInfo(e);return f}function pN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,x=[m,g],y=[],w=AI({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),v=AI({inputs:{x:t},backend:s,attrs:{shape:[1,m,b.sizeFromShape(t.shape)/m]}});y.push(w),y.push(v);const k=new hN(x,n),I=[w.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=s.runWebGLProgram(k,[w],"float32",I),N=AI({inputs:{x:S},backend:s,attrs:{shape:[1,x[0],x[1]]}});y.push(S),y.push(N);const $=null!=r,C=null!=a,T="leakyrelu"===o,E=o?kI(o,!0):null,A=new II(N.shape,v.shape,[1,g,n.outChannels],!0,!1,$,E,C,T),R=[N,v];if(r&&R.push(r),C&&R.push(a),T){const e=s.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));R.push(e),y.push(e)}const F=s.runWebGLProgram(A,R,"float32"),_=AI({inputs:{x:F},backend:s,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});y.push(F);for(const e of y)s.disposeIntermediateTensorInfo(e);return _}const fN={kernelName:d.mh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:h}=s,d=ft(u),p=at(r.shape,a.shape,i,c,o,h,!1,d);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if((0,l.OB)().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])f=pN({x:r,filter:a,convInfo:p,backend:n});else{const e=new lN(p);f=n.runWebGLProgram(e,[r,a],"float32")}else f=dN({x:r,filter:a,convInfo:p,backend:n});const m=AI({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class mN{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gN{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bN{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xN{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const yN={kernelName:d.wU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=s,h=ft(u),d=at(r.shape,c,i,1,o,l,!1,h),p=new mN(d);return n.runWebGLProgram(p,[r,a],"float32")}};const wN={kernelName:d.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,h=ft(l),d=at(i,a.shape,o,1,u,c,!1,h),p=new gN(d);return n.runWebGLProgram(p,[r,a],"float32")}};const vN={kernelName:d.x1,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,l=it(r.shape,a.shape,i,u,o),c=new cN(l);return n.runWebGLProgram(c,[r,a],"float32")}};const kN={kernelName:d.o2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s,l=it(r.shape,u,i,1,o),c=new bN(l);return n.runWebGLProgram(c,[r,a],"float32")}};const IN={kernelName:d.ik,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s,l=it(u,a.shape,o,1,i),c=new xN(l);return n.runWebGLProgram(c,[r,a],"float32")}},SN=wI({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),NN={kernelName:d.mc,backendName:"webgl",kernelFunc:SN},$N=wI({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),CN={kernelName:d.TR,backendName:"webgl",kernelFunc:$N};class TN{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===s?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const EN={kernelName:d.Vc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,c=new TN(r.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[r,a,i],"float32")}};class AN{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const s=e.length,r=t?"0.0":`getX(${RN(s,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Dv(s)} coords = getOutputCoords();\n        int end = ${FN(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${FN(s,"coords")} = idx;\n          val += getX(${RN(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function RN(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function FN(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const _N={kernelName:d.iH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,u=r.shape.length,l=bn([a],u);let c=r;null!=l&&(c=PI({inputs:{x:r},backend:n,attrs:{perm:l}}));const h=yn(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);const d=c.shape[h];let p=cI({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new AN(c.shape,!1,o),s=[[e]],r=p;p=n.runWebGLProgram(t,[p],p.dtype,s),n.disposeIntermediateTensorInfo(r)}if(i){const e=new AN(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=PI({inputs:{x:p},backend:n,attrs:{perm:xn(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}};const DN={kernelName:d.QR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=rk(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=ak(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class ON{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const BN={kernelName:d.T0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=("NHWC"===i?r.shape[1]:r.shape[2])*a,l=("NHWC"===i?r.shape[2]:r.shape[3])*a,c=("NHWC"===i?r.shape[3]:r.shape[1])/(a*a),h=new ON("NHWC"===i?[o,u,l,c]:[o,c,u,l],a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class MN{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=zv(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class LN{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=zv(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?b.nearestLargerEven(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const zN={kernelName:d.ci,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=s;let h=u;null==h&&(h=[1,1]),b.assert(pt(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const d=at(r.shape,a.shape,i,h,o,c,!0);let p;p=(0,l.OB)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new LN(d):new MN(d);const f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",f)}};class PN{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class VN{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const WN={kernelName:d.sL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=s,h=at(r.shape,c,i,o,u,l,!0),d=new PN(h);return n.runWebGLProgram(d,[r,a],"float32")}};const UN={kernelName:d.y7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=s,h=at(c,a.shape,i,o,u,l,!0),d=new VN(h);return n.runWebGLProgram(d,[r,a],"float32")}};class GN{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const HN={kernelName:d.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=b.sizeFromShape(s.shape),i=AI({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new GN(a),u=n.runWebGLProgram(o,[i],i.dtype),l=AI({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class jN{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const qN={kernelName:d.p4,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,l=nt(r.shape,a.shape,i,o,"NHWC",u);let c;const h=new jN(l);c=n.runWebGLProgram(h,[r,a],"float32");const d=AI({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}};const KN={kernelName:d.$g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=ia(r,a.length);ua(i.length,u,a);const{path:l,steps:c}=la(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=oa(p,u[t]);let r;ca(e)?r=a[t]:(r=PI({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);b.arraysEqual(r.shape,i)||(r=AI({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=TI({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=LI({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},XN=wI({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),YN={kernelName:d.SX,backendName:"webgl",kernelFunc:XN},ZN={kernelName:d.HE,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=(0,l.OB)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lI("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new uI("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},JN=vI({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:uk}),QN={kernelName:d.hd,backendName:"webgl",kernelFunc:JN},e$=wI({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Ur};\n  float a1 = ${Gr};\n  float a2 = ${Hr};\n  float a3 = ${jr};\n  float a4 = ${qr};\n  float a5 = ${Kr};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),t$={kernelName:d.Om,backendName:"webgl",kernelFunc:e$},n$=wI({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:lk,dtype:"float32"}),s$={kernelName:d.NE,backendName:"webgl",kernelFunc:n$};function r$(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=r;return r<0&&(b.assert(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+r+1),o.splice(u,0,1),AI({inputs:{x:a},backend:s,attrs:{shape:o}})}const a$={kernelName:d.YF,backendName:"webgl",kernelFunc:r$},i$="return exp(x) - 1.0;",o$=wI({opSnippet:i$,packedOpSnippet:i$,cpuKernelImpl:ck}),u$={kernelName:d.Y0,backendName:"webgl",kernelFunc:o$};class l${constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function c$(e,t,n){const s=n.texData.get(e.dataId),r=b.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],i=AI({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,u=new l$("real",o,t),l=new l$("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=dI({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=AI({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const h$={kernelName:d.vw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return c$(s,!1,n)}};class d${constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function p$(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||b.inferDtype(r),"string"===a){const e=b.getArrayFromDType(a,b.sizeFromShape(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new d$(s,r),n=[[r]];return t.runWebGLProgram(e,[],a,n)}}const f$={kernelName:d.de,backendName:"webgl",kernelFunc:p$};class m${constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const g$={kernelName:d.Uy,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new m$(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},b$="return floor(x);",x$=wI({opSnippet:b$,packedOpSnippet:b$,cpuKernelImpl:hk}),y$={kernelName:d.OR,backendName:"webgl",kernelFunc:x$},w$=vI({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),v$={kernelName:d.je,backendName:"webgl",kernelFunc:w$};class k${constructor(e){this.variableNames=["A"];const t=bv(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class I${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=bv(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const S$={kernelName:d.eB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[u,c]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[c,u],d=[c,u,a];(o||i)&&(null==N$&&(N$=document.createElement("canvas").getContext("2d")),N$.canvas.width=u,N$.canvas.height=c,N$.drawImage(r,0,0,u,c),r=N$.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=zw.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const f=(0,l.OB)().getBool("WEBGL_PACK")?new I$(d):new k$(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let N$;const $$={kernelName:d._V,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=s,g=ft(h),x=at(r.shape,a.shape,u,d,c,p,!1,g);let y;const w=[];if(1!==x.filterHeight||1!==x.filterWidth||1!==x.dilationHeight||1!==x.dilationWidth||1!==x.strideHeight||1!==x.strideWidth||"SAME"!==x.padInfo.type&&"VALID"!==x.padInfo.type)if((0,l.OB)().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=pN({x:r,filter:a,convInfo:x,backend:n,bias:i,activation:f,preluActivationWeights:o,leakyreluAlpha:m});else{const e=null!=i,t=null!=o,s="leakyrelu"===f,u=f?kI(f,!1):null,l=new lN(x,e,u,t,s),c=[r,a];if(i&&c.push(i),o&&c.push(o),s){const e=n.makeTensorInfo([],"float32",b.createScalarValue(m,"float32"));c.push(e),w.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=dN({x:r,filter:a,convInfo:x,backend:n,bias:i,activation:f,preluActivationWeights:o,leakyreluAlpha:m});const v=AI({inputs:{x:y},backend:n,attrs:{shape:x.outShape}});return w.push(y),w.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}};const C$={kernelName:d.lu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=[];let g=h;null==g&&(g=[1,1]),b.assert(pt(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const x=at(r.shape,a.shape,u,g,c,d,!0),y=(0,l.OB)().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels==1,w=p?kI(p,y):null,v=[r,a],k=null!=i,I=null!=o,S="leakyrelu"===p;if(k&&v.push(i),I&&v.push(o),S){const e=n.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));v.push(e),m.push(e)}let N;N=y?new LN(x,k,w,I,S):new MN(x,k,w,I,S);const $=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],C=n.runWebGLProgram(N,v,"float32",$);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};class T${constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const s=Dv(t.length),r=Dv(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const E$={kernelName:d.q1,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=b.sizeFromShape(s.shape),[u,l,c,h]=Mr(s,r),d=AI({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),p=AI({inputs:{x:s},backend:n,attrs:{shape:[b.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),a=dk(e,t,s.dtype,l,i,c,h,s.shape,o);return n.makeTensorInfo(u,s.dtype,a.values)}const f=new T$(i,h,[l,c]),m=n.runWebGLProgram(f,[p,d],p.dtype),g=AI({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class A${constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Dv(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("index"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function R$(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,u=b.parseAxisParam(i,r.shape)[0];if((0,l.OB)().get("DEBUG")){const e=n.readSync(a.dataId),t=r.shape[u];for(let n=0;n<e.length;++n){const s=e[n];b.assert(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const c=Ca(r,a,u,o),h=b.sizeFromShape(a.shape),d=[],p=AI({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=AI({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}});d.push(p),d.push(f);const m=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),s=pk(t,e,m);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,s.dtype,s.values)}const g=new A$(p.shape,m),x=n.runWebGLProgram(g,[p,f],p.dtype);d.push(x);const y=AI({inputs:{x},backend:n,attrs:{shape:c.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const F$={kernelName:d.qi,backendName:"webgl",kernelFunc:R$},_$=vI({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:fk,dtype:"bool"}),D$={kernelName:d.iZ,backendName:"webgl",kernelFunc:_$},O$=vI({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:mk}),B$={kernelName:d.Ac,backendName:"webgl",kernelFunc:O$};const M$={kernelName:d.Qg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return c$(s,!0,n)}},L$=wI({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),z$={kernelName:d.av,backendName:"webgl",kernelFunc:L$},P$=wI({opSnippet:"return float(isinf(x));",dtype:"bool"}),V$={kernelName:d.iW,backendName:"webgl",kernelFunc:P$},W$=wI({opSnippet:"return float(isnan(x));",dtype:"bool"}),U$={kernelName:d.r7,backendName:"webgl",kernelFunc:W$},G$=vI({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:gk,dtype:"bool"}),H$={kernelName:d.vt,backendName:"webgl",kernelFunc:G$},j$=vI({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:bk,dtype:"bool"}),q$={kernelName:d.CA,backendName:"webgl",kernelFunc:j$};const K$={kernelName:d.e7,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=xk(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},X$=wI({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:yk}),Y$={kernelName:d.Zb,backendName:"webgl",kernelFunc:X$},Z$=wI({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),J$={kernelName:d.kU,backendName:"webgl",kernelFunc:Z$},Q$=vI({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),eC={kernelName:d.PY,backendName:"webgl",kernelFunc:Q$},tC=wI({opSnippet:"return float(!(x >= 1.0));"}),nC={kernelName:d.Vf,backendName:"webgl",kernelFunc:tC},sC=vI({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),rC={kernelName:d.MZ,backendName:"webgl",kernelFunc:sC};class aC{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class iC{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const oC={kernelName:d.eZ,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s,c=(0,l.OB)().getBool("WEBGL_PACK_NORMALIZATION")?new iC(r.shape,a,i,o,u):new aC(r.shape,a,i,o,u);return n.runWebGLProgram(c,[r],r.dtype)}};class uC{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const lC={kernelName:d.Hh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s,h=new uC(r.shape,o,u,l,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function cC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,u=b.parseAxisParam(a,r.shape);let l=u;const c=bn(l,o),h=null!=c,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=Uk(e,r.shape,r.dtype,c,t);p=n.makeTensorInfo(t,r.dtype);n.texData.get(p.dataId).values=s}else p=MI(r,c,n);l=yn(l.length,o)}gn("max",l,o);const[f,m]=fn(p.shape,l);let g,x=f;if(i&&(x=mn(f,u)),d){const e=n.texData.get(p.dataId).values,t=wk(e,b.sizeFromShape(m),x,r.dtype);g=n.makeTensorInfo(x,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,s){const r=b.sizeFromShape(t),a=AI({inputs:{x:e},attrs:{shape:[b.sizeFromShape(e.shape)/r,r]},backend:s}),i=DI(a,e.dtype,"max",s),o=AI({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(p,m,x,n);return h&&n.disposeIntermediateTensorInfo(p),g}const hC={kernelName:d.Yo,backendName:"webgl",kernelFunc:cC},dC=vI({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:vk}),pC={kernelName:d.BM,backendName:"webgl",kernelFunc:dC};const fC={kernelName:d.mT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;mv(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s;b.assert(pt(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=st(r.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&b.arraysEqual(l.inShape,l.outShape))return cI({inputs:{x:r},backend:n});const c=new vS(l,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}};const mC={kernelName:d.OA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=s,c=rt(r.shape,a,i,[1,1,1],o,l,u),h=new kS(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class gC{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,u=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bC{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const xC={kernelName:d.OU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s,h=rt(i.shape,o,u,[1,1,1],l,c),d=new kS(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new bC(h),m=n.runWebGLProgram(f,[r,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}};const yC={kernelName:d.OV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;mv([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,d=st(o.shape,u,l,1,c,h),p=new vS(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new gC(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const wC={kernelName:d.vF,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;b.assert(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const l=[1,1];b.assert(pt(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=st(s.shape,r,a,l,i),[h,d]=function(e,t,n,s){let r=new vS(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new vS(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,u);return[h,d]}};const vC={kernelName:d.q2,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,u=b.parseAxisParam(a,s.shape);let l=u;const c=bn(l,o),h=null!=c,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=Uk(e,s.shape,s.dtype,c,t);f=i.makeTensorInfo(t,s.dtype);i.texData.get(f.dataId).values=n}else f=MI(s,c,i);p.push(f),l=yn(l.length,o)}gn("sum",l,o);const[m,g]=fn(f.shape,l);let x=m;r&&(x=mn(m,u));const y=function(e,t,n,s){const r=b.sizeFromShape(t),a=AI({inputs:{x:e},attrs:{shape:[b.sizeFromShape(e.shape)/r,r]},backend:s}),i=DI(a,"float32","mean",s),o=AI({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,x,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return y}};const kC={kernelName:d.c1,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=b.parseAxisParam(a,r.shape);let l=u;const c=bn(l,o);let h=r;null!=c&&(h=PI({inputs:{x:r},backend:n,attrs:{perm:c}}),l=yn(l.length,r.shape.length)),gn("min",l,o);const[d,p]=fn(h.shape,l),f=AI({inputs:{x:h},backend:n,attrs:{shape:[-1,b.sizeFromShape(p)]}}),m=DI(f,f.dtype,"min",n);let g;if(i){g=AI({inputs:{x:m},backend:n,attrs:{shape:mn(d,u)}})}else g=AI({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},IC=vI({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:kk}),SC={kernelName:d.q8,backendName:"webgl",kernelFunc:IC};class NC{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Dv(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class $C{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Dv(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=jk("rc",s),u=jk("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const CC={kernelName:d.jQ,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=(0,l.OB)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $C(s.shape,r,a):new NC(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},TC=vI({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),EC={kernelName:d.Vb,backendName:"webgl",kernelFunc:TC};class AC{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const RC=vI({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),FC={kernelName:d.oH,backendName:"webgl",kernelFunc:RC},_C="return a - b;",DC=vI({opSnippet:_C,packedOpSnippet:_C,supportsComplex:!0,cpuKernelImpl:Pk}),OC={kernelName:d.Tr,backendName:"webgl",kernelFunc:DC};function BC(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=b.parseAxisParam([a],r.shape),o=cC({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=mn(o.shape,i),l=AI({inputs:{x:o},backend:n,attrs:{shape:u}}),c=DC({inputs:{a:r,b:l},backend:n}),h=n$({inputs:{x:c},backend:n}),d=LI({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=AI({inputs:{x:d},backend:n,attrs:{shape:u}}),f=RC({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const MC={kernelName:d.Gc,backendName:"webgl",kernelFunc:BC};const LC={kernelName:d.NZ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,u=o?r:BC({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new AC(l,c,a),d=[[i]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}};const zC={kernelName:d.ku,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=Sk(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=(0,l.OB)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new nI(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Qk(s.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(r,[s],s.dtype)}},PC=Os;const VC={kernelName:d.uv,backendName:"webgl",kernelFunc:function(e){Xr.Z("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s,l=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=PC(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},WC=Bs;const UC={kernelName:d.cy,backendName:"webgl",kernelFunc:function(e){Xr.Z("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=WC(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},GC=Ms;const HC={kernelName:d.W0,backendName:"webgl",kernelFunc:function(e){Xr.Z("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=GC(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class jC{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const qC={kernelName:d.we,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,u=b.sizeFromShape(r.shape),l=new jC(u,a,i,o),c=AI({inputs:{x:r},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const d=AI({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(h),d}};function KC(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=US({inputs:{input:s},backend:n}),t=KC({inputs:{x:e},backend:n}),r=rN({inputs:{input:s},backend:n}),a=KC({inputs:{x:r},backend:n}),i=dI({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return p$({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const XC={kernelName:d.Ru,backendName:"webgl",kernelFunc:KC};const YC={kernelName:d.qW,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=US({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=rN({inputs:{input:r},backend:s}),i=KC({inputs:{x:a},backend:s}),o=dI({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return p$({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}};const ZC={kernelName:d.Qi,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return r$({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{b.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=oN({inputs:t.map((e=>{const t=r$({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class JC{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Dv(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class QC{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Dv(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=jk("rc",s),u=jk("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${u.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${l}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${l}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===s?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const eT=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(0===b.sizeFromShape(r.shape)){const e=a.map(((e,t)=>e[0]+r.shape[t]+e[1]));return p$({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=(0,l.OB)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QC(r.shape,a,i):new JC(r.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[r],r.dtype,u)},tT={kernelName:d.ly,backendName:"webgl",kernelFunc:eT},nT=vI({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),sT={kernelName:d.pe,backendName:"webgl",kernelFunc:nT};const rT={kernelName:d.Dl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=[],l=b.parseAxisParam(a,r.shape);let c=l;const h=bn(c,o);let d,p=r;if(null!=h&&(p=PI({inputs:{x:r},backend:n,attrs:{perm:h}}),c=yn(c.length,o),u.push(p)),gn("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:s,outDtype:r}=$k(p.shape,p.dtype,e,c);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=fn(p.shape,c),s=b.sizeFromShape(t),a=AI({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),i=DI(a,(0,Ye.z4)(r.dtype),"prod",n);d=AI({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(i){u.push(d);const e=mn(d.shape,l);d=AI({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},aT=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=Ck(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},iT={kernelName:d.e6,backendName:"webgl",kernelFunc:aT},oT=wI({opSnippet:"return 1.0 / x;"}),uT={kernelName:d.$H,backendName:"webgl",kernelFunc:oT},lT=wI({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),cT={kernelName:d.qk,backendName:"webgl",kernelFunc:lT},hT=wI({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),dT={kernelName:d.Sb,backendName:"webgl",kernelFunc:hT};class pT{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class fT{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const mT={kernelName:d._Y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,c]=o,h=(0,l.OB)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fT(r.shape,u,c,a,i):new pT(r.shape,u,c,a,i);return n.runWebGLProgram(h,[r],"float32")}};class gT{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const bT={kernelName:d.zb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new gT(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class xT{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class yT{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const wT={kernelName:d.dp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,c]=o,h=(0,l.OB)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yT(r.shape,u,c,a,i):new xT(r.shape,u,c,a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class vT{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const kT={kernelName:d.Hm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new vT(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class IT{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=Dv(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class ST{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=jk("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Dv(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const NT={kernelName:d.mK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=b.parseAxisParam(a,r.shape);if(0===i)return cI({inputs:{x:r},backend:n});const u=(0,l.OB)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ST(r.shape,o):new IT(r.shape,o);return n.runWebGLProgram(u,[r],r.dtype)}};class $T{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const CT={kernelName:d.b9,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new $T(s.shape,a),[l,c]=Rr(i,s.shape[1],s.shape[2]),h=[[l,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(u,[s],s.dtype,h)}},TT=wI({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ET={kernelName:d.e0,backendName:"webgl",kernelFunc:TT},AT=wI({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Tk}),RT={kernelName:d.bV,backendName:"webgl",kernelFunc:AT};class FT{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=Dv(r.length),u=Dv(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const _T={kernelName:d.xQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Pr(0,r,i),d=[h/l,l];if(0===h)return n.makeTensorInfo(i,r.dtype);const p=AI({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=AI({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new FT(u,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),x=AI({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),x}};class DT{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=Dv(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const OT={kernelName:d.Ph,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new DT(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],(0,Ye.x8)(r.dtype,a.dtype))}},BT=wI({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Vr};\n  float scale = ${Wr};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),MT={kernelName:d.oF,backendName:"webgl",kernelFunc:BT},LT=wI({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Ek}),zT={kernelName:d.a5,backendName:"webgl",kernelFunc:LT},PT=wI({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),VT={kernelName:d.i5,backendName:"webgl",kernelFunc:PT},WT=wI({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),UT={kernelName:d.RQ,backendName:"webgl",kernelFunc:WT},GT=wI({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),HT={kernelName:d.w3,backendName:"webgl",kernelFunc:GT},jT=wI({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),qT={kernelName:d.MR,backendName:"webgl",kernelFunc:jT},KT={kernelName:d.TQ,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;b.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<r.shape.length;++e)u.push([0,0]);const l=[],c=eT({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),h=Fr(c.shape,a,o,!1),d=_r(h.length,a.length,!1),p=Dr(c.shape,a,o,!1),f=AI({inputs:{x:c},backend:n,attrs:{shape:h}}),m=PI({inputs:{x:f},backend:n,attrs:{perm:d}}),g=AI({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const XT={kernelName:d.O3,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(r.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=Fk(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};const YT={kernelName:d.nh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=_k(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};const ZT={kernelName:d.YW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=Dk(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}};const JT={kernelName:d.Zj,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=Dk(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}};const QT={kernelName:d.D2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=Pr(0,r,o),d=new FT(l,u,r.shape.length,a.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[a,r,i],a.dtype),f=AI({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}};const eE={kernelName:d.L8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=b.parseAxisParam(i,r.shape)[0],u=da(r,a,o),l=r.shape.length,c=new Array(l).fill(0),h=r.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const s=BS({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},tE="return sqrt(x);",nE=wI({opSnippet:tE,packedOpSnippet:tE,cpuKernelImpl:Ok}),sE={kernelName:d.FK,backendName:"webgl",kernelFunc:nE},rE=wI({opSnippet:"return x * x;"}),aE={kernelName:d.bK,backendName:"webgl",kernelFunc:rE},iE="return (a - b) * (a - b);",oE=vI({opSnippet:iE,packedOpSnippet:iE}),uE={kernelName:d._t,backendName:"webgl",kernelFunc:oE};const lE={kernelName:d.h8,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new Qk(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class cE{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=Dv(n.length),a=Dv(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const hE={kernelName:d.m2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:w,strides:v}=Oe(r.shape,a,i,o,u,l,c,h,d);let k;if(m)k=AI({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||x){b.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=ke(y,w,v),t=BS({inputs:{x:r},backend:n,attrs:{begin:y,size:e}});k=AI({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=ae(r.shape,r.dtype,e),s=Bk(p,t,v,y);k=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new cE(y,v,p);k=n.runWebGLProgram(e,[r],r.dtype)}}const I=AI({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),I}};const dE={kernelName:d._J,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=Mk(d,p,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const pE={kernelName:d.s1,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=Lk(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const fE={kernelName:d.Xk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=zk(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},mE=wI({opSnippet:"return tan(x);"}),gE={kernelName:d.sE,backendName:"webgl",kernelFunc:mE},bE=wI({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),xE={kernelName:d.MI,backendName:"webgl",kernelFunc:bE};class yE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=Dv(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function wE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>b.decodeString(e))):e,s=ae(r.shape,r.dtype,t),i=Vk(s,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new yE(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const vE={kernelName:d.n9,backendName:"webgl",kernelFunc:wE};class kE{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class IE{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function SE(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function NE(e){let t=1;for(;t<e;)t*=2;return t}const $E={kernelName:d.cW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=(0,l.OB)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=(0,l.OB)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,h=c[c.length-1];if(n.shouldExecuteOnCPU([r])||h<o||a>u){const e=n.readSync(r.dataId),[t,s]=Wk(e,c,r.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===a)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===h)return[r,p$({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const d=n.texData.get(r.dataId),p=null!==d&&d.isPacked,f=p?n.unpackTensor(r):r,m=b.sizeFromShape(c)/h,g=AI({inputs:{x:f},attrs:{shape:[m,h]},backend:n});p&&SE(n,f);const x=NE(a),y=NE(h);let w=null;const v=()=>null===w?[g,g]:[g,w],k=(e,t,s)=>{const r=v(),a=new kE(s),i=[[h],[null===w?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=w;w=n.runWebGLProgram(a,r,"int32",i),SE(n,o)};for(let e=1;e<x;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)k(t,n,[m,y])}for(let e=y;e>x;e/=2){const t=v(),s=new IE([m,e/2]),r=[[h],[null===w?1:0],[x]],a=w;w=n.runWebGLProgram(s,t,"int32",r),SE(n,a);const i=x/2,o=2*i;for(let e=i;e>=1;e/=2)k(o,e,w.shape)}let I=w;w=BS({inputs:{x:w},backend:n,attrs:{begin:0,size:[m,a]}}),SE(n,I);let S=R$({inputs:{x:g,indices:w},backend:n,attrs:{axis:1,batchDims:1}});SE(n,g);const N=c.slice(0,-1);N.push(a),I=w,w=AI({inputs:{x:w},attrs:{shape:N},backend:n}),SE(n,I);const $=S;return S=AI({inputs:{x:S},attrs:{shape:N},backend:n}),SE(n,$),[S,w]}};class CE{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const TE={kernelName:d.wx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=new CE(h,d,i,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[r,a],"float32")}};const EE={kernelName:d.kp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;mv(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=Gk(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}};const AE={kernelName:d.To,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,u=r.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[a]=e;const t=BS({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),s=AI({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class RE{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const FE={kernelName:d.Qv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,u=[];let l=0;const c=bn([l],o);let h=r;null!=c&&(h=PI({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(h),l=yn(1,o)[0]);const d=$a(h.shape,l,i),p=b.sizeFromShape([h.shape[l]]),f=AI({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=(0,Ye.z4)(r.dtype),g=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],l=Na(o,a),c=new RE({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(u.push(h),h.shape[1]===a)return h;const d=aT({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=wE({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});u.push(d),u.push(p);return g(h,t,p,r,a)},x=AI({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let y=x;if(null!=c){u.push(x);const e=xn(c);y=PI({inputs:{x:y},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},_E=[UI,HI,qI,XI,JI,tS,nS,sS,lS,cS,dS,fS,gS,xS,wS,IS,SS,CS,TS,ES,FS,LS,zS,PS,HS,KS,ZS,pI,eN,uN,fN,yN,wN,vN,kN,IN,NN,CN,EN,_N,DN,BN,zN,WN,UN,HN,qN,KN,YN,ZN,QN,t$,s$,a$,u$,h$,f$,g$,y$,v$,S$,$$,C$,E$,F$,D$,B$,hI,M$,aN,z$,V$,U$,gI,H$,q$,K$,Y$,J$,eC,nC,rC,oC,lC,hC,pC,fC,mC,xC,yC,wC,vC,kC,SC,CC,EC,LC,EI,zC,VC,UC,HC,WS,qC,YC,ZC,tT,sT,yI,rT,iT,GS,FC,uT,cT,dT,RI,mT,bT,wT,kT,NT,CT,ET,RT,_T,OT,MT,zT,VT,UT,HT,MS,MC,qT,KT,XT,YT,ZT,JT,QT,eE,sE,aE,uE,lE,hE,dE,pE,fE,OC,zI,gE,xE,vE,$E,TE,VI,EE,AE,FE,XC];for(const e of _E)(0,Sr.wC)(e)})()})();