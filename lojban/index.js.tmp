(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var leijufra = {};
var jvoPlumbsOn = true;
var plumbsTimeout = 3500;
var uncll_url = "https://la-lojban.github.io/uncll/uncll-1.2.13/xhtml_section_chunks/";
var learnlojban_url = 'https://lojban.pw/books/learn-lojban/#';
var supportedLangs = {
  'en': {
    n: 'English',
    "p": "selsku_lanci_eng"
  },
  'muplis': {
    n: 'la muplis'
  },
  'en-cll': {
    n: 'The Book',
    "p": "cukta"
  },
  'en-ll': {
    n: 'Learn Lojban',
    "p": "cukta"
  },
  jbo: {
    n: 'lojbo',
    "p": "lanci_jbo"
  },
  ru: {
    n: 'русский',
    "p": "selsku_lanci_rus"
  },
  eo: {
    n: 'esperanto',
    "p": "lanci_epo"
  },
  es: {
    n: 'español',
    "p": "selsku_lanci_spa"
  },
  'fr-facile': {
    n: 'français',
    "p": "selsku_lanci_fra"
  },
  ja: {
    n: '日本語',
    "p": "selsku_lanci_jpn"
  },
  zh: {
    n: '中文',
    "p": "selsku_lanci_zho"
  }
};
var content = document.getElementById('content');
var ciska = document.getElementById('ciska');
var clear = document.getElementById('clear');
var outp = document.getElementById('outp');
var descr = document.getElementById('descr');
var drata = document.getElementById('drata');
var citri = document.getElementById('citri');
var sidju = document.getElementById('sidju');
var pb = document.getElementById('kernelo_lo_cpacu');
var SiteTitleFull = document.querySelector('#site-title');
var dasri = document.getElementById('galtu-dasri');
var catni = document.getElementById('catni');
var cnano = document.getElementById('cnano');
var rimni = document.getElementById('rimni');
var title = document.getElementById('title');
var SiteImage = document.querySelectorAll('#title > img');
var btnScrollToTop = document.getElementById('scrollToTop');
var worker = new Worker('worker.js?sisku=1627042001585');
var sorcuWorker = new Worker('sorcuWorker.js?sisku=1627042001585');

content.onscroll = function () {
  if (content.scrollTop > 200) {
    btnScrollToTop.style.display = 'block';
    btnScrollToTop.classList.remove('dizlo');
  } else {
    // btnScrollToTop.style.display = "none";
    btnScrollToTop.classList.add('dizlo');
  }
};

window.switchBorderScroll = function () {
  if (content.scrollTop > 200) {
    content.scrollTop = 0;
  } else {
    content.scrollTop = content.scrollHeight;
  }
};

var listFamymaho = {
  BE: "bei be'o",
  BEI: "be'o",
  BY: 'boi',
  COI: "do'u",
  DOI: "do'u",
  FIhO: "fe'u",
  FUhE: "fu'o",
  GIhA: 'vau',
  GOI: "ge'u",
  JOhI: "te'u",
  KE: "ke'e",
  LAhE: "lu'u",
  LA: 'ku',
  LE: 'ku',
  LI: "lo'o",
  LOhU: "le'u",
  LU: "li'u",
  ME: "me'u",
  'NAhE+BO': "lu'u",
  NOI: "ku'o",
  NUhI: "nu'u",
  NU: 'kei',
  PA: 'boi',
  PEhO: "ku'e",
  SEI: "se'u",
  SOI: "se'u",
  TO: 'toi',
  TUhE: "tu'u",
  VEI: "ve'o",
  LOhAI: "sa'ai",
  SAhAI: "le'ai",
  LOhOI: "ku'au",
  NAhU: "te'u",
  NIhE: "te'u",
  MOhE: "te'u"
};
var resultCount;
var results = [];
var typingTimer;
var state = {
  searching: {
    seskari: 'cnano',
    versio: 'masno',
    query: '',
    bangu: 'en'
  },
  displaying: {
    seskari: 'cnano',
    versio: 'masno',
    query: '',
    bangu: 'en'
  },
  citri: []
};
var loadingState = {
  loading: true,
  firstRun: true
};

try {
  var tcini = JSON.parse(localStorage.getItem('tcini'));
  if (tcini && tcini.seskari) state.searching.seskari = tcini.seskari;
  if (tcini && tcini.versio) state.searching.versio = tcini.versio; // if (tcini.query) state.searching.query = tcini.query

  if (tcini && tcini.bangu) state.searching.bangu = tcini.bangu;
} catch (error) {}

try {
  setStateFromUrl({
    replace: true
  });
} catch (error) {}

sorcuWorker.postMessage(_objectSpread({
  kind: 'fancu',
  cmene: 'ningau_lesorcu'
}, state.searching));

try {
  updateLocales();
} catch (error) {}

function macitri() {
  var citri = [];

  try {
    return JSON.parse(localStorage.getItem('citri')) || citri;
  } catch (e) {}

  return citri;
}

state.citri = macitri();
RenderCitri();

function RenderCitri() {
  if (state.citri.length > 0) citri.innerHTML = " <span class=\"romoi_lehiseciska\" data-jufra=\"window.purc\">".concat(window.purc, "</span>").concat(state.citri.filter(function (_ref) {
    var seskari = _ref.seskari;
    return seskari !== 'velcusku';
  }).map(function (_ref2) {
    var seskari = _ref2.seskari,
        versio = _ref2.versio,
        query = _ref2.query,
        bangu = _ref2.bangu;
    return "<a class=\"a-".concat(seskari, "\" href=\"#seskari=").concat(seskari, "&versio=").concat(versio, "&sisku=").concat(encodeUrl(query), "&bangu=").concat(bangu, "\">").concat(escHtml(query), "</a>");
  }).join(', '));
}

function RenderDasri(_ref3) {
  var seskari = _ref3.seskari,
      sepia = _ref3.sepia;
  var colors = ['velcusku', 'arxivo', 'cnano', 'rimni', 'catni', 'fanva'];

  if (state.displaying.bangu === 'muplis') {
    document.getElementById('leitutci').style.display = 'none';
  } else {
    document.getElementById('leitutci').style.display = 'flex';
  }

  if (!colors.includes(seskari)) seskari = 'cnano';
  dasri.className = "kampu-dasri ".concat(seskari, "-dasri noselect");
  SiteTitleFull.classList.add("".concat(seskari, "-search-mode-title-color"));
  SiteTitleFull.classList.remove('desktop-mode-title-color');
  if (document.getElementById(seskari)) document.getElementById(seskari).classList.add("".concat(seskari, "-tutci-hover"), 'tutci-hover');
  colors.map(function (c) {
    if (c !== seskari) {
      SiteTitleFull.classList.remove("".concat(c, "-search-mode-title-color"));
      if (document.getElementById(c)) document.getElementById(c).classList.remove("".concat(c, "-tutci-hover"), 'tutci-hover');
    }
  });
  if (sepia) for (var i = 0; i < SiteImage.length; i++) {
    SiteImage[i].style.filter = sepia;
  }
}

var listenToSearchRendered = function listenToSearchRendered() {
  if (event.animationName == "nodeInserted") {
    if (loadingState.loading !== true) addAudioLinks();
    SwitchRotation({
      action: 'stop'
    });
  }
};

document.addEventListener("animationstart", listenToSearchRendered, false);

function SwitchRotation(_ref4) {
  var action = _ref4.action,
      quick = _ref4.quick;
  if (document.readyState !== 'complete') return;
  var els = ['logo'];

  if (action === 'start') {
    els.map(function (el) {
      document.getElementById(el).classList.remove('stopRotate');
      document.getElementById(el).classList.add('rotate');
    });
    clear.classList.add('pulsate-css');
    setTimeout(function () {
      if (clear.classList.contains('pulsate-css')) ciska.classList.add('granim-css');
    }, quick ? 100 : 500);
  } else {
    els.map(function (el) {
      document.getElementById(el).classList.add('stopRotate');
    });
    ciska.classList.remove('granim-css');
    clear.classList.remove('pulsate-css');
  }
}

function EmitVelcusku() {// if (socket1Chat) socket1Chat.open()
}

function renderMathAndPlumbs() {
  MathJax.typesetPromise().then(function () {
    addJvoPlumbs(true);
  });
}

var hashResults = function hashResults(_ref5) {
  var query = _ref5.query,
      seskari = _ref5.seskari,
      bangu = _ref5.bangu,
      len = _ref5.len;
  return "".concat(query).concat(seskari).concat(bangu).concat(len);
};

function RenderResults(_ref6) {
  var query = _ref6.query,
      seskari = _ref6.seskari,
      bangu = _ref6.bangu,
      versio = _ref6.versio;

  if (loadingState.loading) {
    var currentHash = hashResults({
      query: query,
      seskari: seskari,
      bangu: bangu,
      len: results.length
    });
    if (state.displaying.query !== '' && loadingState.resultsHash === currentHash) return;
    loadingState.resultsHash = currentHash;
  }

  removePlumbs();
  window.jimte = seskari === 'velcusku' ? 201 : 30;
  resultCount = 0;
  outp.innerHTML = '';
  skicu_rolodovalsi({
    query: query,
    seskari: seskari,
    bangu: bangu,
    versio: versio
  });
  if (results.length === 0) SwitchRotation({
    action: 'stop'
  });
  state.displaying = _objectSpread(_objectSpread({}, state.displaying), {}, {
    query: query,
    versio: versio,
    seskari: seskari,
    bangu: bangu
  });
  outp.style.display = 'block';
  descr.style.display = 'none';
  drata.style.display = 'none';
  sidju.style.display = 'flex';
  content.scrollTop = 0;

  switch (state.displaying.seskari) {
    case 'rimni':
      renderMathAndPlumbs();
      RenderDasri({
        seskari: 'rimni',
        sepia: 'sepia(}1.0)'
      });
      break;

    case 'arxivo':
      RenderDasri({
        seskari: 'arxivo',
        sepia: 'none'
      });
      break;

    case 'velcusku':
      RenderDasri({
        seskari: 'velcusku',
        sepia: 'none'
      });
      break;

    case 'catni':
      renderMathAndPlumbs();
      RenderDasri({
        seskari: 'catni',
        sepia: 'none'
      });
      break;

    case 'fanva':
      renderMathAndPlumbs();
      RenderDasri({
        seskari: 'fanva',
        sepia: 'none'
      });
      break;

    case 'cnano':
    default:
      renderMathAndPlumbs();
      RenderDasri({
        seskari: 'cnano',
        sepia: 'none'
      });
  }

  delay(function () {
    //todo: arrpurc or state.history
    DispatchCitri();
    ga('send', 'pageview', "#sisku/".concat(state.displaying.query));
    var pageViewData = {
      dl: window.location.href,
      dt: document.title,
      dr: document.referrer,
      dp: "#sisku/".concat(state.displaying.query),
      dh: "".concat(window.location.protocol, "//").concat(window.location.hostname),
      z: Math.round(Math.random() * 1e12)
    };
    if (socket) socket.emit('sisku', pageViewData);
  }, 2000, 'typing');
}

function removePlumbs() {
  ;
  [].forEach.call(document.querySelectorAll('.leader-line'), function (e) {
    e.parentNode.removeChild(e);
  });
}

function appendPlumbs() {
  ;
  [].forEach.call(document.querySelectorAll('.leader-line'), function (e) {
    document.querySelector('#content').appendChild(e);
  });
}

function addJvoPlumbs(force) {
  removePlumbs();
  addPlumbs(!force);
  scrollJvoTimer = setTimeout(function () {
    if (force !== true) {
      var plumbers = document.getElementsByClassName('jvo_plumber');
      jvoPlumbsOn = !jvoPlumbsOn;

      for (var i = 0; i < plumbers.length; i++) {
        var plumber = plumbers[i];
        plumber.value = jvoValue();
        jvoPlumbsOn ? plumber.classList.add('tutci-hover') : plumber.classList.remove('tutci-hover');
      }
    }

    if (!jvoPlumbsOn) return;
    var targetedEls = Array.from(document.querySelectorAll('[data-arr]'));

    var _loop = function _loop() {
      var el = targetedEls[i];
      if (el.attributes['data-head'] && el.attributes['data-head'].nodeValue !== '1') return "continue";
      var id = el.id;
      var arr = el.attributes['data-arr'].nodeValue.split(',');
      var tld = el.id.split('_');
      var tld_0 = tld.slice(0, -1);
      var kahe_zgana_el = kahe_sezgana(el);
      targetedEls.filter(function (e) {
        var tld_inner = e.id.split('_');
        var tld_inner_0 = tld_inner.slice(0, -2);
        var arr_ = e.attributes['data-arr'].nodeValue.split(',');
        var t_ = arr_[0].split(/(?=[0-9]+)/);

        if (arr_.length === 1 && tld_inner_0.length === tld_0.length && tld_inner_0.join('_') === tld_0.join('_') && arr.filter(function (ei) {
          var t = ei.split(/(?=[0-9])/);
          return t_[0].indexOf(t[0]) === 0 && t_[1] === t[1];
        }).length > 0 && (kahe_zgana_el || kahe_sezgana(e))) {
          var clr = e.attributes['data-color'].nodeValue;
          clr = "hsla(".concat(clr, ",100%,70%,0.62)");
          var t = new LeaderLine(document.getElementById(e.id), document.getElementById(id), {
            endPlugColor: clr,
            color: clr,
            dash: {
              animation: true
            },
            startSocketGravity: [50, -67],
            endSocketGravity: [0, 67],
            endPlug: 'arrow2',
            endSocket: 'bottom',
            size: 3
          });
        }
      });
      appendPlumbs();
    };

    for (var i = 0; i < targetedEls.length; i++) {
      var _ret = _loop();

      if (_ret === "continue") continue;
    }
  }, force === true ? 450 : 0);
}

function addPlumbs(force) {
  removePlumbs();
  scrollTimer = setTimeout(function () {
    var targetedEls = document.querySelectorAll('[data-target]');

    for (var i = 0; i < targetedEls.length; i++) {
      var el = targetedEls[i];

      if (kahe_sezgana(el)) {
        var id = el.id;
        var target = el.attributes['data-target'].nodeValue;
        var t = new LeaderLine(document.getElementById(target), document.getElementById(id), {
          // gradient: {
          //   startColor: 'rgba(135, 0, 0, 0.4)',
          //   endColor: 'rgba(255, 120, 0, 0.4)',
          // },
          endPlugColor: 'rgba(255, 120, 0, 0.33)',
          color: 'rgba(255, 120, 0, 0.33)',
          dash: {
            animation: true
          },
          // outlineColor: '#111',
          // outline: true,
          startSocketGravity: [50, -67],
          endSocketGravity: [0, 67],
          endPlug: 'arrow2',
          // startSocket: 'top',
          endSocket: 'bottom',
          size: 3
        });
      }
    }

    appendPlumbs();
    plumbsTimeout = 450;
  }, force ? 0 : plumbsTimeout);
}

function kahe_sezgana(el) {
  var rect = el.getBoundingClientRect();
  rect = rect.top >= 48 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
  return rect;
}

function twoJsonsAreEqual() {
  var obj1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var obj2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var flag = true;

  if (Object.keys(obj1).length == Object.keys(obj2).length) {
    for (var key in obj1) {
      if (obj1[key] == obj2[key]) {
        continue;
      } else {
        flag = false;
        break;
      }
    }
  } else {
    flag = false;
  }

  return flag;
}

worker.onmessage = function (ev) {
  var data = ev.data;

  if (data.kind == 'searchResults') {
    delete loadingState.searching;
    if (!data.force && !twoJsonsAreEqual(data.req, state.searching)) return;
    results = data.results || [];
    RenderResults(_objectSpread({}, data.req));
  } else if (data.kind == 'fancu') {
    var cmene = data.cmene,
        _results = data.results;

    switch (cmene) {
      case 'tejufra':
        updateDOMWithLocales(_results, _objectSpread(_objectSpread({}, state.searching), data.datni));
        break;
    }
  }
};

sorcuWorker.onmessage = function (ev) {
  var data = ev.data;

  if (data.kind == 'loader') {
    var loading = document.getElementById('loading');

    if (data.cmene === 'loading') {
      if (data.banguRaw === state.searching.bangu || data.completedRows === 0 || data.completedRows === data.totalRows) {
        if (data.completedRows === data.totalRows || !twoJsonsAreEqual(loadingState.searching, state.searching)) {
          loadingState.searching = state.searching;
          loadingState.loading = true;
          worker.postMessage(_objectSpread(_objectSpread({
            kind: 'newSearch',
            versio: 'masno'
          }, state.searching), {}, {
            leijufra: leijufra
          }));
        }
      }

      loading.style.display = 'inline-flex';
      document.getElementById('contentWrapper').style.paddingBottom = '28px';
      var percent = Math.min(100, Math.max(10, parseFloat(data.completedRows) * 100 / parseFloat(data.totalRows)));
      pb.style.width = "".concat(percent, "%");
      document.getElementById('bangu_loading').innerHTML = data.bangu;
    } else if (data.cmene === 'loaded') {
      loadingState.loading = false;
      addAudioLinks();
      delete loadingState.resultsHash;
      loading.style.display = 'none';
      document.getElementById('contentWrapper').style.paddingBottom = '0';
    }

    calcVH();
  } else if (data.kind == 'fancu') {
    var cmene = data.cmene,
        _results2 = data.results;

    switch (cmene) {
      case 'tejufra':
        updateDOMWithLocales(_results2, _objectSpread(_objectSpread({}, state.searching), data.datni));
        break;

      case 'ningau_lesorcu':
        console.log(_results2);
    }
  }
};

if (socket) socket.on('la_arxivo_cu_cusku', function (_ref7) {
  var seskari = _ref7.seskari,
      query = _ref7.query,
      message = _ref7.message;

  if (state.searching.seskari === seskari && state.searching.query === query) {
    results = message || [];
    RenderResults({
      query: query,
      seskari: seskari
    });
  }
});

function parseQuery(queryString) {
  if (queryString === '') return;
  var query = {};
  var pairs = ''; //legacy support:

  if (queryString.search(/^#sisku\//) === 0) {
    pairs = [queryString.replace(/#sisku\/(.*)/, 'sisku=$1')];
  } else {
    pairs = (queryString[0] === '#' ? queryString.substr(1) : queryString).split('&');
  }

  for (var i = 0; i < pairs.length; i++) {
    var pair = pairs[i].split('=');
    if (pair[1]) query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1].replace(/[\+]/g, ' ') || '');
  }

  return query;
}

function setStateFromUrl(_ref8) {
  var href = _ref8.href,
      replace = _ref8.replace;

  if (href) {
    href = href.substring(href.indexOf('#') + 1);
    localStorage.setItem('url', "#".concat(href));
  }

  var params = parseQuery(href || window.location.hash) || {};
  var newSearch;

  if (params && params['sisku']) {
    newSearch = decodeUrl(params['sisku']).trim();
  } else {
    href = href || window.location.search;
    href = href.substring(href.indexOf('?') + 1);
    var search = new URLSearchParams(href);
    newSearch = decodeUrl(search.get('focus') || '').trim();

    if (newSearch) {
      params = {
        sisku: newSearch,
        seskari: 'cnano'
      };
    }
  }

  var stateToUpdate = _objectSpread({}, state.searching);

  if (params['seskari'] && ['velcusku', 'cnano', 'catni', 'rimni', 'arxivo', 'fanva'].includes(params['seskari'])) {
    stateToUpdate.seskari = params['seskari'];
  }

  stateToUpdate.versio = 'masno';

  if (params['versio'] && ['selmaho'].includes(params['versio'])) {
    stateToUpdate.versio = params['versio'];
  }

  if (params['bangu'] && Object.keys(supportedLangs).includes(params['bangu'])) {
    stateToUpdate.bangu = params['bangu'];
  }

  if (params['sisku']) {
    stateToUpdate.query = newSearch;
  }

  if (!twoJsonsAreEqual(stateToUpdate, state.searching)) {
    state.searching = _objectSpread(_objectSpread({}, state.searching), stateToUpdate);
    DispatchState({
      replace: replace
    });
  }
}

citri.addEventListener('click', clicked);

function clicked(_ref9) {
  var target = _ref9.target;

  if (target.nodeName === 'A') {
    var el = target;
    if (el.ctrlKey || el.metaKey) return;
    setStateFromUrl({
      replace: false,
      href: el.getAttribute('href')
    });
  }

  return;
}

function setUrlFromState(_ref10) {
  var replace = _ref10.replace;
  var versio = '';

  if (state.searching.versio) {
    versio = "&versio=".concat(state.searching.versio);
  }

  var url = "".concat(window.location.href.split('?')[0].split('#')[0], "#seskari=").concat(state.searching.seskari, "&sisku=").concat(encodeUrl(state.searching.query), "&bangu=").concat(state.searching.bangu).concat(versio);

  if (state.searching.query === '') {
    url = '';
    document.title = 'la sutysisku';
  } else {
    document.title = "".concat(state.searching.query, " - la sutysisku");
  }

  var lastUrl = localStorage.getItem('url') || '';

  if (replace === true) {
    window.history.replaceState({}, null, url);
  } else if (window.location.hash !== url && lastUrl !== url) {
    window.history.pushState({}, null, url);
  }

  localStorage.setItem('url', url);
}

window.addEventListener('popstate', setStateFromUrl);
ciska.addEventListener('paste', typing(0));
ciska.addEventListener('keyup', function () {
  typing();
});
ciska.addEventListener('keydown', function () {
  clearTimeout(typingTimer);
});
ciska.addEventListener('input', typing());
ciska.addEventListener('textInput', typing());

function GetCiskaAndDispatch() {
  state.searching.query = plukaquery(ciska.value); // state.searching.versio = 'masno'

  DispatchState({
    caller: 'GetCiskaAndDispatch'
  });
}

function typing(a) {
  clearTimeout(typingTimer);
  var timeout = 250;
  if (state.searching.bangu === 'muplis') timeout = 500;
  typingTimer = setTimeout(GetCiskaAndDispatch, a ? a : timeout);
}

ciska.addEventListener('focus', focusSearch);

function focusSearch() {
  if (loadingState.firstRun) {
    loadingState.firstRun = false;
    return;
  }

  state.searching.query = plukaquery(ciska.value);
  DispatchState({
    quickRotation: true
  });
}

window.EmptyState = function (bangu) {
  if (typeof bangu === 'string') {
    state.searching.bangu = bangu;
    updateLocales();
  }

  DispatchState({
    empty: true
  });
};

clear.addEventListener('click', window.EmptyState);
rimni.addEventListener('click', function () {
  state.searching = _objectSpread(_objectSpread({}, state.displaying), {}, {
    seskari: 'rimni',
    query: plukaquery(ciska.value)
  });
  DispatchState({
    replace: false
  });
});
document.getElementById('cnano').addEventListener('click', function () {
  state.searching = _objectSpread(_objectSpread({}, state.displaying), {}, {
    seskari: 'cnano',
    query: plukaquery(ciska.value)
  });
  DispatchState({
    replace: false
  });
});
document.getElementById('catni').addEventListener('click', function () {
  state.searching = _objectSpread(_objectSpread({}, state.displaying), {}, {
    seskari: 'catni',
    query: plukaquery(ciska.value)
  });
  DispatchState({
    replace: false
  });
});

function DispatchCitri() {
  if (['fanva', 'velcusku'].includes(state.displaying.seskari) || state.displaying.query === '') return;
  var i = 0;

  for (i = 0; i < state.citri.length; i++) {
    if (state.citri[i].query === state.displaying.query && state.citri[i].seskari === state.displaying.seskari) {
      state.citri.splice(i, 1);
      break;
    }
  }

  state.citri.unshift(_objectSpread({}, state.displaying));
  if (state.citri.length > 10) state.citri.length = 10;
  localStorage.setItem('citri', JSON.stringify(state.citri));
  RenderCitri();
}

function DispatchState(_ref11) {
  var replace = _ref11.replace,
      caller = _ref11.caller,
      empty = _ref11.empty,
      quickRotation = _ref11.quickRotation;
  updateLocales(); // if (socket1Chat) socket1Chat.close()

  state.searching.query = state.searching.query.trim();
  setUrlFromState({
    replace: replace
  });
  localStorage.setItem('tcini', JSON.stringify(state.searching));

  if (empty == true) {
    state.searching.query = '';
    return RenderDesktop();
  } else if (state.searching.seskari !== 'velcusku') {
    if (state.searching.query === '') return RenderDesktop();
    if (twoJsonsAreEqual(state.searching, state.displaying)) return;
  } //emit search


  ciska.value = state.searching.query;
  SwitchRotation({
    action: 'start',
    quick: quickRotation
  });
  if (caller === 'GetCiskaAndDispatch' && state.searching.seskari === 'velcusku') state.searching.seskari = 'cnano';

  switch (state.searching.seskari) {
    case 'arxivo':
      var json = _objectSpread({}, state.searching);

      if (state.searching.query.charAt(0) !== '^' && state.searching.query.slice(-1)[0] !== '$') json.query = "\\b".concat(state.searching.query, "\\b");
      json.max = 20;
      if (socket) socket.emit('cpedu_fi_la_arxivo', json);
      break;

    case 'velcusku':
      EmitVelcusku();
      break;

    default:
      // worker.postMessage({
      //   kind: 'newSearch',
      //   versio: 'sutra',
      //   ...state.searching,
      // })
      if (loadingState.loading) sorcuWorker.postMessage(_objectSpread({
        kind: 'fancu',
        cmene: 'cnino_bangu'
      }, state.searching));
      worker.postMessage(_objectSpread(_objectSpread({
        kind: 'newSearch',
        versio: 'masno'
      }, state.searching), {}, {
        leijufra: leijufra
      }));
    // updateLocales()
  }
}

function updateDOMWithLocales(_ref12, miniState) {
  var _ref12$jufra = _ref12.jufra,
      jufra = _ref12$jufra === void 0 ? {
    window: {}
  } : _ref12$jufra;
  if (!jufra.window) return;

  for (var key in jufra.window) {
    var subKey = key.replace('window.', '');
    leijufra[subKey] = window[subKey] = jufra.window[key];
  }

  Array.from(document.querySelectorAll('[data-jufra]')).forEach(function (node) {
    var key = node.attributes['data-jufra'].nodeValue;
    var val = jufra[key];

    if (key.indexOf('window.') === 0) {
      val = jufra.window[key];

      var _subKey = key.replace('window.', '');

      window[_subKey] = jufra.window[key];
    }

    switch (node.nodeName) {
      case 'INPUT':
        node.placeholder = val || node.placeholder;
        break;

      default:
        node.innerHTML = val || node.innerHTML;
    }
  });
  SiteTitleFull = document.querySelector('#site-title');
  RenderDasri(_objectSpread(_objectSpread({}, miniState), {}, {
    sepia: 'none'
  }));
  if (state.displaying.query === '') RenderDesktop(miniState);
  var velsku = document.getElementById('velsku_sebenji');
  if (velsku) velsku.href = "#seskari=cnano&sisku=lai jbosnu&bangu=".concat(getStateBangu(), "&versio=masno");
}

function updateLocales() {
  sorcuWorker.postMessage(_objectSpread({
    kind: 'fancu',
    cmene: 'tejufra'
  }, state.searching));
}

function RenderDesktop(tempState) {
  if (!tempState) SwitchRotation({
    action: 'stop'
  });
  tempState = tempState || state.displaying;
  removePlumbs();
  content.scrollTop = 0;
  var lastQuery = tempState.query;
  state.displaying.query = ''; // ciska.value = "";

  SiteTitleFull.classList.add('desktop-mode-title-color');
  SiteTitleFull.classList.remove('catni-search-mode-title-color', 'cnano-search-mode-title-color', 'velcusku-search-mode-title-color', 'rimni-search-mode-title-color', 'fanva-search-mode-title-color', 'arxivo-search-mode-title-color');

  try {
    catni.classList.remove('catni-tutci-hover', 'tutci-hover');
  } catch (error) {}

  try {
    cnano.classList.remove('cnano-tutci-hover', 'tutci-hover');
  } catch (error) {}

  try {
    rimni.classList.remove('rimni-tutci-hover', 'tutci-hover');
  } catch (error) {} // velcusku.classList.remove("velcusku-tutci-hover", "tutci-hover");
  // arxivo.classList.remove("arxivo-tutci-hover", "tutci-hover");


  dasri.className = 'kampu-dasri cnano-dasri';
  outp.style.display = 'none';
  descr.style.display = 'block';
  var obj = {
    '@CLL': {
      bangu: 'english',
      cmene: 'Reference Grammar',
      pixra: '../pixra/cll.png',
      url: uncll_url
    },
    '@lojban.pw': {
      cmene: 'Live chat for your questions',
      pixra: '../pixra/nunsku.svg',
      url: "#seskari=cnano&sisku=lai jbosnu&bangu=".concat(getStateBangu(), "&versio=masno")
    },
    '@LL': {
      bangu: 'english',
      cmene: 'Learn Lojban',
      pixra: '../pixra/cogwheel-5.svg',
      url: learnlojban_url
    },
    "muplis": {
      cmene: 'la muplis',
      pixra: '../pixra/taplamuplis.svg',
      width: 2.1
    },
    en: {
      cmene: 'English-Lojban',
      pixra: '../pixra/selsku_lanci_eng.svg'
    },
    jbo: {
      cmene: "fanva fi le'e lojbo ri",
      pixra: '../pixra/lanci_jbo.svg'
    },
    ja: {
      cmene: '日本 - <span style="white-space:pre;">ロジバン</span>',
      pixra: '../pixra/selsku_lanci_jpn.svg'
    },
    'fr-facile': {
      cmene: 'français facile - lojban',
      pixra: '../pixra/selsku_lanci_fra.svg'
    },
    ru: {
      cmene: 'русский - ложбан',
      pixra: '../pixra/selsku_lanci_rus.svg'
    },
    eo: {
      cmene: 'Esperanto - Loĵbano',
      pixra: '../pixra/lanci_epo.svg'
    },
    es: {
      cmene: 'español - lojban',
      pixra: '../pixra/selsku_lanci_spa.svg'
    },
    zh: {
      cmene: '中文 - 逻辑语',
      pixra: '../pixra/selsku_lanci_zho.svg'
    }
  };
  var acc = '';
  var cisn = 100;

  for (var key in obj) {
    var _obj$key = obj[key],
        bangu = _obj$key.bangu,
        width = _obj$key.width,
        pixra = _obj$key.pixra,
        url = _obj$key.url,
        cmene = _obj$key.cmene;
    if (!width) width = 1;

    if (!bangu || bangu === window.bangu) {
      acc += "<div class='DIV_1' style='height:".concat(cisn, "px;width:").concat(width * cisn, "px;'><div class='DIV_2' style='height:").concat(cisn, "px;width:").concat(width * cisn, "px;'><span class='SPAN_3' style='width:auto;'><b class='B_4'>").concat(leijufra[cmene] || cmene, "</b></span><a").concat((url || '').indexOf('http') === 0 ? " rel='noreferrer' target='_blank'" : '', " aria-label=\"").concat(cmene.replace(/<[^>]+?>/g, ''), "\" href=\"").concat(key.indexOf('@') === 0 ? url : "#seskari=".concat(tempState.seskari !== 'fanva' ? tempState.seskari : 'catni', "&sisku=").concat(encodeUrl(lastQuery), "&bangu=").concat(key, "&versio=masno"), "\" class='A_7'><div class='DIV_8' style='height:").concat(cisn, "px;width:").concat(width * cisn, "px;background-image:url(\"").concat(pixra, "\")'></div></a></div></div>");
    }
  }

  drata.innerHTML = acc;
  drata.style.display = 'block';
}

var timers = {
  vh: null,
  typing: null
};

var delay = function () {
  return function (callback, ms, timer) {
    clearTimeout(timers[timer]);
    timers[timer] = setTimeout(callback, ms);
  };
}();

calcVH();
window.addEventListener('resize', calcVH, true);
content.addEventListener('scroll', checkScrolledNearBottom);

if (document.attachEvent) {
  document.attachEvent('onkeyup', handler);
} else {
  document.addEventListener('keyup', handler);
}

function handler(_ref13) {
  var keyCode = _ref13.keyCode;
  if (keyCode && keyCode === 191) ciska.focus();
}

if (document.readyState === 'loading') {
  pb.style.width = '37%';
  document.title = 'la sutysisku';
}

function calcVH() {
  delay(function () {
    var _document$getElementB = document.getElementById('galtu-dasri'),
        dasriHeight = _document$getElementB.clientHeight;

    var _document$getElementB2 = document.getElementById('loading'),
        loadingHeight = _document$getElementB2.clientHeight;

    var _document$getElementB3 = document.getElementById('velsku'),
        velskuHeight = _document$getElementB3.clientHeight;

    content.setAttribute('style', "height:".concat(Math.max(document.documentElement.clientHeight - dasriHeight - loadingHeight - velskuHeight, window.innerHeight - dasriHeight - loadingHeight - velskuHeight, 50), "px;"));
  }, 500, 'vh');
}

var scrollTimer = null;
var scrollJvoTimer = null;

function checkScrolledNearBottom(_ref14) {
  var target = _ref14.target;
  removePlumbs();

  if (scrollTimer !== null) {
    clearTimeout(scrollTimer);
  }

  if (scrollJvoTimer !== null) {
    clearTimeout(scrollJvoTimer);
  }

  if (state.displaying.seskari !== 'velcusku' && target.scrollTop + window.innerHeight >= outp.clientHeight - 700) {
    window.jimte += 10;
    skicu_rolodovalsi(state.displaying);
    MathJax.typesetPromise().then(function () {
      addJvoPlumbs(true);
    });
  } else {
    addJvoPlumbs(true);
  }
}

function string2Int(s, base, q) {
  s = s.replace(/[\{\}_]/g, '');
  return Math.abs(Math.round(s.split('').reduce(function (a, b) {
    a = (a << 5) - a + b.charCodeAt(0);
    return a & a;
  }, 0) % base / q) * q);
}

function veljvoLetters(v) {
  v = v.substr(1, v.length - 2).split('=');
  var jalge = v.map(function (i) {
    return i.replace(/[^A-Za-z']/g, '');
  });
  return {
    jalge: jalge,
    hasExpansion: v.length > 1 || jalge[0] && jalge[0] !== 'x'
  };
}

function veljvoString(_ref15) {
  var v = _ref15.v,
      fullDef = _ref15.fullDef,
      subtype = _ref15.subtype,
      dataArrAdded = _ref15.dataArrAdded,
      b = _ref15.b,
      veljvoLs = _ref15.veljvoLs;
  if (dataArrAdded.includes(b)) return '';
  if (subtype !== 'r' && fullDef.t !== 'lujvo') return '';
  v = v.substr(1, v.length - 2).split('=').map(function (i) {
    return subtype === 'r' ? fullDef.w + i.replace(/[^0-9]/g, '') : i.replace(/[^0-9A-Za-z']/g, '');
  });
  v = v.filter(function (i) {
    var sI = i.replace(/[0-9]/g, '');
    if (veljvoLs.filter(function (j) {
      return j.indexOf(sI) === 0 && j !== sI;
    }).length > 0) return;
    return true;
  });
  v = v.join(',');
  return " data-arr=\"".concat(v, "\"");
}

function melbi_uenzi(_ref16) {
  var def = _ref16.def,
      fullDef = _ref16.fullDef,
      query = _ref16.query,
      seskari = _ref16.seskari,
      bangu = _ref16.bangu,
      type = _ref16.type,
      index = _ref16.index;

  if (fullDef) {
    if (fullDef.bangu.indexOf('-cll') >= 0) {
      var d = Object.keys(def).map(function (address) {
        var velcki = def[address];
        return "<li><a rel='noreferrer' target='_blank' href=\"".concat(uncll_url).concat(address, "\">").concat(velcki, "</a></li>");
      }).join('');
      return {
        tergeha: "<ul class='uoldeliste' style=\"list-style-image: url(../pixra/cukta.svg);\">".concat(d, "</ul>"),
        hasExpansion: false
      };
    } else if (fullDef.bangu.indexOf('-ll') >= 0) {
      var _d = Object.keys(def).map(function (address) {
        var velcki = def[address];
        return "<li><a rel='noreferrer' target='_blank' href=\"".concat(learnlojban_url).concat(address, "\">").concat(velcki, "</a></li>");
      }).join('');

      return {
        tergeha: "<ul class='uoldeliste' style=\"list-style-image: url(../pixra/certu.svg);\">".concat(_d, "</ul>"),
        hasExpansion: false
      };
    }
  }

  var hasHtml = /<\/?a [\s\S]*>/i.test(def);
  var iterTercricmiId = 0;
  var jsonIds = [];
  var types = [];
  var dataArrAdded = [];
  var veljvoLs = [];
  var hasExpansion = false;
  if (!['cnano', 'catni', 'rimni'].includes(seskari)) seskari = 'cnano';
  var res = def.replace(/\$.*?\$/g, function (c, offset, string) {
    if (type === 'd' && typeof index !== 'undefined') {
      var rt = veljvoLetters(c);
      if (rt.hasExpansion) hasExpansion = true;
      veljvoLs = veljvoLs.concat(rt.jalge);
      var q = string.substr(offset);
      var r = new RegExp("^(".concat(c.replace(/[^a-zA-Z0-9\{\}_]/g, ''), " \\([^\\(\\)<>]+?\\)).*"));
      var hc = c;

      if (q.search(r) === 0) {
        hc = q.replace(r, '$1');
      }

      var k = {};
      k[c] = hc;
      types.push(k);
    }

    return c;
  });
  var jalge = res.replace(/\$.*?\$/g, function (c, offset, string) {
    if (type === 'd' && typeof index !== 'undefined') {
      var q = string.substr(offset);
      var r = new RegExp("^(".concat(c.replace(/[^a-zA-Z0-9\{\}_]/g, ''), " \\([^()<>]+?\\)).*"));
      var hc = c;

      if (q.search(r) === 0) {
        hc = q.replace(r, '$1');
      } else {
        var seklesi = types.filter(function (i) {
          return i[c] && i[c] !== hc;
        })[0];

        if (seklesi) {
          hc = seklesi[c];
        }
      }

      iterTercricmiId++;
      var combInd = "".concat(index, "_").concat(iterTercricmiId);
      var a = {};
      a[c] = combInd;
      jsonIds.push(a);
      var b = c.replace(/[^a-zA-Z0-9]/g, '');
      var head = '';
      if (!!(fullDef && fullDef.rfs || []).length) head = " data-head=\"1\"";
      var vel = veljvoString({
        subtype: head !== '' ? 'd' : 'r',
        v: c,
        fullDef: fullDef,
        dataArrAdded: dataArrAdded,
        b: b,
        veljvoLs: veljvoLs
      });
      c = "<span id=\"".concat(combInd, "\" class=\"terbricmi\" style=\"background-color: hsl(").concat(string2Int(hc, 256, 16), ", 100%, 90%);border-radius:").concat(string2Int(hc, 9, 1) + 3, "px\"").concat(vel).concat(head, " data-color=\"").concat(string2Int(hc, 256, 16), "\">").concat(c, "</span>");
      dataArrAdded.push(b);
    }

    return c;
  }).replace(/(<span [^<>]+?>[^\(\)<>]+?<\/span>) \([^\(\)<>]*?\bproperty of <span id="([^\(\)<>]+?)"[^<>]+?>([^\(\)<>]+?)<\/span>\)/g, function (c, _, id, t) {
    if (type === 'd') {
      var a = jsonIds.filter(function (e) {
        return e[t] !== id && e[t];
      });
      if (a[0] && a[0][t]) c = c.replace(/^<span /, "<span data-target=\"".concat(a[0][t], "\" "));
    }

    return c;
  }).replace(/\$.*?\$/g, function (c) {
    return c.replace(/\{/g, '\\curlyleft').replace(/\}/g, '\\curlyright');
  });
  if (!hasHtml) jalge = jalge.replace(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g, function (c) {
    var res = "</span><a href=\"".concat(c, "\" rel=\"noreferrer\" target=\"_blank\">").concat(basna({
      def: c,
      query: query
    }), "</a><span>");
    if (c.match(/^https?:\/\/.*\.(jpg|png)$/)) res += "<img class='se-tcidu-pixra' alt='secusku' src=\"".concat(c, "\"/>\n");
    return res;
  });
  jalge = jalge.replace(/\{.*?\}/g, function (c) {
    var c = c.substring(1, c.length - 1);
    return "</span><a class=\"a-".concat(seskari, "\" href=\"#seskari=").concat(seskari, "&sisku=").concat(encodeUrl(c), "&bangu=").concat(bangu, "&versio=masno\">").concat(basna({
      def: escHtml(c, true),
      query: query
    }), "</a><span>");
  }).replace(/\$.*?\$/g, function (c) {
    return c.replace(/\\curlyleft/g, '{').replace(/\\curlyright/g, '}');
  });
  jalge = "<span>".concat(jalge, "</span>");
  jalge = jalge.replace(/<span><\/span>/g, '').replace(/(>[^<>$]+<|>[^<>$]+\$|\$[^<>$]+<)/g, function (c // var c = c.substring(1, c.length - 1)
  ) {
    return basna({
      def: c,
      query: query
    });
  });
  return {
    tergeha: jalge,
    hasExpansion: hasExpansion
  };
}

function escapeRegExp(string) {
  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
}

function basna(_ref17) {
  var def = _ref17.def,
      query = _ref17.query;
  if (!query || query === '') return def;
  var f = "(".concat(escapeRegExp(query).replace(/ /g, '|'), "|").concat(escapeRegExp(query).replace(/'/g, 'h').replace(/ /g, '|'), ")");
  var rock = new RegExp(f, 'igm');
  return def.replace(rock, "<span class='basna'>$1</span>");
}

var UNICODE_START = 0xed80;
var lerfu_index = "ptkflscmx.' 1234bdgvrzjn`-,~    aeiouy    qw    AEIOUY";

function krulermorna(t) {
  return t.replace(/\./g, '').replace(/^/, '.').toLowerCase().replace(/([aeiou\.])u([aeiou])/g, '$1w$2').replace(/([aeiou\.])i([aeiou])/g, '$1ɩ$2').replace(/au/g, 'ḁ').replace(/ai/g, 'ą').replace(/ei/g, 'ę').replace(/oi/g, 'ǫ').replace(/\./g, '');
}

function cohukrulermorna(t) {
  return t.replace(/w/g, 'u').replace(/ɩ/g, 'i').replace(/ḁ/g, 'au').replace(/ą/g, 'ai').replace(/ę/g, 'ei').replace(/ǫ/g, 'oi');
}

function zbalermornaize(_ref18) {
  var w = _ref18.w,
      ot = _ref18.ot,
      rfs = _ref18.rfs;
  var word = krulermorna(w); // if ((def.t || '').search(/cmevla|cmene|fu['h]ivla|zi['h]evla/) >= 0) {
  //   word = krulermornaToForeignZbalermorna(word)
  // } else {

  word = word.split(/(?=[ɩw])/).map(function (spisa) {
    return cohukrulermorna(spisa).split('').map(function (lerfu) {
      return latinToZbalermorna(lerfu);
    }).join('');
  }).join(''); // }

  return word.replace(/,/g, '');
}

function latinToZbalermorna(c) {
  if (c.codePointAt(0) >= 0xed80) {
    return c;
  }

  if (c == ' ') return ' ';
  if (c == 'h' || c == 'H') c = "'";
  if (lerfu_index.includes(c)) return String.fromCodePoint(UNICODE_START + lerfu_index.indexOf(c));else if (lerfu_index.includes(c.toLowerCase())) return String.fromCodePoint(UNICODE_START + lerfu_index.indexOf(c.toLowerCase()));
  if (c == '\n') return '\n';
  if (c == '\t') return '\t';
  return c;
}

function getMatchIndices(query, d) {
  var regex = new RegExp(query, 'g');
  var result = [];
  var match;

  while (match = regex.exec(d)) {
    result.push(match.index);
  }

  return result;
}

function onlyUnique(value, index, self) {
  return self.indexOf(value) === index;
}

function ConstructArxivoValsiExtract(d, query, range) {
  var locs = getMatchIndices(query, d);
  locs = locs.map(function (i) {
    i = [i - range, i + range];
    if (i[0] < 0) i[0] = 0;
    if (i[0] >= d.length) i[0] = d.length - 1;
    return i;
  });

  for (var i = 0; i < locs.length - 1; i++) {
    if (locs[i][1] > locs[i + 1][0]) {
      locs[i][1] = locs[i + 1][1];
      locs[i + 1][0] = locs[i][0];
    }
  }

  locs = locs.map(function (i) {
    return JSON.stringify(i);
  });

  if (locs.length > 0) {
    locs = locs.filter(onlyUnique).map(function (i) {
      i = JSON.parse(i);
      var n = d.substr(i[0], i[1] - i[0]);
      n = basna({
        def: n,
        query: query
      });
      if (i[0] > 3) n = "...".concat(n);
      if (i[1] < d.length - 4) n = "".concat(n, "...");
      return n;
    });
    locs = locs.join('<br/>');
  } else {
    var n = d.substr(0, Math.min(100, d.length));
    if (n.length < d.length) n = "".concat(n, "...");
    n = basna({
      def: n,
      query: query
    });
    locs = n;
  }

  return locs;
}

function jvoValue() {
  return jvoPlumbsOn ? '⇔' : '↔';
}

window.runSearch = function (seskari, selmaho, bangu) {
  state.searching = {
    seskari: seskari,
    versio: 'selmaho',
    query: selmaho,
    bangu: bangu
  };
  DispatchState({
    replace: false
  });
};

function skicu_palodovalsi(_ref19) {
  var def = _ref19.def,
      inner = _ref19.inner,
      query = _ref19.query,
      seskari = _ref19.seskari,
      bangu = _ref19.bangu,
      index = _ref19.index;
  if (!query) query = state.searching.query;
  if (!seskari) seskari = state.searching.seskari;
  bangu = def.bangu || bangu || state.searching.bangu;
  bangu = bangu.replace(/-cll/, '');
  if (!def) def = [];
  var out = document.createElement('div');
  out.className = inner ? 'terminner' : 'termouter';
  out.classList.add('term');

  if (!inner && def.d && def.d.nasezvafahi && (def.rfs || []).length === 0) {
    out.className = 'sidju sidju-normal cll noselect';
  }

  if (index === 0) out.classList.add('searchRendered');
  var famymahos = typeof def.s === 'string' && listFamymaho[def.s] ? listFamymaho[def.s].split(" ") : undefined;

  if (typeof famymahos !== 'undefined') {
    var innerHTML = '';
    var fmm = document.createElement('h4');
    fmm.className = 'tfm';

    var _iterator = _createForOfIteratorHelper(famymahos),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var famymaho = _step.value;
        innerHTML += "&nbsp;&nbsp;<i><sup>[&nbsp;...&nbsp;&nbsp;&nbsp;<a href=\"#seskari=".concat(seskari, "&sisku=").concat(encodeUrl(famymaho), "&bangu=").concat(bangu, "&versio=masno\">").concat(escHtml(famymaho), "</a>]</sup></i>");
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    fmm.innerHTML = innerHTML;
  }

  var sh = [];

  for (var key in listFamymaho) {
    if (listFamymaho[key].split(" ").includes(def.w)) sh.push("<a href=\"#seskari=".concat(seskari, "&versio=selmaho&sisku=").concat(encodeUrl(key), "&bangu=").concat(bangu, "\">").concat(escHtml(key), "</a>"));
  }

  if (sh.length !== 0) {
    var tfm = document.createElement('div');
    tfm.classList.add('valsi');
    if (def.l) tfm.classList.add('nalojbo');
    tfm.innerHTML = "<i><sup>[".concat(sh.join(', '), "&nbsp;&nbsp;&nbsp;...&nbsp;]</sup></i>&nbsp;&nbsp;");
  }

  var selms;

  if (def.s) {
    var selmahos = typeof def.s === 'string' ? def.s.split(" ") : def.s;

    if (selmahos.length > 0) {
      selms = document.createElement('div');

      var _iterator2 = _createForOfIteratorHelper(selmahos),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var selmaho = _step2.value;
          var ss = document.createElement('button');
          ss.className = 'tutci klesi klesi-tutci';
          var text = basna({
            def: escHtml(selmaho),
            query: query
          });
          ss.innerHTML = text; // ss.onclick = window.runSearch(seskari,selmaho,bangu)

          ss.setAttribute('onclick', "window.runSearch(\"".concat(seskari, "\",\"").concat(selmaho, "\",\"").concat(bangu, "\")"));
          selms.appendChild(ss);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  }

  var jvs;

  if (def.t && !def.t.type) {
    def.t = def.t === 'bangudecomp' ? window.bangudecomp : def.t;
    jvs = document.createElement('a');
    jvs.className = 'klesi link';
    var text = def.t;
    var txt = encodeUrl(def.w).replace(/_/g, '%20');
    jvs.href = window.judri ? window.judri + txt : "#seskari=".concat(seskari === 'catni' ? 'catni' : 'cnano', "&sisku=").concat(txt, "&bangu=").concat(bansekle, "&versio=masno");

    if (window.judri) {
      jvs.setAttribute('target', '_blank');
      jvs.setAttribute('rel', 'noreferrer');
    }

    if (window.xuzganalojudri && !def.l) {
      text = "".concat(escHtml(def.t), "# ");
      if (def.d && def.d.nasezvafahi) text = "\u2795 ".concat(text);
    }

    jvs.innerHTML = text;
  }

  if (def.t && def.t.type) {
    jvs = document.createElement('a');
    jvs.href = "javascript:;";
    jvs.className = 'klesi';
    jvs.innerHTML = def.t.type;
  }

  if (def.date) {
    jvs = document.createElement('div');
    jvs.className = 'tutci klesi klesi-tutci';
    jvs.style.whiteSpace = 'nowrap';
    jvs.innerHTML = def.date;
  }

  if (def.from) {
    var ss = document.createElement('div');
    ss.className = 'tutci klesi klesi-tutci';
    ss.innerHTML = def.from;
  }

  var hasTranslateButton = false;
  var word = document.createElement('h4');
  word.classList.add('valsi');
  word.setAttribute('data-valsi', encodeURIComponent(def.w));
  if (def.l) word.classList.add('nalojbo');

  if (def.t !== window.bangudecomp && seskari !== 'fanva' && (plukaquery(def.w) == query || seskari == 'velcusku')) {
    hasTranslateButton = true;
    word.innerHTML = "".concat(basna({
      def: def.q || def.w,
      query: query
    }), " ");
  } else {
    var seskari2 = seskari;
    if (seskari === 'fanva') seskari2 = 'catni';
    word.innerHTML = "<a class=\"valsi".concat(def.l ? '' : ' nalojbo', "\" href=\"#seskari=").concat(seskari2, "&sisku=").concat(encodeUrl(def.w), "&bangu=").concat(bangu, "&versio=masno\">").concat(basna({
      def: escHtml(def.w, true),
      query: query
    }), "</a> ");
  }

  var mu = {};
  if (def.d && !def.d.nasezvafahi) mu = melbi_uenzi({
    def: def.d,
    fullDef: def,
    query: query,
    seskari: seskari,
    bangu: bangu,
    type: 'd',
    index: index
  });
  var zbalermorna;

  if (!(def.t && def.t.k === 0) && (seskari !== 'fanva' || index === 0)) {
    zbalermorna = document.createElement('h4');
    zbalermorna.classList.add('valsi', 'zbalermorna', 'segerna', 'sampu');
    zbalermorna.textContent = zbalermornaize(def);
  }

  var heading = document.createElement('heading');
  heading.classList.add('heading');
  if (tfm) heading.appendChild(tfm);
  heading.appendChild(word);
  var translateButton;

  if (hasTranslateButton) {
    translateButton = document.createElement('button');
    translateButton.className = 'fanva-tutci tutci klesi klesi-tutci';

    translateButton.onclick = function () {
      state.searching = _objectSpread(_objectSpread({}, state.searching), {}, {
        seskari: 'fanva',
        query: plukaquery(def.w)
      });
      DispatchState({
        replace: false
      });
    }; // translateButton.innerHTML = `<img src="../pixra/fanva.svg" class="cukta"/>`


    translateButton.innerHTML = "\uD83C\uDF0D";
  }

  var banguEl = document.createElement('div');
  banguEl.classList.add('segerna', 'sampu', 'noselect'); // if (supportedLangs[bangu]) {
  //   banguEl.innerHTML = `<div style='background-size:cover;background-image: url("../pixra/${supportedLangs[bangu].p}.svg");width:40px;height:21px'></div>`
  // } else 

  var ban = def.bangu && supportedLangs[def.bangu].n ? supportedLangs[def.bangu].n : def.bangu || '';
  banguEl.innerHTML = ban; // banguEl.onclick = function () {
  //   EmptyState(def.bangu);
  //   window.location = `#seskari=catni&sisku=&bangu=${def.bangu.replace(/-(cll)/, '')}`
  // }

  if (fmm) heading.appendChild(fmm);

  if (jvs) {
    var div1 = document.createElement('div');
    div1.classList.add('sampu', 'noselect');
    div1.appendChild(jvs);
    jvs = div1;
  }

  var jvo;

  if (def.t === 'lujvo' && (def.rfs || []).length > 0 && mu.hasExpansion) {
    jvo = document.createElement('input');
    jvo.type = 'button';
    jvo.classList.add('tutci', 'sance', 'jvo_plumber');
    jvo.value = jvoValue();
    jvoPlumbsOn ? jvo.classList.add('tutci-hover') : jvo.classList.remove('tutci-hover');
    jvo.onclick = addJvoPlumbs;
  }

  var whoIsFirstLine = [];

  if (zbalermorna && !selms && def.w.length < 10 && !jvo) {
    whoIsFirstLine.push('zbalermorna');
    heading.appendChild(zbalermorna);
  }

  var flex = document.createElement('heading');
  flex.style.flex = 1;
  heading.appendChild(flex);

  if (!selms) {
    heading.appendChild(banguEl);
    whoIsFirstLine.push('banguEl');

    if (jvs) {
      heading.appendChild(jvs);
      whoIsFirstLine.push('jvs');
    }
  }

  if (hasTranslateButton && def.w.length < 20) {
    heading.appendChild(translateButton);
    whoIsFirstLine.push('translateButton');
  }

  if (jvo) heading.appendChild(jvo);
  if (selms) heading.appendChild(selms);
  out.appendChild(heading); //new line buttons

  var heading2 = document.createElement('heading');
  heading2.classList.add('heading', 'heading2');
  if (zbalermorna && !whoIsFirstLine.includes('zbalermorna')) heading2.appendChild(zbalermorna);
  var flex2 = document.createElement('heading');
  flex2.style.flex = 1;
  heading2.appendChild(flex2);
  if (!whoIsFirstLine.includes('banguEl')) heading2.appendChild(banguEl);
  if (jvs && !whoIsFirstLine.includes('jvs')) heading2.appendChild(jvs);
  if (translateButton && !whoIsFirstLine.includes('translateButton')) heading2.appendChild(translateButton);
  out.appendChild(heading2); // }

  if (seskari !== 'arxivo' && def.d) {
    var n = document.createElement('div');
    n.classList.add('definition', 'valsi');

    if (def.d && def.d.nasezvafahi) {
      if (!def.t && (def.rfs || []).length === 0) return;
      n.classList.add('nasezvafahi', 'noselect');
      n.innerHTML = window.nasezvafahi;
    } else {
      var melbi = mu.tergeha;
      if (seskari !== 'velcusku') melbi = "".concat(melbi.replace(/\n/g, '<br/>'), " ");
      n.innerHTML = melbi;
    }

    out.appendChild(n);
  }

  if (seskari === 'arxivo') {
    var k = document.createElement('div');
    k.classList.add('definition', 'valsi', 'pointer');
    k.innerHTML = ConstructArxivoValsiExtract(def.d, query, 50);
    k.addEventListener('click', function () {
      k.style.display = 'none';
      k.nextElementSibling.style.display = 'block';
    });
    out.appendChild(k);
    var n = document.createElement('div');
    n.classList.add('definition', 'valsi');
    n.style.display = 'none';

    if (def.d && def.d.nasezvafahi) {
      n.classList.add('nasezvafahi', 'noselect');
      n.innerHTML = window.nasezvafahi;
    } else {
      n.innerHTML = "".concat(basna({
        def: def.d,
        query: query
      }).replace(/\n/g, '<br/>'), " ");
      n.addEventListener('click', function () {
        n.style.display = 'none';
        n.previousElementSibling.style.display = 'block';
        n.parentElement.scrollIntoView();
      });
    }

    out.appendChild(n); //add two divs. first is hidden. on click hide and display the other
  }

  if (def.n) {
    var n = document.createElement('div');
    n.classList.add('notes', 'valsi');
    n.innerHTML = "".concat(melbi_uenzi({
      def: def.n,
      query: query,
      seskari: seskari,
      bangu: bangu
    }).tergeha, " ");
    out.appendChild(n);
  } // if (index == 0 && seskari !== 'velcusku') {
  //   const { secs, div } = CLL({ valsi: def.w })
  //   if (secs && secs !== state.cll) out.appendChild(div)
  // }


  if (def.e) {
    var n = document.createElement('div');
    n.classList.add('examples', 'valsi');
    n.innerHTML = "<table class='ciksi'>".concat(melbi_uenzi({
      def: "".concat(def.e, "\n").replace(/%/g, '\n').replace(/(.*?) — (.*?)\n/g, "<tr><td class='mupligreku'><b>$1</b></td><td class='mupligreku'><i>$2</i></td></tr>\n"),
      query: query,
      seskari: seskari,
      bangu: bangu
    }).tergeha, "</table> ");
    out.appendChild(n);
  }

  if (def.k) {
    var n = document.createElement('div');
    n.className = 'related';
    n.innerHTML = "See also: ".concat(melbi_uenzi({
      def: def.k,
      query: query,
      seskari: seskari,
      bangu: bangu
    }).tergeha, " ");
    out.appendChild(n);
  }

  if ((def.r || []).length > 0 && !def.l && window.xuzganalojudri) {
    var tanxe_leirafsi = document.createElement('div');
    tanxe_leirafsi.className = 'rafsi noselect';
    var rafcme = document.createElement('div');
    rafcme.className = 'tanxe zunle_tanxe';
    rafcme.innerHTML = 'rafsi';
    tanxe_leirafsi.appendChild(rafcme);
    var rafsi = document.createElement('div');
    rafsi.className = 'tanxe pritu_tanxe';

    for (i = 0; i < def.r.length; i++) {
      var rafElem = document.createElement('span');
      rafElem.className = 'pamei';
      var raf = def.r[i]; // if ((def.t || '').match(/lujvo/)) {
      //   const a = document.createElement('a')
      //   a.setAttribute(
      //     'href',
      //     `#seskari=${seskari}&sisku=${encodeUrl(raf)}&bangu=${bangu}`
      //   )
      //   a.text = raf
      //   rafElem.appendChild(a)
      // } else {

      rafElem.innerHTML = basna({
        def: raf,
        query: query
      }); // }

      rafsi.appendChild(rafElem);
    }

    tanxe_leirafsi.appendChild(rafsi);
    out.appendChild(tanxe_leirafsi);
  }

  if ((def.rfs || []).length > 0) {
    var subDefs = document.createElement('div');
    subDefs.classList.add('definition', 'subdefinitions');

    for (var i = 0; i < def.rfs.length; i++) {
      var o = skicu_palodovalsi({
        def: def.rfs[i],
        inner: true,
        index: "".concat(index, "_").concat(i),
        query: query,
        seskari: seskari,
        bangu: bangu
      });
      if (o) subDefs.appendChild(o);
    }

    out.appendChild(subDefs);
  }

  out.addEventListener('click', clicked);
  return out;
}

function encodeValsiForWeb(v) {
  return encodeURIComponent(v).replace(/'/g, 'h');
}

function plukaquery(a) {
  if (a.charAt(0) !== '^' && a.slice(-1) !== '$') return a.replace(/\./g, ' ').replace(/ {2,}/g, ' ').replace(/’/g, "'").trim();
  return a;
}

function encodeUrl(uenzi) {
  //for bookmarkable urls
  return encodeURIComponent((uenzi || '').replace(/ /g, '_')).replace(/'/g, '%27');
}

function decodeUrl(urli) {
  return decodeURIComponent(urli.replace(/&amp;/g, '&').replace(/%27/g, "'")).replace(/[_]/g, ' ');
}

function escHtml(a, apos) {
  //for displaying text
  a = (a || '').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/\(/g, '&#40;').replace(/\)/g, '&#41;');
  if (!apos) a = a.replace(/'/g, '&#039;');
  return a;
}

function skicu_rolodovalsi(_ref20) {
  var query = _ref20.query,
      seskari = _ref20.seskari,
      bangu = _ref20.bangu,
      versio = _ref20.versio;
  var displayUpTo = Math.min(window.jimte, results.length);
  state.cll = undefined; // if (resultCount === 0) {
  //   const { secs, div } = CLL({ pre: true, valsi: state.searching.query })
  //   state.cll = secs
  //   if (div) outp.appendChild(div)
  // }

  for (; resultCount < displayUpTo; resultCount++) {
    var a = skicu_palodovalsi({
      def: results[resultCount],
      query: query,
      seskari: seskari,
      bangu: bangu,
      length: results.length,
      index: resultCount
    });
    if (a) outp.appendChild(a);
  }
}

function addAudioLinks() {
  return _addAudioLinks.apply(this, arguments);
}

function _addAudioLinks() {
  _addAudioLinks = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var els, _loop2, _i, _els;

    return _regenerator["default"].wrap(function _callee$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            //audio
            els = Array.from(document.querySelectorAll('[data-valsi]'));
            _loop2 = /*#__PURE__*/_regenerator["default"].mark(function _loop2() {
              var el;
              return _regenerator["default"].wrap(function _loop2$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      el = _els[_i];
                      el = el.textContent.trim();
                      _context.next = 4;
                      return new Promise(function (resolve) {
                        try {
                          var urli = "/sutysisku/sance/vreji/".concat(encodeValsiForWeb(el), ".mp3");
                          var http = new XMLHttpRequest();
                          http.open('HEAD', urli, true);
                          http.send();

                          http.onload = function () {
                            if (this.status == 200) {
                              var sance = new Audio(urli);
                              sance.id = "sance_".concat(encodeValsiForWeb(el));
                              sance.addEventListener('canplaythrough', function (event) {
                                var hd = Array.from(document.querySelectorAll("[data-valsi=\"".concat(encodeValsiForWeb(el), "\"]")))[0];

                                if (hd && !document.getElementById("sance_".concat(encodeValsiForWeb(el)))) {
                                  hd.insertAdjacentHTML('afterend', "<button class=\"tutci sance\" onclick=\"document.getElementById('sance_".concat(encodeValsiForWeb(el), "').play()\">\u25B6</button>"));
                                  hd.appendChild(sance);
                                }
                              });
                            }

                            resolve();
                          };

                          http.onerror = function () {
                            resolve();
                          };
                        } catch (error) {
                          resolve();
                        }
                      });

                    case 4:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _loop2);
            });
            _i = 0, _els = els;

          case 3:
            if (!(_i < _els.length)) {
              _context2.next = 8;
              break;
            }

            return _context2.delegateYield(_loop2(), "t0", 5);

          case 5:
            _i++;
            _context2.next = 3;
            break;

          case 8:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee);
  }));
  return _addAudioLinks.apply(this, arguments);
}

window.addEventListener('load', function () {
  // jimpe fi le jei su'o cnino sorcu ka'e se pilno ca lo nu jai gau akti fai le cnino papri
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.onmessage = function (_ref21) {// if (data && data.teminde && data.teminde === 'ei ningau le sorcu') {
      //   console.log('updating triggered')
      //   sorcuWorker.postMessage({
      //     kind: 'fancu',
      //     cmene: 'ningau_lerosorcu',
      //     ...state.searching,
      //   })
      // }

      var data = _ref21.data;
    };

    navigator.serviceWorker.register('./sw.js').then(function (_ref22) {
      var scope = _ref22.scope;
      console.log('ServiceWorker registration successful with scope: ', scope); //save to dexie all dumps
      // sorcuWorker.postMessage({ kind: 'cnino_sorcu', searching: state.searching, erase: true })
    }, function (err) {
      console.log('ServiceWorker registration failed: ', err);
    });
  } else if (location.protocol === 'https:') {
    alert('Your browser is not supported. Please, upgrade to the latest Chrome / Firefox / Safari.');
  } else {
    console.log("http protocol, service worker won't work");
  }
});
var rows = [['p', 't', 'k', 'f', 's', 'c'], ['b', 'd', 'g', 'v', 'z', 'j'], ['m', 'l', 'n', 'r',, 'x', "'"], ['a', 'e', 'i', 'o', 'u', 'y'], [], ['aia', 'aua'], ['au', 'ai', 'ei', 'oi']];
var audio = document.querySelector('#audio');

function text(name, text, style) {
  var el = document.createElement(name);
  el.textContent = text;
  if (style) el.className = style;
  return el;
}

function elem(name, contents, style) {
  var el = document.createElement(name);
  if (style) el.className = style;
  if (Array.isArray(contents)) contents.forEach(function (sub) {
    el.appendChild(sub);
  });else if (contents) el.appendChild(contents);
  return el;
}

function play(url) {
  audio.src = url;
  audio.play();
}

document.querySelector('#table').appendChild(elem('table', rows.map(function (row) {
  return elem('tr', row.map(function (col) {
    var button = text('button', col, 'bangu');

    button.onclick = function () {
      play("/sutysisku/sance/lerfu/".concat(encodeURIComponent(col), ".ogg"));
    };

    return elem('td', button);
  }));
}), 'centero'));

function getStateBangu() {
  var citri = macitri()[0];
  if (citri && citri.bangu) return state.searching.bangu;
  return 'en';
}

var socket;
var socket1Chat, socket1Chat_connected;
socket1Chat = io.connect("wss://jbotcan.org:9091", {
  transports: ['polling', 'websocket']
});

if (socket1Chat) {
  // socket1Chat.on("disconnect", function() {
  //   document.getElementById("velcusku").style.display = "none";
  // });
  var trimSocketChunk = function trimSocketChunk(text) {
    return text.replace(/[\n\r]+$/gim, " ").split('<')[0];
  };

  socket1Chat.on("connect", function () {
    socket1Chat_connected = true;
  });
  socket1Chat.on("connect_error", function () {
    console.log('1chat connection error'); // document.getElementById("velcusku").style.display = "none";
  });
  socket1Chat.on("sentFrom", function (data) {
    if (loadingState.loading || !socket1Chat_connected) return;
    var i = data.data;
    var msg = {
      d: trimSocketChunk(i.chunk),
      s: i.channelId,
      w: i.author
    };
    var velsku = document.getElementById('velsku_sebenji');
    velsku.innerHTML = "<img src='../pixra/nunsku.svg' class=\"velsku_pixra\"/> <span class=\"velsku_pamei\">[".concat(msg.s, "] ").concat(msg.w, ": ").concat(msg.d, "</span>");
    velsku.style.display = 'flex';
    velsku.href = "#seskari=cnano&sisku=lai jbosnu&bangu=".concat(getStateBangu(), "&versio=masno"); // if (msg.s === channel)
    // outp.appendChild(
    //   skicu_palodovalsi({
    //     def: msg,
    //     query: state.searching.query,
    //     seskari: "velcusku"
    //   })
    // );
    // outp.childNodes.length = Math.min(outp.childNodes.length, 201);
    // content.scrollTop = content.scrollHeight;
  });
  socket1Chat.on("history", function (data) {
    if (loadingState.loading || !socket1Chat_connected) return;
    var velsku = document.getElementById('velsku_sebenji');
    var i = data.slice(-1)[0];
    if (!i) return;
    var msg = {
      d: trimSocketChunk(i.chunk),
      s: i.channelId,
      w: i.author
    };
    velsku.innerHTML = "<img src='../pixra/nunsku.svg' class=\"velsku_pixra\"/> <span class=\"velsku_pamei\">[".concat(msg.s, "] ").concat(msg.w, ": ").concat(msg.d, "</span>");
    velsku.style.display = 'flex';
    velsku.href = "#seskari=cnano&sisku=lai jbosnu&bangu=".concat(getStateBangu(), "&versio=masno");
  });
}

ciska.focus();

},{"@babel/runtime/helpers/asyncToGenerator":2,"@babel/runtime/helpers/defineProperty":3,"@babel/runtime/helpers/interopRequireDefault":4,"@babel/runtime/regenerator":5}],2:[function(require,module,exports){
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;
module.exports["default"] = module.exports, module.exports.__esModule = true;
},{}],3:[function(require,module,exports){
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;
module.exports["default"] = module.exports, module.exports.__esModule = true;
},{}],4:[function(require,module,exports){
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;
module.exports["default"] = module.exports, module.exports.__esModule = true;
},{}],5:[function(require,module,exports){
module.exports = require("regenerator-runtime");

},{"regenerator-runtime":6}],6:[function(require,module,exports){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
  typeof module === "object" ? module.exports : {}
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}

},{}]},{},[1]);
